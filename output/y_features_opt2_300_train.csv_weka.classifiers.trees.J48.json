{"bagging": {"index": 355, "algo_done": [" -N 125 -R -M 97 -O -B -doNotMakeSplitPointActualValue", " -C 0.6344703663237338 -Q 35 -B -S -L", " -N 109 -R -M 24 -A -doNotMakeSplitPointActualValue", " -N 62 -R -M 14 -Q 72 -O -J", " -N 88 -R -Q 114 -A -J -doNotMakeSplitPointActualValue", " -U -Q 20 -B -doNotMakeSplitPointActualValue", " -C 0.9827510064348195 -O -L -J", " -C 0.6224254434092223 -M 115 -Q 11 -O -S -L -doNotMakeSplitPointActualValue", " -N 62 -R -Q 45 -O -S -L -A", " -U -M 111 -Q 83 -B", " -C 0.1904389105152171 -M 29 -Q 25 -O -S -L -A -doNotMakeSplitPointActualValue", " -C 0.546968069807513 -O -S -A", " -U -M 83 -Q 80 -B -doNotMakeSplitPointActualValue", " -C 0.7893293375512114 -Q 93 -O -B -S -L -A -J -doNotMakeSplitPointActualValue", " -C 0.6502485268650051 -Q 49 -O -B -S -L -A -doNotMakeSplitPointActualValue", " -C 0.20628544766537604 -L -A -J", " -C 0.5819623922445754 -M 97 -Q 110 -O -doNotMakeSplitPointActualValue", " -U -Q 74 -B", " -N 46 -R -B -S -doNotMakeSplitPointActualValue", " -C 0.4451092546007558 -Q 11 -B -L -doNotMakeSplitPointActualValue", " -N 81 -R -M 81 -S -J", " -C 0.10644438574766757 -Q 24 -O -S -A", " -C 0.33328037040440517 -Q 18 -O -S -A", " -C 0.514376993022168 -M 15 -O -L -J", " -C 0.08378632462081026 -M 88 -O -B -L -A -doNotMakeSplitPointActualValue", " -U -M 87 -O -B -doNotMakeSplitPointActualValue", " -C 0.690362796745293 -Q 121 -O -B -L -A", " -N 99 -R -Q 51 -B -S -J -doNotMakeSplitPointActualValue", " -C 0.9695833393487074 -M 128 -Q 71 -S -L -A -J -doNotMakeSplitPointActualValue", " -U -M 8 -Q 52 -B -doNotMakeSplitPointActualValue", " -C 0.6858388432403789 -M 112 -S -J -doNotMakeSplitPointActualValue", " -U -Q 119 -O -B -doNotMakeSplitPointActualValue", " -U -doNotMakeSplitPointActualValue", " -C 0.7235809209398136 -M 126 -O -S -L -doNotMakeSplitPointActualValue", " -C 0.8048440495393344 -M 31 -B -S -J -doNotMakeSplitPointActualValue", " -U -O -B", " -N 61 -R -Q 65 -O -B -S -doNotMakeSplitPointActualValue", " -N 101 -R -M 95 -Q 60 -S -L -J -doNotMakeSplitPointActualValue", " -U -M 82 -Q 74 -O -B", " -C 0.5358503018334523 -M 3 -Q 50 -L -A -doNotMakeSplitPointActualValue", " -U -M 118 -Q 45 -O -doNotMakeSplitPointActualValue", " -C 0.9017551544025479 -M 72 -O -B -S", " -U -O -B -doNotMakeSplitPointActualValue", " -N 35 -R -M 35 -B -L -A -J", " -C 0.36144933089754927 -Q 37 -O -B -S -L -J -doNotMakeSplitPointActualValue", " -U -doNotMakeSplitPointActualValue -C 0.0598434854551082 -Q 78", " -N 6 -R -Q 24 -B -S -L -J -doNotMakeSplitPointActualValue", " -U -Q 124 -O -doNotMakeSplitPointActualValue", " -N 61 -R -Q 23 -L -A", " -N 94 -R -M 79 -B -A -doNotMakeSplitPointActualValue", " -C 0.03251592714194762 -M 103 -Q 58 -S", " -C 0.5335132015343931", " -C 0.9962897215372245 -M 98 -Q 74 -B -S -A -J -doNotMakeSplitPointActualValue", " -N 113 -R -M 26 -Q 110 -O -B -J -doNotMakeSplitPointActualValue", " -U -M 31 -Q 76 -doNotMakeSplitPointActualValue", " -N 27 -R -O", " -N 30 -R -S -L -J -doNotMakeSplitPointActualValue", " -U -M 17 -Q 128", " -C 0.9926076359309737 -M 35 -Q 47 -O -B -S -L -A -J -doNotMakeSplitPointActualValue", " -C 0.8193963574127242 -B -S -J", " -U -M 128 -Q 25 -B -doNotMakeSplitPointActualValue", " -C 0.4160423932148689 -M 26 -Q 18 -O -B -S -L -doNotMakeSplitPointActualValue", " -N 63 -R -M 120 -Q 91 -O -B", " -C 0.05025629978070889 -M 45 -B -L -A -J -doNotMakeSplitPointActualValue", " -U -Q 8 -O -B -doNotMakeSplitPointActualValue", " -C 0.6778816174589581 -M 68 -Q 74 -O -doNotMakeSplitPointActualValue", " -C 0.5406231946353338 -O -B -S -A -J", " -C 0.06354593227670191 -O -S -A -J -doNotMakeSplitPointActualValue", " -U -O -B -doNotMakeSplitPointActualValue -N 28 -R -M 65 -O -B -doNotMakeSplitPointActualValue", " -C 0.9000790980605279 -Q 48 -S -A", " -N 72 -R -L", " -C 0.6651755582506638 -B -S -A -J -doNotMakeSplitPointActualValue", " -U -M 103 -O -B", " -C 0.21560763788010617 -Q 25 -B -L -J", " -C 0.7128669962588876 -M 54 -Q 73 -O -B -A", " -U -O -doNotMakeSplitPointActualValue", " -N 66 -R -Q 42 -B -L -A", " -C 0.925540676540146 -M 39 -Q 80 -O -S -doNotMakeSplitPointActualValue", " -C 0.266718842947681 -Q 93", " -U -M 68 -Q 50 -B -doNotMakeSplitPointActualValue", " -U -M 1 -B -doNotMakeSplitPointActualValue", " -N 111 -R -S -J", " -U -Q 69 -O -B", " -C 0.5019800445934218 -M 77 -Q 39 -B -S -A -doNotMakeSplitPointActualValue", " -C 0.6711473137358236 -Q 26 -O", " -C 0.13139721390276538 -B -L -J -doNotMakeSplitPointActualValue", " -C 0.873463525328719 -M 56 -Q 91 -B -S -L -J -doNotMakeSplitPointActualValue", " -N 93 -R -M 87 -Q 125 -B -S -L -A", " -C 0.11420976130620597 -M 127 -Q 44 -B -L -A", " -C 0.10444135793634657 -O -B -A -doNotMakeSplitPointActualValue", " -C 0.9934777985289839 -M 30 -Q 10 -S -A -J -doNotMakeSplitPointActualValue", " -U -M 8 -Q 70 -doNotMakeSplitPointActualValue", " -N 82 -R -Q 120 -B -S -A", " -C 0.08579274879412546 -O -B -L -J -doNotMakeSplitPointActualValue", " -N 55 -R -Q 67 -O -B -L -J -doNotMakeSplitPointActualValue", " -C 0.2903181490460175 -M 14 -O -A -J", " -N 50 -R -B -A -J", " -C 0.8999321988437398 -Q 38 -O -B -S -L -doNotMakeSplitPointActualValue", " -N 18 -R -M 92 -B -S -A", " -C 0.23502595262735881 -M 49 -O -A -J", " -N 52 -R -Q 16 -O -B -S -L -J", " -U -M 14 -B -doNotMakeSplitPointActualValue", " -N 29 -R -M 45 -Q 62 -B -L -A -J -doNotMakeSplitPointActualValue", " -N 34 -R -M 86", " -N 84 -R -A", " -N 64 -R -Q 38 -O -B -A -doNotMakeSplitPointActualValue", " -C 0.04790664972107994 -M 116 -Q 106 -B -S -A -J", " -N 14 -R -Q 7 -O -B -S -J -doNotMakeSplitPointActualValue", " -U -M 31 -B -doNotMakeSplitPointActualValue", " -U -M 119 -Q 38 -O", " -N 63 -R -B -doNotMakeSplitPointActualValue", " -U -M 42 -O", " -C 0.3921100231051923 -M 34 -O -L -J", " -U", " -U -O", " -C 0.46387323951442416 -M 1 -L -A", " -N 19 -R -Q 90 -B -S -L -J -doNotMakeSplitPointActualValue", " -C 0.7014374044368631 -O -S -J -doNotMakeSplitPointActualValue", " -C 0.14127989600779212 -M 48 -Q 41 -B -S -L -J", " -C 0.700888128476066 -O -B -S -L -A", " -N 10 -R -M 114 -Q 7 -L -J -doNotMakeSplitPointActualValue", " -U -M 122 -O -doNotMakeSplitPointActualValue", " -C 0.9162309841642244 -M 72 -Q 9 -B -L -A -J", " -C 0.2182910906203367 -J", " -C 0.8196454899532227 -Q 29 -O -B -L -J", " -C 0.3931739462117855 -O -B -S -L", " -C 0.5412850369186167 -Q 126 -O -B -A -doNotMakeSplitPointActualValue", " -C 0.0005342138679921282 -A -J", " -N 105 -R -B -J -doNotMakeSplitPointActualValue", " -C 0.7946553388252264 -M 70 -Q 78 -O -B -S -L -doNotMakeSplitPointActualValue", " -C 0.677100514387169 -M 125 -S -doNotMakeSplitPointActualValue", " -C 0.4847267526225084 -M 104 -O -B -S", " -U -M 52 -Q 110 -O -doNotMakeSplitPointActualValue", " -C 0.6886930602037905 -Q 76 -L", " -U -C 0.6765292346197691 -Q 63 -O", " -C 0.10746845541890171 -A -J", " -U -O -C 0.8555403221733947 -M 31 -Q 105 -O", " -C 0.24383706449806075 -M 35 -Q 52 -L -A -J -doNotMakeSplitPointActualValue", " -U -M 80", " -C 0.9580653541196247 -M 12 -O -A -J -doNotMakeSplitPointActualValue", " -N 70 -R -L -A -J -doNotMakeSplitPointActualValue", " -U -O -U -M 121 -O -doNotMakeSplitPointActualValue", " -C 0.16547306875869772 -M 120 -Q 27 -L -A", " -N 84 -R -M 99 -B -S -J -doNotMakeSplitPointActualValue", " -C 0.38255334005583885 -B -A", " -U -M 130 -Q 12 -B -doNotMakeSplitPointActualValue", " -C 0.24920654190168678 -M 29 -Q 5 -B -A -J", " -C 0.49014652951026205 -O -L -doNotMakeSplitPointActualValue", " -C 0.9057509814020049 -Q 50 -O -S -A -J", " -U -Q 90", " -C 0.7398059943636687 -M 85 -Q 34 -B -S -L -J -doNotMakeSplitPointActualValue", " -C 0.7579213265982471 -M 18 -Q 6 -B -S -L -A -J", " -N 76 -R -Q 57 -O -B -L -J", " -N 71 -R -Q 74 -B -S -L -A -doNotMakeSplitPointActualValue", " -C 0.640856712210405 -O -L -J -doNotMakeSplitPointActualValue", " -C 0.5395503465966233 -O -B -L", " -U -M 51 -Q 46 -doNotMakeSplitPointActualValue", " -C 0.47389514771697383 -Q 14 -J", " -U -Q 114 -B -doNotMakeSplitPointActualValue", " -C 0.5078222444254237 -O -B -A -doNotMakeSplitPointActualValue", " -U -O -B -C 0.6970925408701975 -M 125 -Q 122 -B", " -C 0.6368111900189792 -M 105 -O -S -L -J -doNotMakeSplitPointActualValue", " -U -M 110 -doNotMakeSplitPointActualValue", " -U -M 84 -Q 53 -B -doNotMakeSplitPointActualValue", " -C 0.3297947828901302 -B -doNotMakeSplitPointActualValue", " -C 0.3097137875635937 -Q 34 -O -S -doNotMakeSplitPointActualValue", " -C 0.9551954614871511 -M 99 -Q 83 -B -A", " -C 0.9853363329788343 -M 63 -Q 21 -O -B -doNotMakeSplitPointActualValue", " -N 115 -R -M 60 -O -S", " -C 0.46839324247003855 -Q 77 -A -doNotMakeSplitPointActualValue", " -N 105 -R -O -B -L -doNotMakeSplitPointActualValue", " -C 0.4098493138917946 -O -L -doNotMakeSplitPointActualValue", " -N 44 -R -O -S -J -doNotMakeSplitPointActualValue", " -C 0.9768786086957213 -Q 55 -B -L -A", " -U -U -M 84 -O -B -doNotMakeSplitPointActualValue", " -C 0.31066118877522153 -M 45 -O -B", " -C 0.529332511123746 -B -L", " -C 0.5440679460695031 -M 53 -O -L -J -doNotMakeSplitPointActualValue", " -U -M 30", " -N 10 -R -M 124 -O -B -L -J", " -C 0.5617569039899554 -Q 114 -O -B -S -doNotMakeSplitPointActualValue", " -C 0.36265055621677245 -O -B -S -A -doNotMakeSplitPointActualValue", " -N 120 -R -M 57 -B -S -L -A", " -C 0.46456129737181473 -M 36 -Q 124 -S -J", " -U -M 102 -Q 111 -B", " -C 0.43616065853789443 -M 98 -Q 81 -O -B -L -A", " -C 0.5513962614547637 -B -L", " -C 0.1177431847159589 -Q 110 -B -S -L -doNotMakeSplitPointActualValue", " -C 0.19994723033213668 -Q 57 -S -J -doNotMakeSplitPointActualValue", " -C 0.9252299863367865 -M 91 -O -B -L -J -doNotMakeSplitPointActualValue", " -N 42 -R -M 15 -Q 119 -B -S -L -A -J", " -C 0.04049997851131604 -M 5 -S -L -A -doNotMakeSplitPointActualValue", " -C 0.4787156981308911 -M 122 -Q 118 -B -A", " -N 52 -R -Q 47 -O -B -S -A -J -doNotMakeSplitPointActualValue", " -U -M 75", " -U -M 39 -Q 12", " -N 115 -R -Q 122 -O -S -L -J -doNotMakeSplitPointActualValue", " -C 0.6042949383360374 -M 107 -O -doNotMakeSplitPointActualValue", " -C 0.32330428542412115 -O -B -L -A", " -C 0.8211965068876022 -M 58 -Q 1 -O -B -S", " -U -doNotMakeSplitPointActualValue -U -M 92 -O -doNotMakeSplitPointActualValue", " -C 0.7035393587485892 -M 40 -Q 97 -O -B -S -L -A", " -N 101 -R -O -doNotMakeSplitPointActualValue", " -N 96 -R -M 35 -Q 96 -S -J", " -N 113 -R -M 51 -Q 60 -O -B -S -A", " -U -M 21 -Q 27 -B -doNotMakeSplitPointActualValue", " -N 60 -R -M 125 -Q 27 -O -B -L -J -doNotMakeSplitPointActualValue", " -C 0.5263605121458713 -O -S -A", " -N 110 -R -Q 57 -O -S -J", " -C 0.4255221758981437 -M 90 -O -L -J -doNotMakeSplitPointActualValue", " -N 25 -R -O -B -S -J", " -C 0.38437142010222525 -B -S -L -doNotMakeSplitPointActualValue", " -C 0.07122521697451079 -Q 130 -A -doNotMakeSplitPointActualValue", " -C 0.8518192853693193 -S -A", " -U -O -B -doNotMakeSplitPointActualValue -C 0.8903116086262451 -M 77 -O -doNotMakeSplitPointActualValue", " -U -M 28 -O -B", " -C 0.36747005290431267 -O -B -L", " -C 0.18263811077537118 -M 47 -Q 73 -O -B -L -A", " -N 34 -R -O -B -S -L -A -J -doNotMakeSplitPointActualValue", " -N 106 -R -O -L -A -J -doNotMakeSplitPointActualValue", " -C 0.8246347690853878 -B -J -doNotMakeSplitPointActualValue", " -C 0.06504605287823673 -M 81 -Q 62 -O -B -S -L -J -doNotMakeSplitPointActualValue", " -N 79 -R -B -S -L -A", " -U -M 130 -Q 13 -O", " -C 0.06861378551193809 -O -S -A -doNotMakeSplitPointActualValue", " -C 0.3290690186709089 -M 38 -O -B -S -L", " -U -M 9 -Q 54 -O -doNotMakeSplitPointActualValue", " -N 123 -R -M 27 -Q 100 -S -A -doNotMakeSplitPointActualValue", " -N 52 -R -O -B -A -doNotMakeSplitPointActualValue", " -C 0.10724333954127019 -Q 9 -O -S -L -A -J", " -C 0.5766086015626593 -M 51 -B -S -L", " -U -Q 103", " -N 32 -R -M 79 -Q 97 -O -doNotMakeSplitPointActualValue", " -U -Q 57 -B -doNotMakeSplitPointActualValue", " -U -O -B -C 0.22105699061531658 -M 16 -Q 74 -doNotMakeSplitPointActualValue", " -N 44 -R -M 23 -B -A", " -U -M 43 -Q 20", " -N 101 -R -S", " -C 0.35959208189264447 -M 83 -Q 103 -O -S -A -J", " -U -M 93 -Q 21 -O -B -doNotMakeSplitPointActualValue", " -C 0.07198633135675547 -M 65 -B -S -doNotMakeSplitPointActualValue", " -U -M 75 -Q 42 -O -B", " -C 0.8474356824014507 -Q 37 -O -A -J -doNotMakeSplitPointActualValue", " -N 41 -R -Q 85 -L -J -doNotMakeSplitPointActualValue", " -C 0.57638151348583 -M 76 -Q 78 -O -B -S -L", " -C 0.7744869318181278 -M 26 -Q 18 -B -S -J", " -C 0.4085768277007249 -O -B -S -L -A -doNotMakeSplitPointActualValue", " -C 0.46892290776209866 -M 33 -Q 26 -B -doNotMakeSplitPointActualValue", " -U -Q 23 -O -B", " -C 0.7215304262158203 -M 10 -Q 39 -O -J", " -U -M 22 -O", " -C 0.1228503330210916 -Q 95 -O -B -S -L -J", " -U -B", " -N 36 -R -Q 112 -O -S -L -A -doNotMakeSplitPointActualValue", " -N 128 -R -M 36 -Q 115 -L -J -doNotMakeSplitPointActualValue", " -N 70 -R -M 120 -Q 39 -O -B -A -J", " -C 0.517970084737733 -O -B -S -L -doNotMakeSplitPointActualValue", " -U -Q 68 -doNotMakeSplitPointActualValue", " -C 0.6184764938085036 -M 104 -Q 57 -L -J", " -N 68 -R -B -S -A", " -N 118 -R -L -A -J", " -C 0.36362669866932495 -Q 103 -O -A -J", " -C 0.07368024048095734 -B -L -doNotMakeSplitPointActualValue", " -U -M 50 -Q 106 -O -B -doNotMakeSplitPointActualValue", " -C 0.6090900670056176 -Q 111 -B -S -A -J -doNotMakeSplitPointActualValue", " -C 0.16041152707833406 -M 63 -Q 84 -S -A -doNotMakeSplitPointActualValue", " -U -M 101 -Q 72 -O", " -C 0.2461738081464394 -A -J -doNotMakeSplitPointActualValue", " -C 0.8039260839970601 -M 41 -L -A -J -doNotMakeSplitPointActualValue", " -N 36 -R -B -L -A -doNotMakeSplitPointActualValue", " -C 0.24221891916887905 -Q 32 -S -L -A -doNotMakeSplitPointActualValue", " -C 0.8533399852445631 -M 45 -Q 47 -O -S -L -doNotMakeSplitPointActualValue", " -C 0.45168083052171193 -M 115 -B -S -doNotMakeSplitPointActualValue", " -C 0.4781873689419808 -O -S", " -N 43 -R -Q 67 -O -S", " -C 0.05454256084968445 -M 86 -Q 69 -B -L -A -J", " -C 0.8003683281462705 -M 48 -Q 43 -L -doNotMakeSplitPointActualValue", " -U -B -C 0.7911609705670085 -B", " -C 0.29065797249762204 -M 19 -O -A -J -doNotMakeSplitPointActualValue", " -U -Q 64 -O", " -N 123 -R -Q 75 -O -B -S -J -doNotMakeSplitPointActualValue", " -C 0.4918764851862849 -M 39 -O -B -S -A", " -C 0.8951906150540058 -M 103 -Q 29 -B -L -J", " -C 0.5128204226121733 -Q 79 -A -J -doNotMakeSplitPointActualValue", " -C 0.9338087261553387 -Q 111 -A -J -doNotMakeSplitPointActualValue", " -C 0.42908026702060276 -M 102 -Q 120 -O -S -A -J -doNotMakeSplitPointActualValue", " -N 47 -R -M 119 -O -B -S -A -doNotMakeSplitPointActualValue", " -C 0.4652754579961046 -B -S -L -doNotMakeSplitPointActualValue", " -C 0.5256818783043911 -Q 11 -B -J -doNotMakeSplitPointActualValue", " -U -O -C 0.16969663228861442 -M 43 -Q 10 -O", " -C 0.8706871306844499 -Q 60 -O -doNotMakeSplitPointActualValue", " -N 106 -R -B -S -A -J", " -U -M 76 -O", " -C 0.30840731386468323 -O -S -J -doNotMakeSplitPointActualValue", " -N 45 -R -Q 31 -doNotMakeSplitPointActualValue", " -N 102 -R -M 94 -O -S -J", " -N 10 -R -O -B -L -J", " -C 0.36710162989282313 -M 121 -Q 99 -O -L -J -doNotMakeSplitPointActualValue", " -N 37 -R -M 93 -B -L -A -doNotMakeSplitPointActualValue", " -U -B -C 0.7783079004185084 -doNotMakeSplitPointActualValue", " -N 65 -R -M 125 -B -S -A", " -C 0.26102518663252483 -Q 40 -O -A -J -doNotMakeSplitPointActualValue", " -U -O -doNotMakeSplitPointActualValue -C 0.06884677611119694 -Q 9 -O -B -doNotMakeSplitPointActualValue", " -N 11 -R -M 10 -Q 26 -O -S -L -J -doNotMakeSplitPointActualValue", " -C 0.2555630558470777 -Q 80 -O -L -J", " -U -B -C 0.16001299040022376 -M 81 -O -doNotMakeSplitPointActualValue", " -C 0.45962394803463047 -M 25 -Q 122 -L -A -J", " -C 0.03377749223608617 -O -B -S -L -A -J -doNotMakeSplitPointActualValue", " -U -M 3 -Q 49 -O -B", " -C 0.6543427583391545 -M 11 -Q 47 -O -S -A -J -doNotMakeSplitPointActualValue", " -C 0.848406985208927 -M 37 -O -B -L -J", " -N 99 -R -M 122 -Q 7 -O -S -doNotMakeSplitPointActualValue", " -N 73 -R -O -B -L -A -doNotMakeSplitPointActualValue", " -N 83 -R -J", " -C 0.736969823396783 -Q 54 -O -B -doNotMakeSplitPointActualValue", " -C 0.6998119962975203 -M 128 -Q 105 -O -B -L -A -J", " -C 0.587991338799764 -M 34 -S -L -A -J", " -C 0.7421646246257468 -M 91 -O -S -L -A", " -C 0.6293591117185856 -O -S -doNotMakeSplitPointActualValue", " -C 0.8373460282153039 -Q 95 -B -S -A -J -doNotMakeSplitPointActualValue", " -N 102 -R -M 58 -Q 68 -O -B -L -doNotMakeSplitPointActualValue", " -U -Q 74 -O -doNotMakeSplitPointActualValue", " -C 0.540495713772017 -Q 60 -O -S -L -A -J", " -U -O -doNotMakeSplitPointActualValue -U -M 82 -Q 6", " -U -M 67 -O", " -N 30 -R -O -B -S", " -U -M 7 -Q 44 -B -doNotMakeSplitPointActualValue", " -U -O -doNotMakeSplitPointActualValue -C 0.9087137630663158 -M 40 -O -doNotMakeSplitPointActualValue", " -C 0.5636392627294602 -M 23 -O -A -J", " -C 0.9693750101661328 -M 80 -L -A -J", " -N 125 -R -Q 48 -O -S -L", " -U -M 88 -Q 92 -doNotMakeSplitPointActualValue", " -N 3 -R -M 94 -Q 110 -O -L -doNotMakeSplitPointActualValue", " -C 0.3036306024979559 -M 129 -B -A -J", " -U -M 67 -O -doNotMakeSplitPointActualValue", " -U -M 36 -O -B -doNotMakeSplitPointActualValue", " -C 0.6462804202310842 -M 106 -B -A -J", " -C 0.9031484813728665 -M 50 -Q 128 -O -S -L -A", " -C 0.3115284289395521 -M 99 -B -J -doNotMakeSplitPointActualValue", " -C 0.8352464699259506 -M 73 -A -J", " -U -M 53 -O", " -C 0.7734441341598773 -M 38 -Q 41 -O -L", " -C 0.3560654133375144 -Q 43 -S", " -C 0.14211843839598404 -M 4 -O -L -A", " -C 0.4257395715235477 -Q 20 -S -J", " -C 0.2564539174127567 -Q 54 -O -S -L -A -J", " -C 0.9700245555304193 -M 117 -O -A", " -N 18 -R -M 30 -L -A -J", " -C 0.8809120987696255 -M 42 -Q 34 -B -S -doNotMakeSplitPointActualValue", " -U -Q 49 -O -doNotMakeSplitPointActualValue", " -N 11 -R -O -B -A -doNotMakeSplitPointActualValue", " -C 0.7358250068055687 -M 49 -B", " -C 0.6256175586117785 -Q 91 -O -S -A", " -U -O -doNotMakeSplitPointActualValue -C 0.961751542919624 -Q 110 -O -B", " -N 117 -R -M 31 -Q 86 -O -B -S -L"], "results": [{"i": 0, "mesure": 0, "algo_params": " -N 125 -R -M 97 -O -B -doNotMakeSplitPointActualValue", "bagging_params": " -O -num-slots 23 -I 13 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.NullPointerException\n\tweka.classifiers.trees.j48.ClassifierTree.getProbs(ClassifierTree.java:684)\n\tweka.classifiers.trees.j48.ClassifierTree.distributionForInstance(ClassifierTree.java:284)\n\tweka.classifiers.trees.J48.distributionForInstance(J48.java:327)\n\tweka.classifiers.meta.Bagging.buildClassifier(Bagging.java:751)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.classifiers.trees.j48.ClassifierTree.getProbs(ClassifierTree.java:684)\n\tat weka.classifiers.trees.j48.ClassifierTree.distributionForInstance(ClassifierTree.java:284)\n\tat weka.classifiers.trees.J48.distributionForInstance(J48.java:327)\n\tat weka.classifiers.meta.Bagging.buildClassifier(Bagging.java:751)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 1, "mesure": 0.529, "algo_params": " -C 0.6344703663237338 -Q 35 -B -S -L", "bagging_params": " -num-slots 29 -I 27 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          73               56.1538 %\nIncorrectly Classified Instances        57               43.8462 %\nKappa statistic                          0.1168\nMean absolute error                      0.4865\nRoot mean squared error                  0.519 \nRelative absolute error                 97.4679 %\nRoot relative squared error            103.8622 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.632    0.516    0.573      0.632    0.601      0.117    0.529     0.541     LOW\n                 0.484    0.368    0.545      0.484    0.513      0.117    0.529     0.553     HIGH\nWeighted Avg.    0.562    0.445    0.560      0.562    0.559      0.117    0.529     0.547     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 43 25 |  a = LOW\n 32 30 |  b = HIGH\n\n"}, {"i": 2, "mesure": 0, "algo_params": " -N 109 -R -M 24 -A -doNotMakeSplitPointActualValue", "bagging_params": " -P 85 -O -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tweka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tat weka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 3, "mesure": 0.464, "algo_params": " -N 62 -R -M 14 -Q 72 -O -J", "bagging_params": " -P 54 -O -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          63               48.4615 %\nIncorrectly Classified Instances        67               51.5385 %\nKappa statistic                         -0.0471\nMean absolute error                      0.5029\nRoot mean squared error                  0.5081\nRelative absolute error                100.7563 %\nRoot relative squared error            101.6939 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.647    0.694    0.506      0.647    0.568      -0.049   0.464     0.495     LOW\n                 0.306    0.353    0.442      0.306    0.362      -0.049   0.464     0.480     HIGH\nWeighted Avg.    0.485    0.531    0.475      0.485    0.470      -0.049   0.464     0.488     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 44 24 |  a = LOW\n 43 19 |  b = HIGH\n\n"}, {"i": 4, "mesure": 0, "algo_params": " -N 88 -R -Q 114 -A -J -doNotMakeSplitPointActualValue", "bagging_params": " -O -S 128 -I 15 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tweka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tat weka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 5, "mesure": 0.53, "algo_params": " -U -Q 20 -B -doNotMakeSplitPointActualValue", "bagging_params": " -O -num-slots 30 -I 22 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          69               53.0769 %\nIncorrectly Classified Instances        61               46.9231 %\nKappa statistic                          0.0562\nMean absolute error                      0.4837\nRoot mean squared error                  0.5188\nRelative absolute error                 96.9015 %\nRoot relative squared error            103.8319 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.588    0.532    0.548      0.588    0.567      0.056    0.530     0.546     LOW\n                 0.468    0.412    0.509      0.468    0.487      0.056    0.530     0.548     HIGH\nWeighted Avg.    0.531    0.475    0.529      0.531    0.529      0.056    0.530     0.547     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 40 28 |  a = LOW\n 33 29 |  b = HIGH\n\n"}, {"i": 6, "mesure": 0.516, "algo_params": " -C 0.9827510064348195 -O -L -J", "bagging_params": " -O -S 39 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          64               49.2308 %\nIncorrectly Classified Instances        66               50.7692 %\nKappa statistic                         -0.0234\nMean absolute error                      0.4901\nRoot mean squared error                  0.5424\nRelative absolute error                 98.1815 %\nRoot relative squared error            108.5445 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.574    0.597    0.513      0.574    0.542      -0.024   0.516     0.554     LOW\n                 0.403    0.426    0.463      0.403    0.431      -0.024   0.516     0.525     HIGH\nWeighted Avg.    0.492    0.516    0.489      0.492    0.489      -0.024   0.516     0.540     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 39 29 |  a = LOW\n 37 25 |  b = HIGH\n\n"}, {"i": 7, "mesure": 0.5, "algo_params": " -C 0.6224254434092223 -M 115 -Q 11 -O -S -L -doNotMakeSplitPointActualValue", "bagging_params": " -P 1 -O -I 7 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                          0     \nMean absolute error                      0.5   \nRoot mean squared error                  0.7071\nRelative absolute error                100.1684 %\nRoot relative squared error            141.5103 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.500    0.500    0.523      0.500    0.511      0.000    0.500     0.523     LOW\n                 0.500    0.500    0.477      0.500    0.488      0.000    0.500     0.477     HIGH\nWeighted Avg.    0.500    0.500    0.501      0.500    0.500      0.000    0.500     0.501     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 34 34 |  a = LOW\n 31 31 |  b = HIGH\n\n"}, {"i": 8, "mesure": 0.527, "algo_params": " -N 62 -R -Q 45 -O -S -L -A", "bagging_params": " -P 100 -O -I 13 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          70               53.8462 %\nIncorrectly Classified Instances        60               46.1538 %\nKappa statistic                          0.0492\nMean absolute error                      0.4988\nRoot mean squared error                  0.4996\nRelative absolute error                 99.9217 %\nRoot relative squared error             99.9887 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.838    0.790    0.538      0.838    0.655      0.062    0.527     0.530     LOW\n                 0.210    0.162    0.542      0.210    0.302      0.062    0.527     0.512     HIGH\nWeighted Avg.    0.538    0.491    0.540      0.538    0.487      0.062    0.527     0.522     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 57 11 |  a = LOW\n 49 13 |  b = HIGH\n\n"}, {"i": 9, "mesure": 0.492, "algo_params": " -U -M 111 -Q 83 -B", "bagging_params": " -P 22 -O -S 77 -num-slots 21 -I 8", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          67               51.5385 %\nIncorrectly Classified Instances        63               48.4615 %\nKappa statistic                         -0.0064\nMean absolute error                      0.4994\nRoot mean squared error                  0.5008\nRelative absolute error                100.0528 %\nRoot relative squared error            100.232  %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.897    0.903    0.521      0.897    0.659      -0.010   0.491     0.513     LOW\n                 0.097    0.103    0.462      0.097    0.160      -0.010   0.494     0.473     HIGH\nWeighted Avg.    0.515    0.522    0.493      0.515    0.421      -0.010   0.492     0.494     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 61  7 |  a = LOW\n 56  6 |  b = HIGH\n\n"}, {"i": 10, "mesure": 0.494, "algo_params": " -C 0.1904389105152171 -M 29 -Q 25 -O -S -L -A -doNotMakeSplitPointActualValue", "bagging_params": " -P 14 -O -S 100 -I 14 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                         -0.0127\nMean absolute error                      0.4994\nRoot mean squared error                  0.5017\nRelative absolute error                100.0399 %\nRoot relative squared error            100.4089 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.794    0.806    0.519      0.794    0.628      -0.015   0.494     0.520     LOW\n                 0.194    0.206    0.462      0.194    0.273      -0.015   0.494     0.472     HIGH\nWeighted Avg.    0.508    0.520    0.492      0.508    0.459      -0.015   0.494     0.497     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 54 14 |  a = LOW\n 50 12 |  b = HIGH\n\n"}, {"i": 11, "mesure": 0.509, "algo_params": " -C 0.546968069807513 -O -S -A", "bagging_params": " -P 3 -O -num-slots 24 -I 6 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                          0.0062\nMean absolute error                      0.4977\nRoot mean squared error                  0.5075\nRelative absolute error                 99.706  %\nRoot relative squared error            101.5688 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.603    0.597    0.526      0.603    0.562      0.006    0.509     0.529     LOW\n                 0.403    0.397    0.481      0.403    0.439      0.006    0.509     0.485     HIGH\nWeighted Avg.    0.508    0.502    0.504      0.508    0.503      0.006    0.509     0.508     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 41 27 |  a = LOW\n 37 25 |  b = HIGH\n\n"}, {"i": 12, "mesure": 0.485, "algo_params": " -U -M 83 -Q 80 -B -doNotMakeSplitPointActualValue", "bagging_params": " -P 90 -num-slots 28 -I 20 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          67               51.5385 %\nIncorrectly Classified Instances        63               48.4615 %\nKappa statistic                         -0.0064\nMean absolute error                      0.4994\nRoot mean squared error                  0.4998\nRelative absolute error                100.048  %\nRoot relative squared error            100.0293 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.897    0.903    0.521      0.897    0.659      -0.010   0.485     0.516     LOW\n                 0.097    0.103    0.462      0.097    0.160      -0.010   0.485     0.467     HIGH\nWeighted Avg.    0.515    0.522    0.493      0.515    0.421      -0.010   0.485     0.493     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 61  7 |  a = LOW\n 56  6 |  b = HIGH\n\n"}, {"i": 13, "mesure": 0.467, "algo_params": " -C 0.7893293375512114 -Q 93 -O -B -S -L -A -J -doNotMakeSplitPointActualValue", "bagging_params": " -num-slots 15 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          61               46.9231 %\nIncorrectly Classified Instances        69               53.0769 %\nKappa statistic                         -0.0737\nMean absolute error                      0.5066\nRoot mean squared error                  0.5493\nRelative absolute error                101.4982 %\nRoot relative squared error            109.9377 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.588    0.661    0.494      0.588    0.537      -0.075   0.467     0.492     LOW\n                 0.339    0.412    0.429      0.339    0.378      -0.075   0.467     0.496     HIGH\nWeighted Avg.    0.469    0.542    0.463      0.469    0.461      -0.075   0.467     0.494     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 40 28 |  a = LOW\n 41 21 |  b = HIGH\n\n"}, {"i": 14, "mesure": 0.519, "algo_params": " -C 0.6502485268650051 -Q 49 -O -B -S -L -A -doNotMakeSplitPointActualValue", "bagging_params": " -O -S 19 -I 28 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                          0.0048\nMean absolute error                      0.491 \nRoot mean squared error                  0.5187\nRelative absolute error                 98.3674 %\nRoot relative squared error            103.808  %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.618    0.613    0.525      0.618    0.568      0.005    0.519     0.522     LOW\n                 0.387    0.382    0.480      0.387    0.429      0.005    0.519     0.556     HIGH\nWeighted Avg.    0.508    0.503    0.504      0.508    0.501      0.005    0.519     0.538     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 42 26 |  a = LOW\n 38 24 |  b = HIGH\n\n"}, {"i": 15, "mesure": 0.477, "algo_params": " -C 0.20628544766537604 -L -A -J", "bagging_params": " -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          62               47.6923 %\nIncorrectly Classified Instances        68               52.3077 %\nKappa statistic                         -0.0589\nMean absolute error                      0.503 \nRoot mean squared error                  0.5453\nRelative absolute error                100.7629 %\nRoot relative squared error            109.1319 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.603    0.661    0.500      0.603    0.547      -0.060   0.477     0.495     LOW\n                 0.339    0.397    0.438      0.339    0.382      -0.060   0.477     0.524     HIGH\nWeighted Avg.    0.477    0.535    0.470      0.477    0.468      -0.060   0.477     0.509     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 41 27 |  a = LOW\n 41 21 |  b = HIGH\n\n"}, {"i": 16, "mesure": 0.481, "algo_params": " -C 0.5819623922445754 -M 97 -Q 110 -O -doNotMakeSplitPointActualValue", "bagging_params": " -P 40 -num-slots 29 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                         -0.0127\nMean absolute error                      0.4996\nRoot mean squared error                  0.5005\nRelative absolute error                100.0846 %\nRoot relative squared error            100.1558 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.794    0.806    0.519      0.794    0.628      -0.015   0.481     0.508     LOW\n                 0.194    0.206    0.462      0.194    0.273      -0.015   0.481     0.466     HIGH\nWeighted Avg.    0.508    0.520    0.492      0.508    0.459      -0.015   0.481     0.488     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 54 14 |  a = LOW\n 50 12 |  b = HIGH\n\n"}, {"i": 17, "mesure": 0.492, "algo_params": " -U -Q 74 -B", "bagging_params": " -P 44 -I 19 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                          0.0005\nMean absolute error                      0.4972\nRoot mean squared error                  0.5224\nRelative absolute error                 99.6004 %\nRoot relative squared error            104.5533 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.662    0.661    0.523      0.662    0.584      0.001    0.492     0.517     LOW\n                 0.339    0.338    0.477      0.339    0.396      0.001    0.492     0.555     HIGH\nWeighted Avg.    0.508    0.507    0.501      0.508    0.495      0.001    0.492     0.535     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 45 23 |  a = LOW\n 41 21 |  b = HIGH\n\n"}, {"i": 18, "mesure": 0.455, "algo_params": " -N 46 -R -B -S -doNotMakeSplitPointActualValue", "bagging_params": " -O -S 84 -num-slots 6 -I 6 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          61               46.9231 %\nIncorrectly Classified Instances        69               53.0769 %\nKappa statistic                         -0.0846\nMean absolute error                      0.5014\nRoot mean squared error                  0.5103\nRelative absolute error                100.4453 %\nRoot relative squared error            102.1217 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.691    0.774    0.495      0.691    0.577      -0.093   0.455     0.499     LOW\n                 0.226    0.309    0.400      0.226    0.289      -0.093   0.455     0.487     HIGH\nWeighted Avg.    0.469    0.552    0.450      0.469    0.439      -0.093   0.455     0.493     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 47 21 |  a = LOW\n 48 14 |  b = HIGH\n\n"}, {"i": 19, "mesure": 0.494, "algo_params": " -C 0.4451092546007558 -Q 11 -B -L -doNotMakeSplitPointActualValue", "bagging_params": " -O -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                          0.0062\nMean absolute error                      0.5009\nRoot mean squared error                  0.5485\nRelative absolute error                100.3439 %\nRoot relative squared error            109.7773 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.603    0.597    0.526      0.603    0.562      0.006    0.494     0.522     LOW\n                 0.403    0.397    0.481      0.403    0.439      0.006    0.494     0.509     HIGH\nWeighted Avg.    0.508    0.502    0.504      0.508    0.503      0.006    0.494     0.516     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 41 27 |  a = LOW\n 37 25 |  b = HIGH\n\n"}, {"i": 20, "mesure": 0, "algo_params": " -N 81 -R -M 81 -S -J", "bagging_params": " -S 67 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tweka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tat weka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 21, "mesure": 0.509, "algo_params": " -C 0.10644438574766757 -Q 24 -O -S -A", "bagging_params": " -O -S 105 -num-slots 1 -I 25 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0.0359\nMean absolute error                      0.4911\nRoot mean squared error                  0.5173\nRelative absolute error                 98.394  %\nRoot relative squared error            103.5319 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.632    0.597    0.538      0.632    0.581      0.037    0.509     0.508     LOW\n                 0.403    0.368    0.500      0.403    0.446      0.037    0.509     0.566     HIGH\nWeighted Avg.    0.523    0.487    0.520      0.523    0.517      0.037    0.509     0.536     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 43 25 |  a = LOW\n 37 25 |  b = HIGH\n\n"}, {"i": 22, "mesure": 0.509, "algo_params": " -C 0.33328037040440517 -Q 18 -O -S -A", "bagging_params": " -O -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0.0373\nMean absolute error                      0.4936\nRoot mean squared error                  0.5323\nRelative absolute error                 98.8871 %\nRoot relative squared error            106.5345 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.618    0.581    0.538      0.618    0.575      0.038    0.509     0.534     LOW\n                 0.419    0.382    0.500      0.419    0.456      0.038    0.509     0.524     HIGH\nWeighted Avg.    0.523    0.486    0.520      0.523    0.518      0.038    0.509     0.530     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 42 26 |  a = LOW\n 36 26 |  b = HIGH\n\n"}, {"i": 23, "mesure": 0.519, "algo_params": " -C 0.514376993022168 -M 15 -O -L -J", "bagging_params": " -S 114 -I 26 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                          0.0062\nMean absolute error                      0.4908\nRoot mean squared error                  0.5096\nRelative absolute error                 98.3255 %\nRoot relative squared error            101.9902 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.603    0.597    0.526      0.603    0.562      0.006    0.519     0.534     LOW\n                 0.403    0.397    0.481      0.403    0.439      0.006    0.519     0.547     HIGH\nWeighted Avg.    0.508    0.502    0.504      0.508    0.503      0.006    0.519     0.540     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 41 27 |  a = LOW\n 37 25 |  b = HIGH\n\n"}, {"i": 24, "mesure": 0.481, "algo_params": " -C 0.08378632462081026 -M 88 -O -B -L -A -doNotMakeSplitPointActualValue", "bagging_params": " -P 96 -O -num-slots 16 -I 25 -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4993\nRoot mean squared error                  0.4999\nRelative absolute error                100.0332 %\nRoot relative squared error            100.0373 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.481     0.508     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.481     0.466     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.481     0.488     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 25, "mesure": 0.485, "algo_params": " -U -M 87 -O -B -doNotMakeSplitPointActualValue", "bagging_params": " -S 94 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          67               51.5385 %\nIncorrectly Classified Instances        63               48.4615 %\nKappa statistic                         -0.0064\nMean absolute error                      0.4992\nRoot mean squared error                  0.5002\nRelative absolute error                100.0129 %\nRoot relative squared error            100.1108 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.897    0.903    0.521      0.897    0.659      -0.010   0.485     0.511     LOW\n                 0.097    0.103    0.462      0.097    0.160      -0.010   0.485     0.468     HIGH\nWeighted Avg.    0.515    0.522    0.493      0.515    0.421      -0.010   0.485     0.490     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 61  7 |  a = LOW\n 56  6 |  b = HIGH\n\n"}, {"i": 26, "mesure": 0.447, "algo_params": " -C 0.690362796745293 -Q 121 -O -B -L -A", "bagging_params": " -P 10 -O -S 112 -num-slots 7", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          69               53.0769 %\nIncorrectly Classified Instances        61               46.9231 %\nKappa statistic                          0.0439\nMean absolute error                      0.509 \nRoot mean squared error                  0.5242\nRelative absolute error                101.9806 %\nRoot relative squared error            104.9024 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.721    0.677    0.538      0.721    0.616      0.047    0.447     0.486     LOW\n                 0.323    0.279    0.513      0.323    0.396      0.047    0.447     0.459     HIGH\nWeighted Avg.    0.531    0.488    0.526      0.531    0.511      0.047    0.447     0.473     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 49 19 |  a = LOW\n 42 20 |  b = HIGH\n\n"}, {"i": 27, "mesure": 0, "algo_params": " -N 99 -R -Q 51 -B -S -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 78 -O -S 102 -output-out-of-bag-complexity-statistics", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tweka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tweka.classifiers.evaluation.Evaluation.crossValidateModel(Evaluation.java:858)\n\tweka.classifiers.evaluation.Evaluation.crossValidateModel(Evaluation.java:812)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1927)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tat weka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tat weka.classifiers.evaluation.Evaluation.crossValidateModel(Evaluation.java:858)\n\tat weka.classifiers.evaluation.Evaluation.crossValidateModel(Evaluation.java:812)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1927)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 28, "mesure": 0.491, "algo_params": " -C 0.9695833393487074 -M 128 -Q 71 -S -L -A -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 89 -O -num-slots 29 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4992\nRoot mean squared error                  0.4997\nRelative absolute error                100.0142 %\nRoot relative squared error            100.0067 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.491     0.519     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.491     0.470     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.491     0.496     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 29, "mesure": 0.563, "algo_params": " -U -M 8 -Q 52 -B -doNotMakeSplitPointActualValue", "bagging_params": " -S 75 -I 12 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          73               56.1538 %\nIncorrectly Classified Instances        57               43.8462 %\nKappa statistic                          0.1143\nMean absolute error                      0.477 \nRoot mean squared error                  0.509 \nRelative absolute error                 95.5584 %\nRoot relative squared error            101.8554 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.662    0.548    0.570      0.662    0.612      0.116    0.563     0.584     LOW\n                 0.452    0.338    0.549      0.452    0.496      0.116    0.563     0.569     HIGH\nWeighted Avg.    0.562    0.448    0.560      0.562    0.557      0.116    0.563     0.577     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 45 23 |  a = LOW\n 34 28 |  b = HIGH\n\n"}, {"i": 30, "mesure": 0.485, "algo_params": " -C 0.6858388432403789 -M 112 -S -J -doNotMakeSplitPointActualValue", "bagging_params": " -O -S 57 -num-slots 6 -I 8 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                         -0.0188\nMean absolute error                      0.4996\nRoot mean squared error                  0.5002\nRelative absolute error                100.0943 %\nRoot relative squared error            100.1106 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.691    0.710    0.516      0.691    0.591      -0.020   0.485     0.516     LOW\n                 0.290    0.309    0.462      0.290    0.356      -0.020   0.485     0.467     HIGH\nWeighted Avg.    0.500    0.519    0.490      0.500    0.479      -0.020   0.485     0.493     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 47 21 |  a = LOW\n 44 18 |  b = HIGH\n\n"}, {"i": 31, "mesure": 0.474, "algo_params": " -U -Q 119 -O -B -doNotMakeSplitPointActualValue", "bagging_params": " -S 111 -num-slots 25 -I 15 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          63               48.4615 %\nIncorrectly Classified Instances        67               51.5385 %\nKappa statistic                         -0.0352\nMean absolute error                      0.5043\nRoot mean squared error                  0.5383\nRelative absolute error                101.0346 %\nRoot relative squared error            107.7226 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.529    0.565    0.507      0.529    0.518      -0.035   0.474     0.480     LOW\n                 0.435    0.471    0.458      0.435    0.446      -0.035   0.475     0.509     HIGH\nWeighted Avg.    0.485    0.520    0.483      0.485    0.484      -0.035   0.474     0.493     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 36 32 |  a = LOW\n 35 27 |  b = HIGH\n\n"}, {"i": 32, "mesure": 0.528, "algo_params": " -U -doNotMakeSplitPointActualValue", "bagging_params": " -S 6 -I 29 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          70               53.8462 %\nIncorrectly Classified Instances        60               46.1538 %\nKappa statistic                          0.0723\nMean absolute error                      0.4888\nRoot mean squared error                  0.5224\nRelative absolute error                 97.925  %\nRoot relative squared error            104.5472 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.588    0.516    0.556      0.588    0.571      0.072    0.528     0.532     LOW\n                 0.484    0.412    0.517      0.484    0.500      0.072    0.528     0.558     HIGH\nWeighted Avg.    0.538    0.466    0.537      0.538    0.537      0.072    0.528     0.545     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 40 28 |  a = LOW\n 32 30 |  b = HIGH\n\n"}, {"i": 33, "mesure": 0.492, "algo_params": " -C 0.7235809209398136 -M 126 -O -S -L -doNotMakeSplitPointActualValue", "bagging_params": " -P 26 -O -num-slots 18 -I 28 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          67               51.5385 %\nIncorrectly Classified Instances        63               48.4615 %\nKappa statistic                         -0.0064\nMean absolute error                      0.4994\nRoot mean squared error                  0.5004\nRelative absolute error                100.0418 %\nRoot relative squared error            100.1352 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.897    0.903    0.521      0.897    0.659      -0.010   0.492     0.522     LOW\n                 0.097    0.103    0.462      0.097    0.160      -0.010   0.491     0.469     HIGH\nWeighted Avg.    0.515    0.522    0.493      0.515    0.421      -0.010   0.492     0.497     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 61  7 |  a = LOW\n 56  6 |  b = HIGH\n\n"}, {"i": 34, "mesure": 0.491, "algo_params": " -C 0.8048440495393344 -M 31 -B -S -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 41 -O -S 12 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                         -0.0127\nMean absolute error                      0.4994\nRoot mean squared error                  0.5004\nRelative absolute error                100.0405 %\nRoot relative squared error            100.1344 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.794    0.806    0.519      0.794    0.628      -0.015   0.491     0.521     LOW\n                 0.194    0.206    0.462      0.194    0.273      -0.015   0.491     0.469     HIGH\nWeighted Avg.    0.508    0.520    0.492      0.508    0.459      -0.015   0.491     0.497     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 54 14 |  a = LOW\n 50 12 |  b = HIGH\n\n"}, {"i": 35, "mesure": 0.506, "algo_params": " -U -O -B", "bagging_params": " -O -num-slots 19 -I 13 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          70               53.8462 %\nIncorrectly Classified Instances        60               46.1538 %\nKappa statistic                          0.071 \nMean absolute error                      0.4978\nRoot mean squared error                  0.541 \nRelative absolute error                 99.7332 %\nRoot relative squared error            108.2738 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.603    0.532    0.554      0.603    0.577      0.071    0.506     0.533     LOW\n                 0.468    0.397    0.518      0.468    0.492      0.071    0.506     0.508     HIGH\nWeighted Avg.    0.538    0.468    0.537      0.538    0.536      0.071    0.506     0.521     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 41 27 |  a = LOW\n 33 29 |  b = HIGH\n\n"}, {"i": 36, "mesure": 0, "algo_params": " -N 61 -R -Q 65 -O -B -S -doNotMakeSplitPointActualValue", "bagging_params": " -P 10 -S 56 -I 6", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tweka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tat weka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 37, "mesure": 0.488, "algo_params": " -N 101 -R -M 95 -Q 60 -S -L -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 92 -I 25 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          67               51.5385 %\nIncorrectly Classified Instances        63               48.4615 %\nKappa statistic                         -0.0064\nMean absolute error                      0.4993\nRoot mean squared error                  0.4999\nRelative absolute error                100.0247 %\nRoot relative squared error            100.0398 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.897    0.903    0.521      0.897    0.659      -0.010   0.488     0.512     LOW\n                 0.097    0.103    0.462      0.097    0.160      -0.010   0.488     0.469     HIGH\nWeighted Avg.    0.515    0.522    0.493      0.515    0.421      -0.010   0.488     0.491     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 61  7 |  a = LOW\n 56  6 |  b = HIGH\n\n"}, {"i": 38, "mesure": 0.502, "algo_params": " -U -M 82 -Q 74 -O -B", "bagging_params": " -S 8 -I 4 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.499 \nRoot mean squared error                  0.4996\nRelative absolute error                 99.9774 %\nRoot relative squared error             99.9786 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.502     0.525     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.503     0.479     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.502     0.503     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 39, "mesure": 0.607, "algo_params": " -C 0.5358503018334523 -M 3 -Q 50 -L -A -doNotMakeSplitPointActualValue", "bagging_params": " -S 13 -num-slots 25 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          80               61.5385 %\nIncorrectly Classified Instances        50               38.4615 %\nKappa statistic                          0.2225\nMean absolute error                      0.4639\nRoot mean squared error                  0.4969\nRelative absolute error                 92.9451 %\nRoot relative squared error             99.4513 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.721    0.500    0.613      0.721    0.662      0.226    0.607     0.634     LOW\n                 0.500    0.279    0.620      0.500    0.554      0.226    0.607     0.591     HIGH\nWeighted Avg.    0.615    0.395    0.616      0.615    0.610      0.226    0.607     0.614     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 49 19 |  a = LOW\n 31 31 |  b = HIGH\n\n"}, {"i": 40, "mesure": 0.491, "algo_params": " -U -M 118 -Q 45 -O -doNotMakeSplitPointActualValue", "bagging_params": " -O -S 10 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          67               51.5385 %\nIncorrectly Classified Instances        63               48.4615 %\nKappa statistic                         -0.0064\nMean absolute error                      0.4994\nRoot mean squared error                  0.4998\nRelative absolute error                100.0538 %\nRoot relative squared error            100.0249 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.897    0.903    0.521      0.897    0.659      -0.010   0.491     0.513     LOW\n                 0.097    0.103    0.462      0.097    0.160      -0.010   0.491     0.471     HIGH\nWeighted Avg.    0.515    0.522    0.493      0.515    0.421      -0.010   0.491     0.493     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 61  7 |  a = LOW\n 56  6 |  b = HIGH\n\n"}, {"i": 41, "mesure": 0.485, "algo_params": " -C 0.9017551544025479 -M 72 -O -B -S", "bagging_params": " -P 17 -O -I 9", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                         -0.0188\nMean absolute error                      0.4998\nRoot mean squared error                  0.5008\nRelative absolute error                100.1233 %\nRoot relative squared error            100.2303 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.691    0.710    0.516      0.691    0.591      -0.020   0.485     0.511     LOW\n                 0.290    0.309    0.462      0.290    0.356      -0.020   0.485     0.468     HIGH\nWeighted Avg.    0.500    0.519    0.490      0.500    0.479      -0.020   0.485     0.490     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 47 21 |  a = LOW\n 44 18 |  b = HIGH\n\n"}, {"i": 42, "mesure": 0.533, "algo_params": " -U -O -B -doNotMakeSplitPointActualValue", "bagging_params": " -O -S 8 -num-slots 20 -I 27 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0.0414\nMean absolute error                      0.4853\nRoot mean squared error                  0.5181\nRelative absolute error                 97.2227 %\nRoot relative squared error            103.6814 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.574    0.532    0.542      0.574    0.557      0.041    0.533     0.560     LOW\n                 0.468    0.426    0.500      0.468    0.483      0.041    0.533     0.558     HIGH\nWeighted Avg.    0.523    0.482    0.522      0.523    0.522      0.041    0.533     0.559     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 39 29 |  a = LOW\n 33 29 |  b = HIGH\n\n"}, {"i": 43, "mesure": 0.502, "algo_params": " -N 35 -R -M 35 -B -L -A -J", "bagging_params": " -P 36 -O -S 61 -num-slots 20 -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                          0.0062\nMean absolute error                      0.4995\nRoot mean squared error                  0.5004\nRelative absolute error                100.0608 %\nRoot relative squared error            100.1447 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.603    0.597    0.526      0.603    0.562      0.006    0.503     0.523     LOW\n                 0.403    0.397    0.481      0.403    0.439      0.006    0.502     0.486     HIGH\nWeighted Avg.    0.508    0.502    0.504      0.508    0.503      0.006    0.502     0.506     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 41 27 |  a = LOW\n 37 25 |  b = HIGH\n\n"}, {"i": 44, "mesure": 0.461, "algo_params": " -C 0.36144933089754927 -Q 37 -O -B -S -L -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 25 -I 19 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          64               49.2308 %\nIncorrectly Classified Instances        66               50.7692 %\nKappa statistic                         -0.0263\nMean absolute error                      0.5074\nRoot mean squared error                  0.5227\nRelative absolute error                101.6581 %\nRoot relative squared error            104.6108 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.603    0.629    0.513      0.603    0.554      -0.027   0.461     0.508     LOW\n                 0.371    0.397    0.460      0.371    0.411      -0.027   0.461     0.467     HIGH\nWeighted Avg.    0.492    0.518    0.487      0.492    0.486      -0.027   0.461     0.488     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 41 27 |  a = LOW\n 39 23 |  b = HIGH\n\n"}, {"i": 45, "mesure": 0, "algo_params": " -U -doNotMakeSplitPointActualValue -C 0.0598434854551082 -Q 78", "bagging_params": " -O -num-slots 26 -I 9", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\n\nWeka exception: Doesn't make sense to change confidence for unpruned tree!\n\nGeneral options:\n\n-h or -help\n\tOutput help information.\n-synopsis or -info\n\tOutput synopsis for classifier (use in conjunction  with -h)\n-t <name of training file>\n\tSets training file.\n-T <name of test file>\n\tSets test file. If missing, a cross-validation will be performed\n\ton the training data.\n-c <class index>\n\tSets index of class attribute (default: last).\n-x <number of folds>\n\tSets number of folds for cross-validation (default: 10).\n-no-cv\n\tDo not perform any cross validation.\n-force-batch-training\n\tAlways train classifier in batch mode, never incrementally.\n-split-percentage <percentage>\n\tSets the percentage for the train/test set split, e.g., 66.\n-preserve-order\n\tPreserves the order in the percentage split.\n-s <random number seed>\n\tSets random number seed for cross-validation or percentage split\n\t(default: 1).\n-m <name of file with cost matrix>\n\tSets file with cost matrix.\n-toggle <comma-separated list of evaluation metric names>\n\tComma separated list of metric names to toggle in the output.\n\tAll metrics are output by default with the exception of 'Coverage' and 'Region size'.\n\tAvailable metrics:\n\tCorrect,Incorrect,Kappa,Total cost,Average cost,KB relative,KB information,\n\tCorrelation,Complexity 0,Complexity scheme,Complexity improvement,\n\tMAE,RMSE,RAE,RRSE,Coverage,Region size,TP rate,FP rate,Precision,Recall,\n\tF-measure,MCC,ROC area,PRC area\n-l <name of input file>\n\tSets model input file. In case the filename ends with '.xml',\n\ta PMML file is loaded or, if that fails, options are loaded\n\tfrom the XML file.\n-d <name of output file>\n\tSets model output file. In case the filename ends with '.xml',\n\tonly the options are saved to the XML file, not the model.\n-v\n\tOutputs no statistics for training data.\n-o\n\tOutputs statistics only, not the classifier.\n-output-models-for-training-splits\n\tOutput models for training splits if cross-validation or percentage-split evaluation is used.\n-do-not-output-per-class-statistics\n\tDo not output statistics for each class.\n-k\n\tOutputs information-theoretic statistics.\n-classifications \"weka.classifiers.evaluation.output.prediction.AbstractOutput + options\"\n\tUses the specified class for generating the classification output.\n\tE.g.: weka.classifiers.evaluation.output.prediction.PlainText\n-p range\n\tOutputs predictions for test instances (or the train instances if\n\tno test instances provided and -no-cv is used), along with the \n\tattributes in the specified range (and nothing else). \n\tUse '-p 0' if no attributes are desired.\n\tDeprecated: use \"-classifications ...\" instead.\n-distribution\n\tOutputs the distribution instead of only the prediction\n\tin conjunction with the '-p' option (only nominal classes).\n\tDeprecated: use \"-classifications ...\" instead.\n-r\n\tOnly outputs cumulative margin distribution.\n-xml filename | xml-string\n\tRetrieves the options from the XML-data instead of the command line.\n-threshold-file <file>\n\tThe file to save the threshold data to.\n\tThe format is determined by the extensions, e.g., '.arff' for ARFF \n\tformat or '.csv' for CSV.\n-threshold-label <label>\n\tThe class label to determine the threshold data for\n\t(default is the first label)\n-no-predictions\n\tTurns off the collection of predictions in order to conserve memory.\n\nOptions specific to weka.classifiers.meta.Bagging:\n\n-P\n\tSize of each bag, as a percentage of the\n\ttraining set size. (default 100)\n-O\n\tCalculate the out of bag error.\n-store-out-of-bag-predictions\n\tWhether to store out of bag predictions in internal evaluation object.\n-output-out-of-bag-complexity-statistics\n\tWhether to output complexity-based statistics when out-of-bag evaluation is performed.\n-represent-copies-using-weights\n\tRepresent copies of instances using weights rather than explicitly.\n-print\n\tPrint the individual classifiers in the output\n-S <num>\n\tRandom number seed.\n\t(default 1)\n-num-slots <num>\n\tNumber of execution slots.\n\t(default 1 - i.e. no parallelism)\n\t(use 0 to auto-detect number of cores)\n-I <num>\n\tNumber of iterations.\n\t(current value 9)\n-W <classifier name>\n\tFull name of base classifier.\n\t(default: weka.classifiers.trees.REPTree)\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\nOptions specific to classifier weka.classifiers.trees.J48:\n\n-U\n\tUse unpruned tree.\n-O\n\tDo not collapse tree.\n-C <pruning confidence>\n\tSet confidence threshold for pruning.\n\t(default 0.25)\n-M <minimum number of instances>\n\tSet minimum number of instances per leaf.\n\t(default 2)\n-R\n\tUse reduced error pruning.\n-N <number of folds>\n\tSet number of folds for reduced error\n\tpruning. One fold is used as pruning set.\n\t(default 3)\n-B\n\tUse binary splits only.\n-S\n\tDo not perform subtree raising.\n-L\n\tDo not clean up after the tree has been built.\n-A\n\tLaplace smoothing for predicted probabilities.\n-J\n\tDo not use MDL correction for info gain on numeric attributes.\n-Q <seed>\n\tSeed for random data shuffling (default 1).\n-doNotMakeSplitPointActualValue\n\tDo not make split point actual value.\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\n"}, {"i": 46, "mesure": 0.511, "algo_params": " -N 6 -R -Q 24 -B -S -L -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 96 -S 23 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          67               51.5385 %\nIncorrectly Classified Instances        63               48.4615 %\nKappa statistic                          0.0182\nMean absolute error                      0.4941\nRoot mean squared error                  0.5097\nRelative absolute error                 98.9909 %\nRoot relative squared error            101.9989 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.647    0.629    0.530      0.647    0.583      0.019    0.511     0.528     LOW\n                 0.371    0.353    0.489      0.371    0.422      0.019    0.511     0.518     HIGH\nWeighted Avg.    0.515    0.497    0.511      0.515    0.506      0.019    0.511     0.523     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 44 24 |  a = LOW\n 39 23 |  b = HIGH\n\n"}, {"i": 47, "mesure": 0.522, "algo_params": " -U -Q 124 -O -doNotMakeSplitPointActualValue", "bagging_params": " -P 19 -S 11 -num-slots 24 -I 8 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          62               47.6923 %\nIncorrectly Classified Instances        68               52.3077 %\nKappa statistic                         -0.0484\nMean absolute error                      0.4861\nRoot mean squared error                  0.5214\nRelative absolute error                 97.381  %\nRoot relative squared error            104.3417 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.500    0.548    0.500      0.500    0.500      -0.048   0.522     0.563     LOW\n                 0.452    0.500    0.452      0.452    0.452      -0.048   0.522     0.537     HIGH\nWeighted Avg.    0.477    0.525    0.477      0.477    0.477      -0.048   0.522     0.551     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 34 34 |  a = LOW\n 34 28 |  b = HIGH\n\n"}, {"i": 48, "mesure": 0.545, "algo_params": " -N 61 -R -Q 23 -L -A", "bagging_params": " -num-slots 26 -I 18 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          75               57.6923 %\nIncorrectly Classified Instances        55               42.3077 %\nKappa statistic                          0.1342\nMean absolute error                      0.4916\nRoot mean squared error                  0.4961\nRelative absolute error                 98.487  %\nRoot relative squared error             99.2751 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.809    0.677    0.567      0.809    0.667      0.151    0.545     0.528     LOW\n                 0.323    0.191    0.606      0.323    0.421      0.151    0.545     0.590     HIGH\nWeighted Avg.    0.577    0.446    0.586      0.577    0.550      0.151    0.545     0.558     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 55 13 |  a = LOW\n 42 20 |  b = HIGH\n\n"}, {"i": 49, "mesure": 0, "algo_params": " -N 94 -R -M 79 -B -A -doNotMakeSplitPointActualValue", "bagging_params": " -P 76 -O -S 101 -num-slots 22 -I 12 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.NullPointerException\n\tweka.classifiers.trees.j48.ClassifierTree.getProbsLaplace(ClassifierTree.java:646)\n\tweka.classifiers.trees.j48.ClassifierTree.distributionForInstance(ClassifierTree.java:286)\n\tweka.classifiers.trees.J48.distributionForInstance(J48.java:327)\n\tweka.classifiers.meta.Bagging.buildClassifier(Bagging.java:751)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.classifiers.trees.j48.ClassifierTree.getProbsLaplace(ClassifierTree.java:646)\n\tat weka.classifiers.trees.j48.ClassifierTree.distributionForInstance(ClassifierTree.java:286)\n\tat weka.classifiers.trees.J48.distributionForInstance(J48.java:327)\n\tat weka.classifiers.meta.Bagging.buildClassifier(Bagging.java:751)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 50, "mesure": 0.491, "algo_params": " -C 0.03251592714194762 -M 103 -Q 58 -S", "bagging_params": " -P 68 -S 21 -I 6 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          67               51.5385 %\nIncorrectly Classified Instances        63               48.4615 %\nKappa statistic                         -0.0064\nMean absolute error                      0.4989\nRoot mean squared error                  0.5006\nRelative absolute error                 99.9408 %\nRoot relative squared error            100.1902 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.897    0.903    0.521      0.897    0.659      -0.010   0.491     0.521     LOW\n                 0.097    0.103    0.462      0.097    0.160      -0.010   0.491     0.469     HIGH\nWeighted Avg.    0.515    0.522    0.493      0.515    0.421      -0.010   0.491     0.497     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 61  7 |  a = LOW\n 56  6 |  b = HIGH\n\n"}, {"i": 51, "mesure": 0.519, "algo_params": " -C 0.5335132015343931", "bagging_params": " -O -S 101 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                         -0.01  \nMean absolute error                      0.4874\nRoot mean squared error                  0.5352\nRelative absolute error                 97.6443 %\nRoot relative squared error            107.1156 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.603    0.613    0.519      0.603    0.558      -0.010   0.519     0.566     LOW\n                 0.387    0.397    0.471      0.387    0.425      -0.010   0.519     0.557     HIGH\nWeighted Avg.    0.500    0.510    0.496      0.500    0.494      -0.010   0.519     0.562     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 41 27 |  a = LOW\n 38 24 |  b = HIGH\n\n"}, {"i": 52, "mesure": 0.494, "algo_params": " -C 0.9962897215372245 -M 98 -Q 74 -B -S -A -J -doNotMakeSplitPointActualValue", "bagging_params": " -S 113 -num-slots 15 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.499 \nRoot mean squared error                  0.4998\nRelative absolute error                 99.9599 %\nRoot relative squared error            100.0258 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.494     0.523     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.494     0.471     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.494     0.498     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 53, "mesure": 0, "algo_params": " -N 113 -R -M 26 -Q 110 -O -B -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 92 -O -S 121 -num-slots 14 -store-out-of-bag-predictions", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.NullPointerException\n\tweka.classifiers.trees.j48.ClassifierTree.getProbs(ClassifierTree.java:684)\n\tweka.classifiers.trees.j48.ClassifierTree.distributionForInstance(ClassifierTree.java:284)\n\tweka.classifiers.trees.J48.distributionForInstance(J48.java:327)\n\tweka.classifiers.meta.Bagging.buildClassifier(Bagging.java:751)\n\tweka.classifiers.evaluation.Evaluation.crossValidateModel(Evaluation.java:858)\n\tweka.classifiers.evaluation.Evaluation.crossValidateModel(Evaluation.java:812)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1927)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.classifiers.trees.j48.ClassifierTree.getProbs(ClassifierTree.java:684)\n\tat weka.classifiers.trees.j48.ClassifierTree.distributionForInstance(ClassifierTree.java:284)\n\tat weka.classifiers.trees.J48.distributionForInstance(J48.java:327)\n\tat weka.classifiers.meta.Bagging.buildClassifier(Bagging.java:751)\n\tat weka.classifiers.evaluation.Evaluation.crossValidateModel(Evaluation.java:858)\n\tat weka.classifiers.evaluation.Evaluation.crossValidateModel(Evaluation.java:812)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1927)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 54, "mesure": 0.494, "algo_params": " -U -M 31 -Q 76 -doNotMakeSplitPointActualValue", "bagging_params": " -P 61 -O -I 9 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4992\nRoot mean squared error                  0.4998\nRelative absolute error                100.0116 %\nRoot relative squared error            100.014  %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.494     0.521     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.494     0.472     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.494     0.498     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 55, "mesure": 0.485, "algo_params": " -N 27 -R -O", "bagging_params": " -P 81 -O -I 9 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          64               49.2308 %\nIncorrectly Classified Instances        66               50.7692 %\nKappa statistic                         -0.0263\nMean absolute error                      0.4987\nRoot mean squared error                  0.5145\nRelative absolute error                 99.9    %\nRoot relative squared error            102.956  %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.603    0.629    0.513      0.603    0.554      -0.027   0.485     0.500     LOW\n                 0.371    0.397    0.460      0.371    0.411      -0.027   0.485     0.519     HIGH\nWeighted Avg.    0.492    0.518    0.487      0.492    0.486      -0.027   0.485     0.509     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 41 27 |  a = LOW\n 39 23 |  b = HIGH\n\n"}, {"i": 56, "mesure": 0, "algo_params": " -N 30 -R -S -L -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 25 -O -S 25 -I 26 -output-out-of-bag-complexity-statistics", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tweka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tweka.classifiers.evaluation.Evaluation.crossValidateModel(Evaluation.java:858)\n\tweka.classifiers.evaluation.Evaluation.crossValidateModel(Evaluation.java:812)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1927)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tat weka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tat weka.classifiers.evaluation.Evaluation.crossValidateModel(Evaluation.java:858)\n\tat weka.classifiers.evaluation.Evaluation.crossValidateModel(Evaluation.java:812)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1927)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 57, "mesure": 0.537, "algo_params": " -U -M 17 -Q 128", "bagging_params": " -S 67 -num-slots 4 -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          69               53.0769 %\nIncorrectly Classified Instances        61               46.9231 %\nKappa statistic                          0.0575\nMean absolute error                      0.4845\nRoot mean squared error                  0.5127\nRelative absolute error                 97.0696 %\nRoot relative squared error            102.5993 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.574    0.516    0.549      0.574    0.561      0.058    0.537     0.565     LOW\n                 0.484    0.426    0.508      0.484    0.496      0.058    0.537     0.559     HIGH\nWeighted Avg.    0.531    0.473    0.530      0.531    0.530      0.058    0.537     0.562     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 39 29 |  a = LOW\n 32 30 |  b = HIGH\n\n"}, {"i": 58, "mesure": 0.45, "algo_params": " -C 0.9926076359309737 -M 35 -Q 47 -O -B -S -L -A -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 95 -S 53 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                         -0.001 \nMean absolute error                      0.5044\nRoot mean squared error                  0.5106\nRelative absolute error                101.049  %\nRoot relative squared error            102.1871 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.676    0.677    0.523      0.676    0.590      -0.001   0.451     0.484     LOW\n                 0.323    0.324    0.476      0.323    0.385      -0.001   0.450     0.491     HIGH\nWeighted Avg.    0.508    0.509    0.501      0.508    0.492      -0.001   0.450     0.487     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 46 22 |  a = LOW\n 42 20 |  b = HIGH\n\n"}, {"i": 59, "mesure": 0.453, "algo_params": " -C 0.8193963574127242 -B -S -J", "bagging_params": " -P 15 -O -S 105 -num-slots 6 -I 18 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          59               45.3846 %\nIncorrectly Classified Instances        71               54.6154 %\nKappa statistic                         -0.1017\nMean absolute error                      0.5067\nRoot mean squared error                  0.5286\nRelative absolute error                101.5178 %\nRoot relative squared error            105.7795 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.544    0.645    0.481      0.544    0.510      -0.103   0.453     0.489     LOW\n                 0.355    0.456    0.415      0.355    0.383      -0.103   0.453     0.496     HIGH\nWeighted Avg.    0.454    0.555    0.449      0.454    0.449      -0.103   0.453     0.492     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 37 31 |  a = LOW\n 40 22 |  b = HIGH\n\n"}, {"i": 60, "mesure": 0.488, "algo_params": " -U -M 128 -Q 25 -B -doNotMakeSplitPointActualValue", "bagging_params": " -P 70 -num-slots 2 -I 27 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          67               51.5385 %\nIncorrectly Classified Instances        63               48.4615 %\nKappa statistic                         -0.0064\nMean absolute error                      0.4993\nRoot mean squared error                  0.4999\nRelative absolute error                100.0338 %\nRoot relative squared error            100.0457 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.897    0.903    0.521      0.897    0.659      -0.010   0.488     0.512     LOW\n                 0.097    0.103    0.462      0.097    0.160      -0.010   0.488     0.469     HIGH\nWeighted Avg.    0.515    0.522    0.493      0.515    0.421      -0.010   0.488     0.491     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 61  7 |  a = LOW\n 56  6 |  b = HIGH\n\n"}, {"i": 61, "mesure": 0.412, "algo_params": " -C 0.4160423932148689 -M 26 -Q 18 -O -B -S -L -doNotMakeSplitPointActualValue", "bagging_params": " -O -num-slots 17 -I 30 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          56               43.0769 %\nIncorrectly Classified Instances        74               56.9231 %\nKappa statistic                         -0.1507\nMean absolute error                      0.511 \nRoot mean squared error                  0.5203\nRelative absolute error                102.3773 %\nRoot relative squared error            104.1334 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.544    0.694    0.463      0.544    0.500      -0.153   0.412     0.474     LOW\n                 0.306    0.456    0.380      0.306    0.339      -0.153   0.412     0.457     HIGH\nWeighted Avg.    0.431    0.580    0.423      0.431    0.423      -0.153   0.412     0.466     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 37 31 |  a = LOW\n 43 19 |  b = HIGH\n\n"}, {"i": 62, "mesure": 0.478, "algo_params": " -N 63 -R -M 120 -Q 91 -O -B", "bagging_params": " -num-slots 26", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4994\nRoot mean squared error                  0.4999\nRelative absolute error                100.0382 %\nRoot relative squared error            100.0475 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.478     0.506     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.478     0.465     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.478     0.486     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 63, "mesure": 0.4, "algo_params": " -C 0.05025629978070889 -M 45 -B -L -A -J -doNotMakeSplitPointActualValue", "bagging_params": " -num-slots 3 -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          56               43.0769 %\nIncorrectly Classified Instances        74               56.9231 %\nKappa statistic                         -0.154 \nMean absolute error                      0.5125\nRoot mean squared error                  0.5199\nRelative absolute error                102.6776 %\nRoot relative squared error            104.041  %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.574    0.726    0.464      0.574    0.513      -0.159   0.400     0.466     LOW\n                 0.274    0.426    0.370      0.274    0.315      -0.159   0.400     0.440     HIGH\nWeighted Avg.    0.431    0.583    0.419      0.431    0.419      -0.159   0.400     0.454     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 39 29 |  a = LOW\n 45 17 |  b = HIGH\n\n"}, {"i": 64, "mesure": 0.485, "algo_params": " -U -Q 8 -O -B -doNotMakeSplitPointActualValue", "bagging_params": " -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          69               53.0769 %\nIncorrectly Classified Instances        61               46.9231 %\nKappa statistic                          0.0562\nMean absolute error                      0.5043\nRoot mean squared error                  0.5523\nRelative absolute error                101.0311 %\nRoot relative squared error            110.537  %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.588    0.532    0.548      0.588    0.567      0.056    0.485     0.504     LOW\n                 0.468    0.412    0.509      0.468    0.487      0.056    0.485     0.498     HIGH\nWeighted Avg.    0.531    0.475    0.529      0.531    0.529      0.056    0.485     0.501     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 40 28 |  a = LOW\n 33 29 |  b = HIGH\n\n"}, {"i": 65, "mesure": 0.488, "algo_params": " -C 0.6778816174589581 -M 68 -Q 74 -O -doNotMakeSplitPointActualValue", "bagging_params": " -P 58 -S 26 -num-slots 21 -I 27 -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4992\nRoot mean squared error                  0.4998\nRelative absolute error                100.0116 %\nRoot relative squared error            100.0129 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.488     0.520     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.488     0.468     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.488     0.495     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 66, "mesure": 0.551, "algo_params": " -C 0.5406231946353338 -O -B -S -A -J", "bagging_params": " -P 57 -S 106 -num-slots 15 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          70               53.8462 %\nIncorrectly Classified Instances        60               46.1538 %\nKappa statistic                          0.0736\nMean absolute error                      0.4815\nRoot mean squared error                  0.5124\nRelative absolute error                 96.4546 %\nRoot relative squared error            102.5464 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.574    0.500    0.557      0.574    0.565      0.074    0.551     0.593     LOW\n                 0.500    0.426    0.517      0.500    0.508      0.074    0.551     0.545     HIGH\nWeighted Avg.    0.538    0.465    0.538      0.538    0.538      0.074    0.551     0.570     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 39 29 |  a = LOW\n 31 31 |  b = HIGH\n\n"}, {"i": 67, "mesure": 0.526, "algo_params": " -C 0.06354593227670191 -O -S -A -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 56 -S 60 -num-slots 14 -I 21 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0.0345\nMean absolute error                      0.4904\nRoot mean squared error                  0.5124\nRelative absolute error                 98.2449 %\nRoot relative squared error            102.5525 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.647    0.613    0.537      0.647    0.587      0.035    0.526     0.557     LOW\n                 0.387    0.353    0.500      0.387    0.436      0.035    0.526     0.527     HIGH\nWeighted Avg.    0.523    0.489    0.519      0.523    0.515      0.035    0.526     0.543     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 44 24 |  a = LOW\n 38 24 |  b = HIGH\n\n"}, {"i": 68, "mesure": 0, "algo_params": " -U -O -B -doNotMakeSplitPointActualValue -N 28 -R -M 65 -O -B -doNotMakeSplitPointActualValue", "bagging_params": " -S 104 -num-slots 22 -I 22 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\n\nWeka exception: Unpruned tree and reduced error pruning can't be selected simultaneously!\n\nGeneral options:\n\n-h or -help\n\tOutput help information.\n-synopsis or -info\n\tOutput synopsis for classifier (use in conjunction  with -h)\n-t <name of training file>\n\tSets training file.\n-T <name of test file>\n\tSets test file. If missing, a cross-validation will be performed\n\ton the training data.\n-c <class index>\n\tSets index of class attribute (default: last).\n-x <number of folds>\n\tSets number of folds for cross-validation (default: 10).\n-no-cv\n\tDo not perform any cross validation.\n-force-batch-training\n\tAlways train classifier in batch mode, never incrementally.\n-split-percentage <percentage>\n\tSets the percentage for the train/test set split, e.g., 66.\n-preserve-order\n\tPreserves the order in the percentage split.\n-s <random number seed>\n\tSets random number seed for cross-validation or percentage split\n\t(default: 1).\n-m <name of file with cost matrix>\n\tSets file with cost matrix.\n-toggle <comma-separated list of evaluation metric names>\n\tComma separated list of metric names to toggle in the output.\n\tAll metrics are output by default with the exception of 'Coverage' and 'Region size'.\n\tAvailable metrics:\n\tCorrect,Incorrect,Kappa,Total cost,Average cost,KB relative,KB information,\n\tCorrelation,Complexity 0,Complexity scheme,Complexity improvement,\n\tMAE,RMSE,RAE,RRSE,Coverage,Region size,TP rate,FP rate,Precision,Recall,\n\tF-measure,MCC,ROC area,PRC area\n-l <name of input file>\n\tSets model input file. In case the filename ends with '.xml',\n\ta PMML file is loaded or, if that fails, options are loaded\n\tfrom the XML file.\n-d <name of output file>\n\tSets model output file. In case the filename ends with '.xml',\n\tonly the options are saved to the XML file, not the model.\n-v\n\tOutputs no statistics for training data.\n-o\n\tOutputs statistics only, not the classifier.\n-output-models-for-training-splits\n\tOutput models for training splits if cross-validation or percentage-split evaluation is used.\n-do-not-output-per-class-statistics\n\tDo not output statistics for each class.\n-k\n\tOutputs information-theoretic statistics.\n-classifications \"weka.classifiers.evaluation.output.prediction.AbstractOutput + options\"\n\tUses the specified class for generating the classification output.\n\tE.g.: weka.classifiers.evaluation.output.prediction.PlainText\n-p range\n\tOutputs predictions for test instances (or the train instances if\n\tno test instances provided and -no-cv is used), along with the \n\tattributes in the specified range (and nothing else). \n\tUse '-p 0' if no attributes are desired.\n\tDeprecated: use \"-classifications ...\" instead.\n-distribution\n\tOutputs the distribution instead of only the prediction\n\tin conjunction with the '-p' option (only nominal classes).\n\tDeprecated: use \"-classifications ...\" instead.\n-r\n\tOnly outputs cumulative margin distribution.\n-xml filename | xml-string\n\tRetrieves the options from the XML-data instead of the command line.\n-threshold-file <file>\n\tThe file to save the threshold data to.\n\tThe format is determined by the extensions, e.g., '.arff' for ARFF \n\tformat or '.csv' for CSV.\n-threshold-label <label>\n\tThe class label to determine the threshold data for\n\t(default is the first label)\n-no-predictions\n\tTurns off the collection of predictions in order to conserve memory.\n\nOptions specific to weka.classifiers.meta.Bagging:\n\n-P\n\tSize of each bag, as a percentage of the\n\ttraining set size. (default 100)\n-O\n\tCalculate the out of bag error.\n-store-out-of-bag-predictions\n\tWhether to store out of bag predictions in internal evaluation object.\n-output-out-of-bag-complexity-statistics\n\tWhether to output complexity-based statistics when out-of-bag evaluation is performed.\n-represent-copies-using-weights\n\tRepresent copies of instances using weights rather than explicitly.\n-print\n\tPrint the individual classifiers in the output\n-S <num>\n\tRandom number seed.\n\t(default 1)\n-num-slots <num>\n\tNumber of execution slots.\n\t(default 1 - i.e. no parallelism)\n\t(use 0 to auto-detect number of cores)\n-I <num>\n\tNumber of iterations.\n\t(current value 22)\n-W <classifier name>\n\tFull name of base classifier.\n\t(default: weka.classifiers.trees.REPTree)\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\nOptions specific to classifier weka.classifiers.trees.J48:\n\n-U\n\tUse unpruned tree.\n-O\n\tDo not collapse tree.\n-C <pruning confidence>\n\tSet confidence threshold for pruning.\n\t(default 0.25)\n-M <minimum number of instances>\n\tSet minimum number of instances per leaf.\n\t(default 2)\n-R\n\tUse reduced error pruning.\n-N <number of folds>\n\tSet number of folds for reduced error\n\tpruning. One fold is used as pruning set.\n\t(default 3)\n-B\n\tUse binary splits only.\n-S\n\tDo not perform subtree raising.\n-L\n\tDo not clean up after the tree has been built.\n-A\n\tLaplace smoothing for predicted probabilities.\n-J\n\tDo not use MDL correction for info gain on numeric attributes.\n-Q <seed>\n\tSeed for random data shuffling (default 1).\n-doNotMakeSplitPointActualValue\n\tDo not make split point actual value.\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\n"}, {"i": 69, "mesure": 0.515, "algo_params": " -C 0.9000790980605279 -Q 48 -S -A", "bagging_params": " -P 68 -O -num-slots 19 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0.0345\nMean absolute error                      0.4927\nRoot mean squared error                  0.5191\nRelative absolute error                 98.7037 %\nRoot relative squared error            103.8874 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.647    0.613    0.537      0.647    0.587      0.035    0.515     0.504     LOW\n                 0.387    0.353    0.500      0.387    0.436      0.035    0.515     0.554     HIGH\nWeighted Avg.    0.523    0.489    0.519      0.523    0.515      0.035    0.515     0.528     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 44 24 |  a = LOW\n 38 24 |  b = HIGH\n\n"}, {"i": 70, "mesure": 0.559, "algo_params": " -N 72 -R -L", "bagging_params": " -O -I 27 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          73               56.1538 %\nIncorrectly Classified Instances        57               43.8462 %\nKappa statistic                          0.104 \nMean absolute error                      0.4875\nRoot mean squared error                  0.493 \nRelative absolute error                 97.6712 %\nRoot relative squared error             98.6601 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.779    0.677    0.558      0.779    0.650      0.115    0.559     0.600     LOW\n                 0.323    0.221    0.571      0.323    0.412      0.115    0.559     0.576     HIGH\nWeighted Avg.    0.562    0.460    0.564      0.562    0.537      0.115    0.559     0.589     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 53 15 |  a = LOW\n 42 20 |  b = HIGH\n\n"}, {"i": 71, "mesure": 0.516, "algo_params": " -C 0.6651755582506638 -B -S -A -J -doNotMakeSplitPointActualValue", "bagging_params": " -I 29 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          64               49.2308 %\nIncorrectly Classified Instances        66               50.7692 %\nKappa statistic                         -0.0278\nMean absolute error                      0.489 \nRoot mean squared error                  0.5227\nRelative absolute error                 97.9578 %\nRoot relative squared error            104.5974 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.618    0.645    0.512      0.618    0.560      -0.028   0.516     0.547     LOW\n                 0.355    0.382    0.458      0.355    0.400      -0.028   0.516     0.556     HIGH\nWeighted Avg.    0.492    0.520    0.487      0.492    0.484      -0.028   0.516     0.551     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 42 26 |  a = LOW\n 40 22 |  b = HIGH\n\n"}, {"i": 72, "mesure": 0.492, "algo_params": " -U -M 103 -O -B", "bagging_params": " -P 52 -S 120 -I 27 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.499 \nRoot mean squared error                  0.4998\nRelative absolute error                 99.9733 %\nRoot relative squared error            100.0203 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.492     0.516     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.492     0.472     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.492     0.495     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 73, "mesure": 0.491, "algo_params": " -C 0.21560763788010617 -Q 25 -B -L -J", "bagging_params": " -P 33 -S 119 -I 2 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          69               53.0769 %\nIncorrectly Classified Instances        61               46.9231 %\nKappa statistic                          0.048 \nMean absolute error                      0.5165\nRoot mean squared error                  0.6142\nRelative absolute error                103.4811 %\nRoot relative squared error            122.9121 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.676    0.629    0.541      0.676    0.601      0.050    0.491     0.511     LOW\n                 0.371    0.324    0.511      0.371    0.430      0.050    0.491     0.478     HIGH\nWeighted Avg.    0.531    0.483    0.527      0.531    0.520      0.050    0.491     0.496     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 46 22 |  a = LOW\n 39 23 |  b = HIGH\n\n"}, {"i": 74, "mesure": 0.488, "algo_params": " -C 0.7128669962588876 -M 54 -Q 73 -O -B -A", "bagging_params": " -S 120 -num-slots 9 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4991\nRoot mean squared error                  0.4997\nRelative absolute error                 99.9793 %\nRoot relative squared error            100.0122 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.488     0.518     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.488     0.468     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.488     0.494     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 75, "mesure": 0.478, "algo_params": " -U -O -doNotMakeSplitPointActualValue", "bagging_params": " -P 21 -O -S 13 -I 15 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0.0386\nMean absolute error                      0.506 \nRoot mean squared error                  0.5275\nRelative absolute error                101.3706 %\nRoot relative squared error            105.5651 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.603    0.565    0.539      0.603    0.569      0.039    0.478     0.518     LOW\n                 0.435    0.397    0.500      0.435    0.466      0.039    0.479     0.465     HIGH\nWeighted Avg.    0.523    0.485    0.521      0.523    0.520      0.039    0.478     0.493     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 41 27 |  a = LOW\n 35 27 |  b = HIGH\n\n"}, {"i": 76, "mesure": 0.542, "algo_params": " -N 66 -R -Q 42 -B -L -A", "bagging_params": " -O -S 20 -I 19 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          70               53.8462 %\nIncorrectly Classified Instances        60               46.1538 %\nKappa statistic                          0.0561\nMean absolute error                      0.492 \nRoot mean squared error                  0.4966\nRelative absolute error                 98.5626 %\nRoot relative squared error             99.3845 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.765    0.710    0.542      0.765    0.634      0.063    0.542     0.560     LOW\n                 0.290    0.235    0.529      0.290    0.375      0.063    0.542     0.566     HIGH\nWeighted Avg.    0.538    0.483    0.536      0.538    0.511      0.063    0.542     0.563     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 52 16 |  a = LOW\n 44 18 |  b = HIGH\n\n"}, {"i": 77, "mesure": 0.395, "algo_params": " -C 0.925540676540146 -M 39 -Q 80 -O -S -doNotMakeSplitPointActualValue", "bagging_params": " -P 73 -num-slots 19 -I 3 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          54               41.5385 %\nIncorrectly Classified Instances        76               58.4615 %\nKappa statistic                         -0.1784\nMean absolute error                      0.5219\nRoot mean squared error                  0.5411\nRelative absolute error                104.5485 %\nRoot relative squared error            108.2968 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.500    0.677    0.447      0.500    0.472      -0.180   0.395     0.465     LOW\n                 0.323    0.500    0.370      0.323    0.345      -0.180   0.395     0.410     HIGH\nWeighted Avg.    0.415    0.593    0.411      0.415    0.411      -0.180   0.395     0.439     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 34 34 |  a = LOW\n 42 20 |  b = HIGH\n\n"}, {"i": 78, "mesure": 0.449, "algo_params": " -C 0.266718842947681 -Q 93", "bagging_params": " -O -S 87 -I 28 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          59               45.3846 %\nIncorrectly Classified Instances        71               54.6154 %\nKappa statistic                         -0.1049\nMean absolute error                      0.505 \nRoot mean squared error                  0.5341\nRelative absolute error                101.172  %\nRoot relative squared error            106.8773 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.574    0.677    0.481      0.574    0.523      -0.107   0.449     0.510     LOW\n                 0.323    0.426    0.408      0.323    0.360      -0.107   0.449     0.516     HIGH\nWeighted Avg.    0.454    0.558    0.447      0.454    0.446      -0.107   0.449     0.513     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 39 29 |  a = LOW\n 42 20 |  b = HIGH\n\n"}, {"i": 79, "mesure": 0.485, "algo_params": " -U -M 68 -Q 50 -B -doNotMakeSplitPointActualValue", "bagging_params": " -P 80 -O -S 22 -I 11 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          67               51.5385 %\nIncorrectly Classified Instances        63               48.4615 %\nKappa statistic                         -0.0064\nMean absolute error                      0.4995\nRoot mean squared error                  0.5002\nRelative absolute error                100.0629 %\nRoot relative squared error            100.1054 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.897    0.903    0.521      0.897    0.659      -0.010   0.485     0.510     LOW\n                 0.097    0.103    0.462      0.097    0.160      -0.010   0.485     0.468     HIGH\nWeighted Avg.    0.515    0.522    0.493      0.515    0.421      -0.010   0.485     0.490     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 61  7 |  a = LOW\n 56  6 |  b = HIGH\n\n"}, {"i": 80, "mesure": 0.491, "algo_params": " -U -M 1 -B -doNotMakeSplitPointActualValue", "bagging_params": " -P 47 -num-slots 9 -I 11 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          62               47.6923 %\nIncorrectly Classified Instances        68               52.3077 %\nKappa statistic                         -0.0589\nMean absolute error                      0.4967\nRoot mean squared error                  0.5316\nRelative absolute error                 99.4992 %\nRoot relative squared error            106.3895 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.603    0.661    0.500      0.603    0.547      -0.060   0.491     0.557     LOW\n                 0.339    0.397    0.438      0.339    0.382      -0.060   0.491     0.483     HIGH\nWeighted Avg.    0.477    0.535    0.470      0.477    0.468      -0.060   0.491     0.522     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 41 27 |  a = LOW\n 41 21 |  b = HIGH\n\n"}, {"i": 81, "mesure": 0, "algo_params": " -N 111 -R -S -J", "bagging_params": " -P 33 -num-slots 17 -I 15", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.NullPointerException\n\tweka.classifiers.trees.j48.ClassifierTree.getProbs(ClassifierTree.java:684)\n\tweka.classifiers.trees.j48.ClassifierTree.distributionForInstance(ClassifierTree.java:284)\n\tweka.classifiers.trees.J48.distributionForInstance(J48.java:327)\n\tweka.classifiers.meta.Bagging.distributionForInstance(Bagging.java:804)\n\tweka.classifiers.evaluation.Evaluation.evaluationForSingleInstance(Evaluation.java:2192)\n\tweka.classifiers.evaluation.Evaluation.evaluateModelOnceAndRecordPrediction(Evaluation.java:2230)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1907)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.classifiers.trees.j48.ClassifierTree.getProbs(ClassifierTree.java:684)\n\tat weka.classifiers.trees.j48.ClassifierTree.distributionForInstance(ClassifierTree.java:284)\n\tat weka.classifiers.trees.J48.distributionForInstance(J48.java:327)\n\tat weka.classifiers.meta.Bagging.distributionForInstance(Bagging.java:804)\n\tat weka.classifiers.evaluation.Evaluation.evaluationForSingleInstance(Evaluation.java:2192)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModelOnceAndRecordPrediction(Evaluation.java:2230)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1907)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 82, "mesure": 0.525, "algo_params": " -U -Q 69 -O -B", "bagging_params": " -P 26 -O -I 3 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          64               49.2308 %\nIncorrectly Classified Instances        66               50.7692 %\nKappa statistic                         -0.0234\nMean absolute error                      0.4969\nRoot mean squared error                  0.5858\nRelative absolute error                 99.5398 %\nRoot relative squared error            117.227  %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.574    0.597    0.513      0.574    0.542      -0.024   0.525     0.604     LOW\n                 0.403    0.426    0.463      0.403    0.431      -0.024   0.525     0.472     HIGH\nWeighted Avg.    0.492    0.516    0.489      0.492    0.489      -0.024   0.525     0.541     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 39 29 |  a = LOW\n 37 25 |  b = HIGH\n\n"}, {"i": 83, "mesure": 0.481, "algo_params": " -C 0.5019800445934218 -M 77 -Q 39 -B -S -A -doNotMakeSplitPointActualValue", "bagging_params": " -I 27 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4994\nRoot mean squared error                  0.4998\nRelative absolute error                100.0389 %\nRoot relative squared error            100.0305 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.481     0.508     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.481     0.466     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.481     0.488     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 84, "mesure": 0.458, "algo_params": " -C 0.6711473137358236 -Q 26 -O", "bagging_params": " -O -S 113 -num-slots 1 -I 6 -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          62               47.6923 %\nIncorrectly Classified Instances        68               52.3077 %\nKappa statistic                         -0.0589\nMean absolute error                      0.5144\nRoot mean squared error                  0.5672\nRelative absolute error                103.0527 %\nRoot relative squared error            113.5082 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.603    0.661    0.500      0.603    0.547      -0.060   0.458     0.481     LOW\n                 0.339    0.397    0.438      0.339    0.382      -0.060   0.458     0.464     HIGH\nWeighted Avg.    0.477    0.535    0.470      0.477    0.468      -0.060   0.458     0.473     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 41 27 |  a = LOW\n 41 21 |  b = HIGH\n\n"}, {"i": 85, "mesure": 0.426, "algo_params": " -C 0.13139721390276538 -B -L -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 19 -S 36 -I 28", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          62               47.6923 %\nIncorrectly Classified Instances        68               52.3077 %\nKappa statistic                         -0.0499\nMean absolute error                      0.5149\nRoot mean squared error                  0.5262\nRelative absolute error                103.1563 %\nRoot relative squared error            105.2981 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.515    0.565    0.500      0.515    0.507      -0.050   0.426     0.466     LOW\n                 0.435    0.485    0.450      0.435    0.443      -0.050   0.426     0.453     HIGH\nWeighted Avg.    0.477    0.527    0.476      0.477    0.476      -0.050   0.426     0.460     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 35 33 |  a = LOW\n 35 27 |  b = HIGH\n\n"}, {"i": 86, "mesure": 0.362, "algo_params": " -C 0.873463525328719 -M 56 -Q 91 -B -S -L -J -doNotMakeSplitPointActualValue", "bagging_params": " -I 29 -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          59               45.3846 %\nIncorrectly Classified Instances        71               54.6154 %\nKappa statistic                         -0.108 \nMean absolute error                      0.5159\nRoot mean squared error                  0.5209\nRelative absolute error                103.347  %\nRoot relative squared error            104.2405 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.603    0.710    0.482      0.603    0.536      -0.112   0.362     0.432     LOW\n                 0.290    0.397    0.400      0.290    0.336      -0.112   0.362     0.397     HIGH\nWeighted Avg.    0.454    0.561    0.443      0.454    0.441      -0.112   0.362     0.415     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 41 27 |  a = LOW\n 44 18 |  b = HIGH\n\n"}, {"i": 87, "mesure": 0.488, "algo_params": " -N 93 -R -M 87 -Q 125 -B -S -L -A", "bagging_params": " -O -S 33 -num-slots 30 -I 19 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4992\nRoot mean squared error                  0.4999\nRelative absolute error                100.0164 %\nRoot relative squared error            100.0384 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.488     0.519     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.488     0.468     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.488     0.495     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 88, "mesure": 0.478, "algo_params": " -C 0.11420976130620597 -M 127 -Q 44 -B -L -A", "bagging_params": " -O -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4993\nRoot mean squared error                  0.4999\nRelative absolute error                100.0376 %\nRoot relative squared error            100.0516 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.478     0.506     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.478     0.465     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.478     0.486     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 89, "mesure": 0.492, "algo_params": " -C 0.10444135793634657 -O -B -A -doNotMakeSplitPointActualValue", "bagging_params": " -P 99 -S 2 -num-slots 8 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          64               49.2308 %\nIncorrectly Classified Instances        66               50.7692 %\nKappa statistic                         -0.0248\nMean absolute error                      0.5019\nRoot mean squared error                  0.542 \nRelative absolute error                100.5466 %\nRoot relative squared error            108.4593 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.588    0.613    0.513      0.588    0.548      -0.025   0.492     0.535     LOW\n                 0.387    0.412    0.462      0.387    0.421      -0.025   0.492     0.490     HIGH\nWeighted Avg.    0.492    0.517    0.488      0.492    0.487      -0.025   0.492     0.513     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 40 28 |  a = LOW\n 38 24 |  b = HIGH\n\n"}, {"i": 90, "mesure": 0.393, "algo_params": " -C 0.9934777985289839 -M 30 -Q 10 -S -A -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 93 -S 3 -num-slots 22 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          60               46.1538 %\nIncorrectly Classified Instances        70               53.8462 %\nKappa statistic                         -0.0885\nMean absolute error                      0.5122\nRoot mean squared error                  0.5208\nRelative absolute error                102.6124 %\nRoot relative squared error            104.2338 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.574    0.661    0.488      0.574    0.527      -0.090   0.393     0.444     LOW\n                 0.339    0.426    0.420      0.339    0.375      -0.090   0.393     0.455     HIGH\nWeighted Avg.    0.462    0.549    0.455      0.462    0.455      -0.090   0.393     0.450     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 39 29 |  a = LOW\n 41 21 |  b = HIGH\n\n"}, {"i": 91, "mesure": 0.461, "algo_params": " -U -M 8 -Q 70 -doNotMakeSplitPointActualValue", "bagging_params": " -O -S 23 -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                         -0.0057\nMean absolute error                      0.5087\nRoot mean squared error                  0.5407\nRelative absolute error                101.9054 %\nRoot relative squared error            108.2144 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.559    0.565    0.521      0.559    0.539      -0.006   0.461     0.503     LOW\n                 0.435    0.441    0.474      0.435    0.454      -0.006   0.461     0.490     HIGH\nWeighted Avg.    0.500    0.506    0.498      0.500    0.498      -0.006   0.461     0.497     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 38 30 |  a = LOW\n 35 27 |  b = HIGH\n\n"}, {"i": 92, "mesure": 0, "algo_params": " -N 82 -R -Q 120 -B -S -A", "bagging_params": " -P 87 -S 40 -num-slots 10 -I 16 -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.NullPointerException\n\tweka.classifiers.trees.j48.ClassifierTree.getProbsLaplace(ClassifierTree.java:646)\n\tweka.classifiers.trees.j48.ClassifierTree.distributionForInstance(ClassifierTree.java:286)\n\tweka.classifiers.trees.J48.distributionForInstance(J48.java:327)\n\tweka.classifiers.meta.Bagging.distributionForInstance(Bagging.java:804)\n\tweka.classifiers.evaluation.Evaluation.evaluationForSingleInstance(Evaluation.java:2192)\n\tweka.classifiers.evaluation.Evaluation.evaluateModelOnceAndRecordPrediction(Evaluation.java:2230)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1907)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.classifiers.trees.j48.ClassifierTree.getProbsLaplace(ClassifierTree.java:646)\n\tat weka.classifiers.trees.j48.ClassifierTree.distributionForInstance(ClassifierTree.java:286)\n\tat weka.classifiers.trees.J48.distributionForInstance(J48.java:327)\n\tat weka.classifiers.meta.Bagging.distributionForInstance(Bagging.java:804)\n\tat weka.classifiers.evaluation.Evaluation.evaluationForSingleInstance(Evaluation.java:2192)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModelOnceAndRecordPrediction(Evaluation.java:2230)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1907)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 93, "mesure": 0.47, "algo_params": " -C 0.08579274879412546 -O -B -L -J -doNotMakeSplitPointActualValue", "bagging_params": " -O -num-slots 10 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          63               48.4615 %\nIncorrectly Classified Instances        67               51.5385 %\nKappa statistic                         -0.0396\nMean absolute error                      0.5096\nRoot mean squared error                  0.5589\nRelative absolute error                102.0997 %\nRoot relative squared error            111.8412 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.574    0.613    0.506      0.574    0.538      -0.040   0.470     0.492     LOW\n                 0.387    0.426    0.453      0.387    0.417      -0.040   0.470     0.507     HIGH\nWeighted Avg.    0.485    0.524    0.481      0.485    0.480      -0.040   0.470     0.499     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 39 29 |  a = LOW\n 38 24 |  b = HIGH\n\n"}, {"i": 94, "mesure": 0.48, "algo_params": " -N 55 -R -Q 67 -O -B -L -J -doNotMakeSplitPointActualValue", "bagging_params": " -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                         -0.0144\nMean absolute error                      0.4955\nRoot mean squared error                  0.506 \nRelative absolute error                 99.2701 %\nRoot relative squared error            101.2563 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.647    0.661    0.518      0.647    0.575      -0.015   0.480     0.523     LOW\n                 0.339    0.353    0.467      0.339    0.393      -0.015   0.480     0.513     HIGH\nWeighted Avg.    0.500    0.514    0.493      0.500    0.488      -0.015   0.480     0.518     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 44 24 |  a = LOW\n 41 21 |  b = HIGH\n\n"}, {"i": 95, "mesure": 0.454, "algo_params": " -C 0.2903181490460175 -M 14 -O -A -J", "bagging_params": " -S 107 -num-slots 22 -I 11 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          63               48.4615 %\nIncorrectly Classified Instances        67               51.5385 %\nKappa statistic                         -0.0367\nMean absolute error                      0.5072\nRoot mean squared error                  0.5295\nRelative absolute error                101.617  %\nRoot relative squared error            105.9576 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.544    0.581    0.507      0.544    0.525      -0.037   0.454     0.482     LOW\n                 0.419    0.456    0.456      0.419    0.437      -0.037   0.454     0.508     HIGH\nWeighted Avg.    0.485    0.521    0.483      0.485    0.483      -0.037   0.454     0.494     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 37 31 |  a = LOW\n 36 26 |  b = HIGH\n\n"}, {"i": 96, "mesure": 0.569, "algo_params": " -N 50 -R -B -A -J", "bagging_params": " -P 82 -S 109 -num-slots 28 -I 11 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          76               58.4615 %\nIncorrectly Classified Instances        54               41.5385 %\nKappa statistic                          0.1591\nMean absolute error                      0.492 \nRoot mean squared error                  0.4989\nRelative absolute error                 98.5629 %\nRoot relative squared error             99.8416 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.706    0.548    0.585      0.706    0.640      0.163    0.569     0.558     LOW\n                 0.452    0.294    0.583      0.452    0.509      0.163    0.569     0.547     HIGH\nWeighted Avg.    0.585    0.427    0.584      0.585    0.578      0.163    0.569     0.553     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 48 20 |  a = LOW\n 34 28 |  b = HIGH\n\n"}, {"i": 97, "mesure": 0.493, "algo_params": " -C 0.8999321988437398 -Q 38 -O -B -S -L -doNotMakeSplitPointActualValue", "bagging_params": " -P 70 -S 84 -num-slots 25", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          59               45.3846 %\nIncorrectly Classified Instances        71               54.6154 %\nKappa statistic                         -0.1033\nMean absolute error                      0.4962\nRoot mean squared error                  0.5258\nRelative absolute error                 99.4147 %\nRoot relative squared error            105.2209 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.559    0.661    0.481      0.559    0.517      -0.105   0.493     0.578     LOW\n                 0.339    0.441    0.412      0.339    0.372      -0.105   0.493     0.505     HIGH\nWeighted Avg.    0.454    0.556    0.448      0.454    0.448      -0.105   0.493     0.543     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 38 30 |  a = LOW\n 41 21 |  b = HIGH\n\n"}, {"i": 98, "mesure": 0.481, "algo_params": " -N 18 -R -M 92 -B -S -A", "bagging_params": " -O -S 15 -num-slots 6 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4992\nRoot mean squared error                  0.5001\nRelative absolute error                100.0165 %\nRoot relative squared error            100.0735 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.481     0.508     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.481     0.466     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.481     0.488     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 99, "mesure": 0.412, "algo_params": " -C 0.23502595262735881 -M 49 -O -A -J", "bagging_params": " -P 87 -O -num-slots 6", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                         -0.0203\nMean absolute error                      0.5089\nRoot mean squared error                  0.5149\nRelative absolute error                101.9456 %\nRoot relative squared error            103.0423 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.706    0.726    0.516      0.706    0.596      -0.022   0.412     0.472     LOW\n                 0.274    0.294    0.459      0.274    0.343      -0.022   0.412     0.428     HIGH\nWeighted Avg.    0.500    0.520    0.489      0.500    0.476      -0.022   0.412     0.451     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 48 20 |  a = LOW\n 45 17 |  b = HIGH\n\n"}, {"i": 100, "mesure": 0.548, "algo_params": " -N 52 -R -Q 16 -O -B -S -L -J", "bagging_params": " -O -num-slots 16 -I 13 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                         -0.0115\nMean absolute error                      0.4903\nRoot mean squared error                  0.4976\nRelative absolute error                 98.2194 %\nRoot relative squared error             99.5813 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.618    0.629    0.519      0.618    0.564      -0.012   0.548     0.546     LOW\n                 0.371    0.382    0.469      0.371    0.414      -0.012   0.548     0.569     HIGH\nWeighted Avg.    0.500    0.511    0.495      0.500    0.493      -0.012   0.548     0.557     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 42 26 |  a = LOW\n 39 23 |  b = HIGH\n\n"}, {"i": 101, "mesure": 0.454, "algo_params": " -U -M 14 -B -doNotMakeSplitPointActualValue", "bagging_params": " -O -S 100 -num-slots 2 -I 6 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                         -0.0043\nMean absolute error                      0.5092\nRoot mean squared error                  0.5483\nRelative absolute error                102.0123 %\nRoot relative squared error            109.7364 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.544    0.548    0.521      0.544    0.532      -0.004   0.454     0.491     LOW\n                 0.452    0.456    0.475      0.452    0.463      -0.004   0.454     0.500     HIGH\nWeighted Avg.    0.500    0.504    0.499      0.500    0.499      -0.004   0.454     0.496     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 37 31 |  a = LOW\n 34 28 |  b = HIGH\n\n"}, {"i": 102, "mesure": 0.443, "algo_params": " -N 29 -R -M 45 -Q 62 -B -L -A -J -doNotMakeSplitPointActualValue", "bagging_params": " -S 78 -I 10 -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          61               46.9231 %\nIncorrectly Classified Instances        69               53.0769 %\nKappa statistic                         -0.0878\nMean absolute error                      0.5033\nRoot mean squared error                  0.5067\nRelative absolute error                100.8281 %\nRoot relative squared error            101.3956 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.721    0.806    0.495      0.721    0.587      -0.101   0.443     0.482     LOW\n                 0.194    0.279    0.387      0.194    0.258      -0.101   0.443     0.467     HIGH\nWeighted Avg.    0.469    0.555    0.444      0.469    0.430      -0.101   0.443     0.475     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 49 19 |  a = LOW\n 50 12 |  b = HIGH\n\n"}, {"i": 103, "mesure": 0.488, "algo_params": " -N 34 -R -M 86", "bagging_params": " -S 29 -I 29 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4991\nRoot mean squared error                  0.4997\nRelative absolute error                 99.9957 %\nRoot relative squared error            100.001  %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.488     0.519     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.488     0.468     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.488     0.495     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 104, "mesure": 0, "algo_params": " -N 84 -R -A", "bagging_params": " -O -S 53 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tweka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tat weka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 105, "mesure": 0.588, "algo_params": " -N 64 -R -Q 38 -O -B -A -doNotMakeSplitPointActualValue", "bagging_params": " -P 89 -S 48 -num-slots 10 -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          69               53.0769 %\nIncorrectly Classified Instances        61               46.9231 %\nKappa statistic                          0.0453\nMean absolute error                      0.4857\nRoot mean squared error                  0.4919\nRelative absolute error                 97.3086 %\nRoot relative squared error             98.4379 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.706    0.661    0.539      0.706    0.611      0.048    0.588     0.628     LOW\n                 0.339    0.294    0.512      0.339    0.408      0.048    0.588     0.564     HIGH\nWeighted Avg.    0.531    0.486    0.526      0.531    0.514      0.048    0.588     0.598     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 48 20 |  a = LOW\n 41 21 |  b = HIGH\n\n"}, {"i": 106, "mesure": 0.485, "algo_params": " -C 0.04790664972107994 -M 116 -Q 106 -B -S -A -J", "bagging_params": " -S 82 -num-slots 3", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4987\nRoot mean squared error                  0.5002\nRelative absolute error                 99.9068 %\nRoot relative squared error            100.1075 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.485     0.516     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.485     0.467     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.485     0.493     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 107, "mesure": 0.478, "algo_params": " -N 14 -R -Q 7 -O -B -S -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 40 -O -I 8 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          62               47.6923 %\nIncorrectly Classified Instances        68               52.3077 %\nKappa statistic                         -0.0514\nMean absolute error                      0.503 \nRoot mean squared error                  0.5131\nRelative absolute error                100.7758 %\nRoot relative squared error            102.6891 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.529    0.581    0.500      0.529    0.514      -0.051   0.478     0.502     LOW\n                 0.419    0.471    0.448      0.419    0.433      -0.051   0.478     0.480     HIGH\nWeighted Avg.    0.477    0.528    0.475      0.477    0.476      -0.051   0.478     0.491     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 36 32 |  a = LOW\n 36 26 |  b = HIGH\n\n"}, {"i": 108, "mesure": 0.376, "algo_params": " -U -M 31 -B -doNotMakeSplitPointActualValue", "bagging_params": " -P 79 -num-slots 29 -I 29 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          53               40.7692 %\nIncorrectly Classified Instances        77               59.2308 %\nKappa statistic                         -0.1965\nMean absolute error                      0.514 \nRoot mean squared error                  0.5189\nRelative absolute error                102.9762 %\nRoot relative squared error            103.8481 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.515    0.710    0.443      0.515    0.476      -0.199   0.376     0.443     LOW\n                 0.290    0.485    0.353      0.290    0.319      -0.199   0.376     0.404     HIGH\nWeighted Avg.    0.408    0.603    0.400      0.408    0.401      -0.199   0.376     0.424     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 35 33 |  a = LOW\n 44 18 |  b = HIGH\n\n"}, {"i": 109, "mesure": 0.478, "algo_params": " -U -M 119 -Q 38 -O", "bagging_params": " -P 44 -S 80 -I 16 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4994\nRoot mean squared error                  0.5008\nRelative absolute error                100.0494 %\nRoot relative squared error            100.2133 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.478     0.506     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.478     0.465     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.478     0.486     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 110, "mesure": 0.527, "algo_params": " -N 63 -R -B -doNotMakeSplitPointActualValue", "bagging_params": " -O -S 11 -num-slots 26 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          71               54.6154 %\nIncorrectly Classified Instances        59               45.3846 %\nKappa statistic                          0.0739\nMean absolute error                      0.4968\nRoot mean squared error                  0.4993\nRelative absolute error                 99.5246 %\nRoot relative squared error             99.9322 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.750    0.677    0.548      0.750    0.634      0.080    0.527     0.532     LOW\n                 0.323    0.250    0.541      0.323    0.404      0.080    0.527     0.539     HIGH\nWeighted Avg.    0.546    0.474    0.545      0.546    0.524      0.080    0.527     0.535     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 51 17 |  a = LOW\n 42 20 |  b = HIGH\n\n"}, {"i": 111, "mesure": 0.492, "algo_params": " -U -M 42 -O", "bagging_params": " -P 42 -I 3 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                         -0.0188\nMean absolute error                      0.4999\nRoot mean squared error                  0.503 \nRelative absolute error                100.1474 %\nRoot relative squared error            100.6538 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.691    0.710    0.516      0.691    0.591      -0.020   0.495     0.523     LOW\n                 0.290    0.309    0.462      0.290    0.356      -0.020   0.489     0.470     HIGH\nWeighted Avg.    0.500    0.519    0.490      0.500    0.479      -0.020   0.492     0.498     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 47 21 |  a = LOW\n 44 18 |  b = HIGH\n\n"}, {"i": 112, "mesure": 0.382, "algo_params": " -C 0.3921100231051923 -M 34 -O -L -J", "bagging_params": " -O -num-slots 2 -I 13 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          52               40      %\nIncorrectly Classified Instances        78               60      %\nKappa statistic                         -0.2094\nMean absolute error                      0.5154\nRoot mean squared error                  0.5237\nRelative absolute error                103.2486 %\nRoot relative squared error            104.8071 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.485    0.694    0.434      0.485    0.458      -0.211   0.382     0.473     LOW\n                 0.306    0.515    0.352      0.306    0.328      -0.211   0.382     0.435     HIGH\nWeighted Avg.    0.400    0.608    0.395      0.400    0.396      -0.211   0.382     0.455     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 33 35 |  a = LOW\n 43 19 |  b = HIGH\n\n"}, {"i": 113, "mesure": 0.434, "algo_params": " -U", "bagging_params": " -P 62 -O -num-slots 16 -I 2 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          58               44.6154 %\nIncorrectly Classified Instances        72               55.3846 %\nKappa statistic                         -0.1261\nMean absolute error                      0.5318\nRoot mean squared error                  0.6237\nRelative absolute error                106.5312 %\nRoot relative squared error            124.8094 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.618    0.742    0.477      0.618    0.538      -0.133   0.434     0.487     LOW\n                 0.258    0.382    0.381      0.258    0.308      -0.133   0.434     0.439     HIGH\nWeighted Avg.    0.446    0.570    0.431      0.446    0.428      -0.133   0.434     0.464     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 42 26 |  a = LOW\n 46 16 |  b = HIGH\n\n"}, {"i": 114, "mesure": 0.499, "algo_params": " -U -O", "bagging_params": " -O -num-slots 5 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          69               53.0769 %\nIncorrectly Classified Instances        61               46.9231 %\nKappa statistic                          0.0589\nMean absolute error                      0.4993\nRoot mean squared error                  0.5462\nRelative absolute error                100.0346 %\nRoot relative squared error            109.3129 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.559    0.500    0.551      0.559    0.555      0.059    0.499     0.524     LOW\n                 0.500    0.441    0.508      0.500    0.504      0.059    0.499     0.507     HIGH\nWeighted Avg.    0.531    0.472    0.530      0.531    0.531      0.059    0.499     0.516     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 38 30 |  a = LOW\n 31 31 |  b = HIGH\n\n"}, {"i": 115, "mesure": 0.443, "algo_params": " -C 0.46387323951442416 -M 1 -L -A", "bagging_params": " -P 20 -O -I 11 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          61               46.9231 %\nIncorrectly Classified Instances        69               53.0769 %\nKappa statistic                         -0.0691\nMean absolute error                      0.5131\nRoot mean squared error                  0.5298\nRelative absolute error                102.7845 %\nRoot relative squared error            106.0309 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.544    0.613    0.493      0.544    0.517      -0.070   0.443     0.470     LOW\n                 0.387    0.456    0.436      0.387    0.410      -0.070   0.443     0.458     HIGH\nWeighted Avg.    0.469    0.538    0.466      0.469    0.466      -0.070   0.443     0.464     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 37 31 |  a = LOW\n 38 24 |  b = HIGH\n\n"}, {"i": 116, "mesure": 0.486, "algo_params": " -N 19 -R -Q 90 -B -S -L -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 54 -O -S 105 -num-slots 12 -I 11 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0.0386\nMean absolute error                      0.5045\nRoot mean squared error                  0.517 \nRelative absolute error                101.0613 %\nRoot relative squared error            103.4661 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.603    0.565    0.539      0.603    0.569      0.039    0.486     0.513     LOW\n                 0.435    0.397    0.500      0.435    0.466      0.039    0.486     0.477     HIGH\nWeighted Avg.    0.523    0.485    0.521      0.523    0.520      0.039    0.486     0.496     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 41 27 |  a = LOW\n 35 27 |  b = HIGH\n\n"}, {"i": 117, "mesure": 0.536, "algo_params": " -C 0.7014374044368631 -O -S -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 34 -S 92 -num-slots 2 -I 12", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          67               51.5385 %\nIncorrectly Classified Instances        63               48.4615 %\nKappa statistic                          0.0308\nMean absolute error                      0.4913\nRoot mean squared error                  0.5176\nRelative absolute error                 98.4218 %\nRoot relative squared error            103.5911 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.515    0.484    0.538      0.515    0.526      0.031    0.536     0.541     LOW\n                 0.516    0.485    0.492      0.516    0.504      0.031    0.536     0.521     HIGH\nWeighted Avg.    0.515    0.485    0.516      0.515    0.516      0.031    0.536     0.531     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 35 33 |  a = LOW\n 30 32 |  b = HIGH\n\n"}, {"i": 118, "mesure": 0.394, "algo_params": " -C 0.14127989600779212 -M 48 -Q 41 -B -S -L -J", "bagging_params": " -O -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          60               46.1538 %\nIncorrectly Classified Instances        70               53.8462 %\nKappa statistic                         -0.0917\nMean absolute error                      0.5144\nRoot mean squared error                  0.5223\nRelative absolute error                103.0438 %\nRoot relative squared error            104.5347 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.603    0.694    0.488      0.603    0.539      -0.095   0.394     0.467     LOW\n                 0.306    0.397    0.413      0.306    0.352      -0.095   0.394     0.438     HIGH\nWeighted Avg.    0.462    0.552    0.452      0.462    0.450      -0.095   0.394     0.453     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 41 27 |  a = LOW\n 43 19 |  b = HIGH\n\n"}, {"i": 119, "mesure": 0.509, "algo_params": " -C 0.700888128476066 -O -B -S -L -A", "bagging_params": " -O -num-slots 4 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0.0373\nMean absolute error                      0.4936\nRoot mean squared error                  0.5323\nRelative absolute error                 98.8871 %\nRoot relative squared error            106.5345 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.618    0.581    0.538      0.618    0.575      0.038    0.509     0.534     LOW\n                 0.419    0.382    0.500      0.419    0.456      0.038    0.509     0.524     HIGH\nWeighted Avg.    0.523    0.486    0.520      0.523    0.518      0.038    0.509     0.530     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 42 26 |  a = LOW\n 36 26 |  b = HIGH\n\n"}, {"i": 120, "mesure": 0.481, "algo_params": " -N 10 -R -M 114 -Q 7 -L -J -doNotMakeSplitPointActualValue", "bagging_params": " -I 7 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4993\nRoot mean squared error                  0.4999\nRelative absolute error                100.0334 %\nRoot relative squared error            100.0478 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.481     0.509     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.481     0.466     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.481     0.488     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 121, "mesure": 0.5, "algo_params": " -U -M 122 -O -doNotMakeSplitPointActualValue", "bagging_params": " -O -S 48 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4989\nRoot mean squared error                  0.4996\nRelative absolute error                 99.9405 %\nRoot relative squared error             99.9803 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.500     0.527     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.500     0.473     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.500     0.502     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 122, "mesure": 0.5, "algo_params": " -C 0.9162309841642244 -M 72 -Q 9 -B -L -A -J", "bagging_params": " -P 62 -num-slots 23 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          67               51.5385 %\nIncorrectly Classified Instances        63               48.4615 %\nKappa statistic                         -0.0064\nMean absolute error                      0.4991\nRoot mean squared error                  0.4996\nRelative absolute error                 99.9913 %\nRoot relative squared error             99.9879 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.897    0.903    0.521      0.897    0.659      -0.010   0.500     0.525     LOW\n                 0.097    0.103    0.462      0.097    0.160      -0.010   0.500     0.475     HIGH\nWeighted Avg.    0.515    0.522    0.493      0.515    0.421      -0.010   0.500     0.501     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 61  7 |  a = LOW\n 56  6 |  b = HIGH\n\n"}, {"i": 123, "mesure": 0.556, "algo_params": " -C 0.2182910906203367 -J", "bagging_params": " -S 10 -num-slots 21 -I 20 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          67               51.5385 %\nIncorrectly Classified Instances        63               48.4615 %\nKappa statistic                          0.021 \nMean absolute error                      0.4751\nRoot mean squared error                  0.518 \nRelative absolute error                 95.1774 %\nRoot relative squared error            103.6553 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.618    0.597    0.532      0.618    0.571      0.021    0.556     0.581     LOW\n                 0.403    0.382    0.490      0.403    0.442      0.021    0.556     0.583     HIGH\nWeighted Avg.    0.515    0.495    0.512      0.515    0.510      0.021    0.556     0.582     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 42 26 |  a = LOW\n 37 25 |  b = HIGH\n\n"}, {"i": 124, "mesure": 0.537, "algo_params": " -C 0.8196454899532227 -Q 29 -O -B -L -J", "bagging_params": " -O -S 81 -num-slots 10 -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                          0.0091\nMean absolute error                      0.4829\nRoot mean squared error                  0.5273\nRelative absolute error                 96.7516 %\nRoot relative squared error            105.5203 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.574    0.565    0.527      0.574    0.549      0.009    0.537     0.553     LOW\n                 0.435    0.426    0.482      0.435    0.458      0.009    0.537     0.536     HIGH\nWeighted Avg.    0.508    0.499    0.506      0.508    0.506      0.009    0.537     0.545     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 39 29 |  a = LOW\n 35 27 |  b = HIGH\n\n"}, {"i": 125, "mesure": 0.475, "algo_params": " -C 0.3931739462117855 -O -B -S -L", "bagging_params": " -O -S 22 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0.0441\nMean absolute error                      0.5062\nRoot mean squared error                  0.5468\nRelative absolute error                101.4096 %\nRoot relative squared error            109.4206 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.544    0.500    0.544      0.544    0.544      0.044    0.475     0.510     LOW\n                 0.500    0.456    0.500      0.500    0.500      0.044    0.475     0.494     HIGH\nWeighted Avg.    0.523    0.479    0.523      0.523    0.523      0.044    0.475     0.502     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 37 31 |  a = LOW\n 31 31 |  b = HIGH\n\n"}, {"i": 126, "mesure": 0.529, "algo_params": " -C 0.5412850369186167 -Q 126 -O -B -A -doNotMakeSplitPointActualValue", "bagging_params": " -P 9 -num-slots 12 -I 13 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          67               51.5385 %\nIncorrectly Classified Instances        63               48.4615 %\nKappa statistic                          0.0266\nMean absolute error                      0.491 \nRoot mean squared error                  0.5021\nRelative absolute error                 98.3599 %\nRoot relative squared error            100.4791 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.559    0.532    0.535      0.559    0.547      0.027    0.530     0.558     LOW\n                 0.468    0.441    0.492      0.468    0.479      0.027    0.529     0.548     HIGH\nWeighted Avg.    0.515    0.489    0.514      0.515    0.515      0.027    0.529     0.553     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 38 30 |  a = LOW\n 33 29 |  b = HIGH\n\n"}, {"i": 127, "mesure": 0.518, "algo_params": " -C 0.0005342138679921282 -A -J", "bagging_params": " -O -S 75 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          67               51.5385 %\nIncorrectly Classified Instances        63               48.4615 %\nKappa statistic                          0.021 \nMean absolute error                      0.487 \nRoot mean squared error                  0.5269\nRelative absolute error                 97.5542 %\nRoot relative squared error            105.4401 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.618    0.597    0.532      0.618    0.571      0.021    0.518     0.592     LOW\n                 0.403    0.382    0.490      0.403    0.442      0.021    0.518     0.517     HIGH\nWeighted Avg.    0.515    0.495    0.512      0.515    0.510      0.021    0.518     0.556     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 42 26 |  a = LOW\n 37 25 |  b = HIGH\n\n"}, {"i": 128, "mesure": 0.519, "algo_params": " -N 105 -R -B -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 93 -O -S 89 -I 14 -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                         -0.0144\nMean absolute error                      0.4942\nRoot mean squared error                  0.5014\nRelative absolute error                 99.0035 %\nRoot relative squared error            100.3449 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.647    0.661    0.518      0.647    0.575      -0.015   0.519     0.551     LOW\n                 0.339    0.353    0.467      0.339    0.393      -0.015   0.519     0.529     HIGH\nWeighted Avg.    0.500    0.514    0.493      0.500    0.488      -0.015   0.519     0.541     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 44 24 |  a = LOW\n 41 21 |  b = HIGH\n\n"}, {"i": 129, "mesure": 0.491, "algo_params": " -C 0.7946553388252264 -M 70 -Q 78 -O -B -S -L -doNotMakeSplitPointActualValue", "bagging_params": " -O -num-slots 26 -I 16 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4993\nRoot mean squared error                  0.4997\nRelative absolute error                100.0202 %\nRoot relative squared error            100.012  %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.491     0.513     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.491     0.471     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.491     0.493     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 130, "mesure": 0.512, "algo_params": " -C 0.677100514387169 -M 125 -S -doNotMakeSplitPointActualValue", "bagging_params": " -O -num-slots 19 -I 2 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          69               53.0769 %\nIncorrectly Classified Instances        61               46.9231 %\nKappa statistic                          0.0256\nMean absolute error                      0.4988\nRoot mean squared error                  0.4995\nRelative absolute error                 99.9379 %\nRoot relative squared error             99.9704 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.912    0.887    0.530      0.912    0.670      0.041    0.512     0.532     LOW\n                 0.113    0.088    0.538      0.113    0.187      0.041    0.512     0.489     HIGH\nWeighted Avg.    0.531    0.506    0.534      0.531    0.440      0.041    0.512     0.511     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 62  6 |  a = LOW\n 55  7 |  b = HIGH\n\n"}, {"i": 131, "mesure": 0.506, "algo_params": " -C 0.4847267526225084 -M 104 -O -B -S", "bagging_params": " -S 62 -num-slots 8 -I 9 -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                         -0.0127\nMean absolute error                      0.4993\nRoot mean squared error                  0.4996\nRelative absolute error                100.0191 %\nRoot relative squared error             99.9833 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.794    0.806    0.519      0.794    0.628      -0.015   0.506     0.530     LOW\n                 0.194    0.206    0.462      0.194    0.273      -0.015   0.506     0.477     HIGH\nWeighted Avg.    0.508    0.520    0.492      0.508    0.459      -0.015   0.506     0.505     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 54 14 |  a = LOW\n 50 12 |  b = HIGH\n\n"}, {"i": 132, "mesure": 0.372, "algo_params": " -U -M 52 -Q 110 -O -doNotMakeSplitPointActualValue", "bagging_params": " -S 2 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          55               42.3077 %\nIncorrectly Classified Instances        75               57.6923 %\nKappa statistic                         -0.1688\nMean absolute error                      0.5142\nRoot mean squared error                  0.5204\nRelative absolute error                103.0177 %\nRoot relative squared error            104.1531 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.559    0.726    0.458      0.559    0.503      -0.174   0.372     0.473     LOW\n                 0.274    0.441    0.362      0.274    0.312      -0.174   0.372     0.426     HIGH\nWeighted Avg.    0.423    0.590    0.412      0.423    0.412      -0.174   0.372     0.451     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 38 30 |  a = LOW\n 45 17 |  b = HIGH\n\n"}, {"i": 133, "mesure": 0.521, "algo_params": " -C 0.6886930602037905 -Q 76 -L", "bagging_params": " -S 81 -num-slots 30 -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          64               49.2308 %\nIncorrectly Classified Instances        66               50.7692 %\nKappa statistic                         -0.0176\nMean absolute error                      0.491 \nRoot mean squared error                  0.5311\nRelative absolute error                 98.3606 %\nRoot relative squared error            106.279  %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.515    0.532    0.515      0.515    0.515      -0.018   0.521     0.545     LOW\n                 0.468    0.485    0.468      0.468    0.468      -0.018   0.521     0.511     HIGH\nWeighted Avg.    0.492    0.510    0.492      0.492    0.492      -0.018   0.521     0.529     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 35 33 |  a = LOW\n 33 29 |  b = HIGH\n\n"}, {"i": 134, "mesure": 0, "algo_params": " -U -C 0.6765292346197691 -Q 63 -O", "bagging_params": " -P 63 -O -S 57 -I 10 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\n\nWeka exception: Doesn't make sense to change confidence for unpruned tree!\n\nGeneral options:\n\n-h or -help\n\tOutput help information.\n-synopsis or -info\n\tOutput synopsis for classifier (use in conjunction  with -h)\n-t <name of training file>\n\tSets training file.\n-T <name of test file>\n\tSets test file. If missing, a cross-validation will be performed\n\ton the training data.\n-c <class index>\n\tSets index of class attribute (default: last).\n-x <number of folds>\n\tSets number of folds for cross-validation (default: 10).\n-no-cv\n\tDo not perform any cross validation.\n-force-batch-training\n\tAlways train classifier in batch mode, never incrementally.\n-split-percentage <percentage>\n\tSets the percentage for the train/test set split, e.g., 66.\n-preserve-order\n\tPreserves the order in the percentage split.\n-s <random number seed>\n\tSets random number seed for cross-validation or percentage split\n\t(default: 1).\n-m <name of file with cost matrix>\n\tSets file with cost matrix.\n-toggle <comma-separated list of evaluation metric names>\n\tComma separated list of metric names to toggle in the output.\n\tAll metrics are output by default with the exception of 'Coverage' and 'Region size'.\n\tAvailable metrics:\n\tCorrect,Incorrect,Kappa,Total cost,Average cost,KB relative,KB information,\n\tCorrelation,Complexity 0,Complexity scheme,Complexity improvement,\n\tMAE,RMSE,RAE,RRSE,Coverage,Region size,TP rate,FP rate,Precision,Recall,\n\tF-measure,MCC,ROC area,PRC area\n-l <name of input file>\n\tSets model input file. In case the filename ends with '.xml',\n\ta PMML file is loaded or, if that fails, options are loaded\n\tfrom the XML file.\n-d <name of output file>\n\tSets model output file. In case the filename ends with '.xml',\n\tonly the options are saved to the XML file, not the model.\n-v\n\tOutputs no statistics for training data.\n-o\n\tOutputs statistics only, not the classifier.\n-output-models-for-training-splits\n\tOutput models for training splits if cross-validation or percentage-split evaluation is used.\n-do-not-output-per-class-statistics\n\tDo not output statistics for each class.\n-k\n\tOutputs information-theoretic statistics.\n-classifications \"weka.classifiers.evaluation.output.prediction.AbstractOutput + options\"\n\tUses the specified class for generating the classification output.\n\tE.g.: weka.classifiers.evaluation.output.prediction.PlainText\n-p range\n\tOutputs predictions for test instances (or the train instances if\n\tno test instances provided and -no-cv is used), along with the \n\tattributes in the specified range (and nothing else). \n\tUse '-p 0' if no attributes are desired.\n\tDeprecated: use \"-classifications ...\" instead.\n-distribution\n\tOutputs the distribution instead of only the prediction\n\tin conjunction with the '-p' option (only nominal classes).\n\tDeprecated: use \"-classifications ...\" instead.\n-r\n\tOnly outputs cumulative margin distribution.\n-xml filename | xml-string\n\tRetrieves the options from the XML-data instead of the command line.\n-threshold-file <file>\n\tThe file to save the threshold data to.\n\tThe format is determined by the extensions, e.g., '.arff' for ARFF \n\tformat or '.csv' for CSV.\n-threshold-label <label>\n\tThe class label to determine the threshold data for\n\t(default is the first label)\n-no-predictions\n\tTurns off the collection of predictions in order to conserve memory.\n\nOptions specific to weka.classifiers.meta.Bagging:\n\n-P\n\tSize of each bag, as a percentage of the\n\ttraining set size. (default 100)\n-O\n\tCalculate the out of bag error.\n-store-out-of-bag-predictions\n\tWhether to store out of bag predictions in internal evaluation object.\n-output-out-of-bag-complexity-statistics\n\tWhether to output complexity-based statistics when out-of-bag evaluation is performed.\n-represent-copies-using-weights\n\tRepresent copies of instances using weights rather than explicitly.\n-print\n\tPrint the individual classifiers in the output\n-S <num>\n\tRandom number seed.\n\t(default 1)\n-num-slots <num>\n\tNumber of execution slots.\n\t(default 1 - i.e. no parallelism)\n\t(use 0 to auto-detect number of cores)\n-I <num>\n\tNumber of iterations.\n\t(current value 10)\n-W <classifier name>\n\tFull name of base classifier.\n\t(default: weka.classifiers.trees.REPTree)\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\nOptions specific to classifier weka.classifiers.trees.J48:\n\n-U\n\tUse unpruned tree.\n-O\n\tDo not collapse tree.\n-C <pruning confidence>\n\tSet confidence threshold for pruning.\n\t(default 0.25)\n-M <minimum number of instances>\n\tSet minimum number of instances per leaf.\n\t(default 2)\n-R\n\tUse reduced error pruning.\n-N <number of folds>\n\tSet number of folds for reduced error\n\tpruning. One fold is used as pruning set.\n\t(default 3)\n-B\n\tUse binary splits only.\n-S\n\tDo not perform subtree raising.\n-L\n\tDo not clean up after the tree has been built.\n-A\n\tLaplace smoothing for predicted probabilities.\n-J\n\tDo not use MDL correction for info gain on numeric attributes.\n-Q <seed>\n\tSeed for random data shuffling (default 1).\n-doNotMakeSplitPointActualValue\n\tDo not make split point actual value.\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\n"}, {"i": 135, "mesure": 0.477, "algo_params": " -C 0.10746845541890171 -A -J", "bagging_params": " -P 42 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                          0.0005\nMean absolute error                      0.5026\nRoot mean squared error                  0.5319\nRelative absolute error                100.6946 %\nRoot relative squared error            106.4394 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.662    0.661    0.523      0.662    0.584      0.001    0.477     0.524     LOW\n                 0.339    0.338    0.477      0.339    0.396      0.001    0.477     0.493     HIGH\nWeighted Avg.    0.508    0.507    0.501      0.508    0.495      0.001    0.477     0.509     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 45 23 |  a = LOW\n 41 21 |  b = HIGH\n\n"}, {"i": 136, "mesure": 0, "algo_params": " -U -O -C 0.8555403221733947 -M 31 -Q 105 -O", "bagging_params": " -P 45 -S 73 -store-out-of-bag-predictions", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\n\nWeka exception: Doesn't make sense to change confidence for unpruned tree!\n\nGeneral options:\n\n-h or -help\n\tOutput help information.\n-synopsis or -info\n\tOutput synopsis for classifier (use in conjunction  with -h)\n-t <name of training file>\n\tSets training file.\n-T <name of test file>\n\tSets test file. If missing, a cross-validation will be performed\n\ton the training data.\n-c <class index>\n\tSets index of class attribute (default: last).\n-x <number of folds>\n\tSets number of folds for cross-validation (default: 10).\n-no-cv\n\tDo not perform any cross validation.\n-force-batch-training\n\tAlways train classifier in batch mode, never incrementally.\n-split-percentage <percentage>\n\tSets the percentage for the train/test set split, e.g., 66.\n-preserve-order\n\tPreserves the order in the percentage split.\n-s <random number seed>\n\tSets random number seed for cross-validation or percentage split\n\t(default: 1).\n-m <name of file with cost matrix>\n\tSets file with cost matrix.\n-toggle <comma-separated list of evaluation metric names>\n\tComma separated list of metric names to toggle in the output.\n\tAll metrics are output by default with the exception of 'Coverage' and 'Region size'.\n\tAvailable metrics:\n\tCorrect,Incorrect,Kappa,Total cost,Average cost,KB relative,KB information,\n\tCorrelation,Complexity 0,Complexity scheme,Complexity improvement,\n\tMAE,RMSE,RAE,RRSE,Coverage,Region size,TP rate,FP rate,Precision,Recall,\n\tF-measure,MCC,ROC area,PRC area\n-l <name of input file>\n\tSets model input file. In case the filename ends with '.xml',\n\ta PMML file is loaded or, if that fails, options are loaded\n\tfrom the XML file.\n-d <name of output file>\n\tSets model output file. In case the filename ends with '.xml',\n\tonly the options are saved to the XML file, not the model.\n-v\n\tOutputs no statistics for training data.\n-o\n\tOutputs statistics only, not the classifier.\n-output-models-for-training-splits\n\tOutput models for training splits if cross-validation or percentage-split evaluation is used.\n-do-not-output-per-class-statistics\n\tDo not output statistics for each class.\n-k\n\tOutputs information-theoretic statistics.\n-classifications \"weka.classifiers.evaluation.output.prediction.AbstractOutput + options\"\n\tUses the specified class for generating the classification output.\n\tE.g.: weka.classifiers.evaluation.output.prediction.PlainText\n-p range\n\tOutputs predictions for test instances (or the train instances if\n\tno test instances provided and -no-cv is used), along with the \n\tattributes in the specified range (and nothing else). \n\tUse '-p 0' if no attributes are desired.\n\tDeprecated: use \"-classifications ...\" instead.\n-distribution\n\tOutputs the distribution instead of only the prediction\n\tin conjunction with the '-p' option (only nominal classes).\n\tDeprecated: use \"-classifications ...\" instead.\n-r\n\tOnly outputs cumulative margin distribution.\n-xml filename | xml-string\n\tRetrieves the options from the XML-data instead of the command line.\n-threshold-file <file>\n\tThe file to save the threshold data to.\n\tThe format is determined by the extensions, e.g., '.arff' for ARFF \n\tformat or '.csv' for CSV.\n-threshold-label <label>\n\tThe class label to determine the threshold data for\n\t(default is the first label)\n-no-predictions\n\tTurns off the collection of predictions in order to conserve memory.\n\nOptions specific to weka.classifiers.meta.Bagging:\n\n-P\n\tSize of each bag, as a percentage of the\n\ttraining set size. (default 100)\n-O\n\tCalculate the out of bag error.\n-store-out-of-bag-predictions\n\tWhether to store out of bag predictions in internal evaluation object.\n-output-out-of-bag-complexity-statistics\n\tWhether to output complexity-based statistics when out-of-bag evaluation is performed.\n-represent-copies-using-weights\n\tRepresent copies of instances using weights rather than explicitly.\n-print\n\tPrint the individual classifiers in the output\n-S <num>\n\tRandom number seed.\n\t(default 1)\n-num-slots <num>\n\tNumber of execution slots.\n\t(default 1 - i.e. no parallelism)\n\t(use 0 to auto-detect number of cores)\n-I <num>\n\tNumber of iterations.\n\t(current value 10)\n-W <classifier name>\n\tFull name of base classifier.\n\t(default: weka.classifiers.trees.REPTree)\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\nOptions specific to classifier weka.classifiers.trees.J48:\n\n-U\n\tUse unpruned tree.\n-O\n\tDo not collapse tree.\n-C <pruning confidence>\n\tSet confidence threshold for pruning.\n\t(default 0.25)\n-M <minimum number of instances>\n\tSet minimum number of instances per leaf.\n\t(default 2)\n-R\n\tUse reduced error pruning.\n-N <number of folds>\n\tSet number of folds for reduced error\n\tpruning. One fold is used as pruning set.\n\t(default 3)\n-B\n\tUse binary splits only.\n-S\n\tDo not perform subtree raising.\n-L\n\tDo not clean up after the tree has been built.\n-A\n\tLaplace smoothing for predicted probabilities.\n-J\n\tDo not use MDL correction for info gain on numeric attributes.\n-Q <seed>\n\tSeed for random data shuffling (default 1).\n-doNotMakeSplitPointActualValue\n\tDo not make split point actual value.\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\n"}, {"i": 137, "mesure": 0.365, "algo_params": " -C 0.24383706449806075 -M 35 -Q 52 -L -A -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 94 -O", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          51               39.2308 %\nIncorrectly Classified Instances        79               60.7692 %\nKappa statistic                         -0.2241\nMean absolute error                      0.5202\nRoot mean squared error                  0.5287\nRelative absolute error                104.2179 %\nRoot relative squared error            105.7969 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.471    0.694    0.427      0.471    0.448      -0.225   0.365     0.431     LOW\n                 0.306    0.529    0.345      0.306    0.325      -0.225   0.365     0.411     HIGH\nWeighted Avg.    0.392    0.615    0.388      0.392    0.389      -0.225   0.365     0.421     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 32 36 |  a = LOW\n 43 19 |  b = HIGH\n\n"}, {"i": 138, "mesure": 0.491, "algo_params": " -U -M 80", "bagging_params": " -O -S 42 -num-slots 15 -I 17 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4991\nRoot mean squared error                  0.4997\nRelative absolute error                 99.9855 %\nRoot relative squared error            100.0112 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.491     0.513     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.491     0.471     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.491     0.493     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 139, "mesure": 0.41, "algo_params": " -C 0.9580653541196247 -M 12 -O -A -J -doNotMakeSplitPointActualValue", "bagging_params": " -num-slots 2 -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                         -0.0173\nMean absolute error                      0.5142\nRoot mean squared error                  0.5391\nRelative absolute error                103.0143 %\nRoot relative squared error            107.8815 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.676    0.694    0.517      0.676    0.586      -0.018   0.410     0.448     LOW\n                 0.306    0.324    0.463      0.306    0.369      -0.018   0.410     0.490     HIGH\nWeighted Avg.    0.500    0.517    0.491      0.500    0.482      -0.018   0.410     0.468     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 46 22 |  a = LOW\n 43 19 |  b = HIGH\n\n"}, {"i": 140, "mesure": 0, "algo_params": " -N 70 -R -L -A -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 47 -O -S 87 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tweka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tat weka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 141, "mesure": 0, "algo_params": " -U -O -U -M 121 -O -doNotMakeSplitPointActualValue", "bagging_params": " -O -S 33", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\n\nWeka exception: Illegal options: -U -O \n\nGeneral options:\n\n-h or -help\n\tOutput help information.\n-synopsis or -info\n\tOutput synopsis for classifier (use in conjunction  with -h)\n-t <name of training file>\n\tSets training file.\n-T <name of test file>\n\tSets test file. If missing, a cross-validation will be performed\n\ton the training data.\n-c <class index>\n\tSets index of class attribute (default: last).\n-x <number of folds>\n\tSets number of folds for cross-validation (default: 10).\n-no-cv\n\tDo not perform any cross validation.\n-force-batch-training\n\tAlways train classifier in batch mode, never incrementally.\n-split-percentage <percentage>\n\tSets the percentage for the train/test set split, e.g., 66.\n-preserve-order\n\tPreserves the order in the percentage split.\n-s <random number seed>\n\tSets random number seed for cross-validation or percentage split\n\t(default: 1).\n-m <name of file with cost matrix>\n\tSets file with cost matrix.\n-toggle <comma-separated list of evaluation metric names>\n\tComma separated list of metric names to toggle in the output.\n\tAll metrics are output by default with the exception of 'Coverage' and 'Region size'.\n\tAvailable metrics:\n\tCorrect,Incorrect,Kappa,Total cost,Average cost,KB relative,KB information,\n\tCorrelation,Complexity 0,Complexity scheme,Complexity improvement,\n\tMAE,RMSE,RAE,RRSE,Coverage,Region size,TP rate,FP rate,Precision,Recall,\n\tF-measure,MCC,ROC area,PRC area\n-l <name of input file>\n\tSets model input file. In case the filename ends with '.xml',\n\ta PMML file is loaded or, if that fails, options are loaded\n\tfrom the XML file.\n-d <name of output file>\n\tSets model output file. In case the filename ends with '.xml',\n\tonly the options are saved to the XML file, not the model.\n-v\n\tOutputs no statistics for training data.\n-o\n\tOutputs statistics only, not the classifier.\n-output-models-for-training-splits\n\tOutput models for training splits if cross-validation or percentage-split evaluation is used.\n-do-not-output-per-class-statistics\n\tDo not output statistics for each class.\n-k\n\tOutputs information-theoretic statistics.\n-classifications \"weka.classifiers.evaluation.output.prediction.AbstractOutput + options\"\n\tUses the specified class for generating the classification output.\n\tE.g.: weka.classifiers.evaluation.output.prediction.PlainText\n-p range\n\tOutputs predictions for test instances (or the train instances if\n\tno test instances provided and -no-cv is used), along with the \n\tattributes in the specified range (and nothing else). \n\tUse '-p 0' if no attributes are desired.\n\tDeprecated: use \"-classifications ...\" instead.\n-distribution\n\tOutputs the distribution instead of only the prediction\n\tin conjunction with the '-p' option (only nominal classes).\n\tDeprecated: use \"-classifications ...\" instead.\n-r\n\tOnly outputs cumulative margin distribution.\n-xml filename | xml-string\n\tRetrieves the options from the XML-data instead of the command line.\n-threshold-file <file>\n\tThe file to save the threshold data to.\n\tThe format is determined by the extensions, e.g., '.arff' for ARFF \n\tformat or '.csv' for CSV.\n-threshold-label <label>\n\tThe class label to determine the threshold data for\n\t(default is the first label)\n-no-predictions\n\tTurns off the collection of predictions in order to conserve memory.\n\nOptions specific to weka.classifiers.meta.Bagging:\n\n-P\n\tSize of each bag, as a percentage of the\n\ttraining set size. (default 100)\n-O\n\tCalculate the out of bag error.\n-store-out-of-bag-predictions\n\tWhether to store out of bag predictions in internal evaluation object.\n-output-out-of-bag-complexity-statistics\n\tWhether to output complexity-based statistics when out-of-bag evaluation is performed.\n-represent-copies-using-weights\n\tRepresent copies of instances using weights rather than explicitly.\n-print\n\tPrint the individual classifiers in the output\n-S <num>\n\tRandom number seed.\n\t(default 1)\n-num-slots <num>\n\tNumber of execution slots.\n\t(default 1 - i.e. no parallelism)\n\t(use 0 to auto-detect number of cores)\n-I <num>\n\tNumber of iterations.\n\t(current value 10)\n-W <classifier name>\n\tFull name of base classifier.\n\t(default: weka.classifiers.trees.REPTree)\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\nOptions specific to classifier weka.classifiers.trees.J48:\n\n-U\n\tUse unpruned tree.\n-O\n\tDo not collapse tree.\n-C <pruning confidence>\n\tSet confidence threshold for pruning.\n\t(default 0.25)\n-M <minimum number of instances>\n\tSet minimum number of instances per leaf.\n\t(default 2)\n-R\n\tUse reduced error pruning.\n-N <number of folds>\n\tSet number of folds for reduced error\n\tpruning. One fold is used as pruning set.\n\t(default 3)\n-B\n\tUse binary splits only.\n-S\n\tDo not perform subtree raising.\n-L\n\tDo not clean up after the tree has been built.\n-A\n\tLaplace smoothing for predicted probabilities.\n-J\n\tDo not use MDL correction for info gain on numeric attributes.\n-Q <seed>\n\tSeed for random data shuffling (default 1).\n-doNotMakeSplitPointActualValue\n\tDo not make split point actual value.\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\n"}, {"i": 142, "mesure": 0.478, "algo_params": " -C 0.16547306875869772 -M 120 -Q 27 -L -A", "bagging_params": " -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4993\nRoot mean squared error                  0.4999\nRelative absolute error                100.0376 %\nRoot relative squared error            100.0516 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.478     0.506     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.478     0.465     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.478     0.486     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 143, "mesure": 0.485, "algo_params": " -N 84 -R -M 99 -B -S -J -doNotMakeSplitPointActualValue", "bagging_params": " -S 120 -num-slots 11 -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4991\nRoot mean squared error                  0.4999\nRelative absolute error                 99.9877 %\nRoot relative squared error            100.042  %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.485     0.516     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.485     0.467     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.485     0.493     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 144, "mesure": 0.548, "algo_params": " -C 0.38255334005583885 -B -A", "bagging_params": " -P 63 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                          0.0091\nMean absolute error                      0.4813\nRoot mean squared error                  0.5132\nRelative absolute error                 96.4241 %\nRoot relative squared error            102.7019 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.574    0.565    0.527      0.574    0.549      0.009    0.548     0.558     LOW\n                 0.435    0.426    0.482      0.435    0.458      0.009    0.548     0.579     HIGH\nWeighted Avg.    0.508    0.499    0.506      0.508    0.506      0.009    0.548     0.568     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 39 29 |  a = LOW\n 35 27 |  b = HIGH\n\n"}, {"i": 145, "mesure": 0.478, "algo_params": " -U -M 130 -Q 12 -B -doNotMakeSplitPointActualValue", "bagging_params": " -P 91 -O -I 29 -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4994\nRoot mean squared error                  0.4998\nRelative absolute error                100.044  %\nRoot relative squared error            100.0314 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.478     0.506     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.478     0.465     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.478     0.486     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 146, "mesure": 0.498, "algo_params": " -C 0.24920654190168678 -M 29 -Q 5 -B -A -J", "bagging_params": " -P 10 -O -num-slots 25 -I 4 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                          0     \nMean absolute error                      0.5001\nRoot mean squared error                  0.5047\nRelative absolute error                100.198  %\nRoot relative squared error            100.9985 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.500    0.500    0.523      0.500    0.511      0.000    0.498     0.523     LOW\n                 0.500    0.500    0.477      0.500    0.488      0.000    0.498     0.477     HIGH\nWeighted Avg.    0.500    0.500    0.501      0.500    0.500      0.000    0.498     0.501     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 34 34 |  a = LOW\n 31 31 |  b = HIGH\n\n"}, {"i": 147, "mesure": 0.558, "algo_params": " -C 0.49014652951026205 -O -L -doNotMakeSplitPointActualValue", "bagging_params": " -S 11 -I 16", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          76               58.4615 %\nIncorrectly Classified Instances        54               41.5385 %\nKappa statistic                          0.1627\nMean absolute error                      0.4777\nRoot mean squared error                  0.5141\nRelative absolute error                 95.6916 %\nRoot relative squared error            102.8819 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.662    0.500    0.592      0.662    0.625      0.164    0.558     0.577     LOW\n                 0.500    0.338    0.574      0.500    0.534      0.164    0.558     0.564     HIGH\nWeighted Avg.    0.585    0.423    0.584      0.585    0.582      0.164    0.558     0.571     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 45 23 |  a = LOW\n 31 31 |  b = HIGH\n\n"}, {"i": 148, "mesure": 0.538, "algo_params": " -C 0.9057509814020049 -Q 50 -O -S -A -J", "bagging_params": " -P 84 -O -S 8 -num-slots 22 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          67               51.5385 %\nIncorrectly Classified Instances        63               48.4615 %\nKappa statistic                          0.0224\nMean absolute error                      0.4831\nRoot mean squared error                  0.5165\nRelative absolute error                 96.7748 %\nRoot relative squared error            103.3584 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.603    0.581    0.532      0.603    0.566      0.023    0.538     0.629     LOW\n                 0.419    0.397    0.491      0.419    0.452      0.023    0.538     0.537     HIGH\nWeighted Avg.    0.515    0.493    0.512      0.515    0.511      0.023    0.538     0.585     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 41 27 |  a = LOW\n 36 26 |  b = HIGH\n\n"}, {"i": 149, "mesure": 0.618, "algo_params": " -U -Q 90", "bagging_params": " -P 57 -O -S 54 -I 15 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          73               56.1538 %\nIncorrectly Classified Instances        57               43.8462 %\nKappa statistic                          0.1168\nMean absolute error                      0.4622\nRoot mean squared error                  0.4965\nRelative absolute error                 92.6053 %\nRoot relative squared error             99.3575 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.632    0.516    0.573      0.632    0.601      0.117    0.618     0.610     LOW\n                 0.484    0.368    0.545      0.484    0.513      0.117    0.618     0.622     HIGH\nWeighted Avg.    0.562    0.445    0.560      0.562    0.559      0.117    0.618     0.615     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 43 25 |  a = LOW\n 32 30 |  b = HIGH\n\n"}, {"i": 150, "mesure": 0.485, "algo_params": " -C 0.7398059943636687 -M 85 -Q 34 -B -S -L -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 42 -S 28 -num-slots 26 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                         -0.0127\nMean absolute error                      0.4997\nRoot mean squared error                  0.5006\nRelative absolute error                100.1023 %\nRoot relative squared error            100.1863 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.794    0.806    0.519      0.794    0.628      -0.015   0.485     0.516     LOW\n                 0.194    0.206    0.462      0.194    0.273      -0.015   0.485     0.467     HIGH\nWeighted Avg.    0.508    0.520    0.492      0.508    0.459      -0.015   0.485     0.493     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 54 14 |  a = LOW\n 50 12 |  b = HIGH\n\n"}, {"i": 151, "mesure": 0.454, "algo_params": " -C 0.7579213265982471 -M 18 -Q 6 -B -S -L -A -J", "bagging_params": " -P 79 -num-slots 26 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          59               45.3846 %\nIncorrectly Classified Instances        71               54.6154 %\nKappa statistic                         -0.1049\nMean absolute error                      0.5071\nRoot mean squared error                  0.523 \nRelative absolute error                101.6004 %\nRoot relative squared error            104.6701 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.574    0.677    0.481      0.574    0.523      -0.107   0.454     0.494     LOW\n                 0.323    0.426    0.408      0.323    0.360      -0.107   0.454     0.512     HIGH\nWeighted Avg.    0.454    0.558    0.447      0.454    0.446      -0.107   0.454     0.502     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 39 29 |  a = LOW\n 42 20 |  b = HIGH\n\n"}, {"i": 152, "mesure": 0.505, "algo_params": " -N 76 -R -Q 57 -O -B -L -J", "bagging_params": " -O -num-slots 11 -I 1 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0.0233\nMean absolute error                      0.4974\nRoot mean squared error                  0.5165\nRelative absolute error                 99.6531 %\nRoot relative squared error            103.3618 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.765    0.742    0.531      0.765    0.627      0.026    0.505     0.531     LOW\n                 0.258    0.235    0.500      0.258    0.340      0.026    0.505     0.482     HIGH\nWeighted Avg.    0.523    0.500    0.516      0.523    0.490      0.026    0.505     0.507     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 52 16 |  a = LOW\n 46 16 |  b = HIGH\n\n"}, {"i": 153, "mesure": 0, "algo_params": " -N 71 -R -Q 74 -B -S -L -A -doNotMakeSplitPointActualValue", "bagging_params": " -P 46 -O -I 16 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tweka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tat weka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 154, "mesure": 0.522, "algo_params": " -C 0.640856712210405 -O -L -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 66 -O -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          69               53.0769 %\nIncorrectly Classified Instances        61               46.9231 %\nKappa statistic                          0.0562\nMean absolute error                      0.4958\nRoot mean squared error                  0.5353\nRelative absolute error                 99.3306 %\nRoot relative squared error            107.1249 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.588    0.532    0.548      0.588    0.567      0.056    0.522     0.521     LOW\n                 0.468    0.412    0.509      0.468    0.487      0.056    0.522     0.527     HIGH\nWeighted Avg.    0.531    0.475    0.529      0.531    0.529      0.056    0.522     0.524     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 40 28 |  a = LOW\n 33 29 |  b = HIGH\n\n"}, {"i": 155, "mesure": 0.467, "algo_params": " -C 0.5395503465966233 -O -B -L", "bagging_params": " -P 84 -S 79 -I 28 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          64               49.2308 %\nIncorrectly Classified Instances        66               50.7692 %\nKappa statistic                         -0.0278\nMean absolute error                      0.5017\nRoot mean squared error                  0.5298\nRelative absolute error                100.5033 %\nRoot relative squared error            106.0249 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.618    0.645    0.512      0.618    0.560      -0.028   0.467     0.488     LOW\n                 0.355    0.382    0.458      0.355    0.400      -0.028   0.467     0.523     HIGH\nWeighted Avg.    0.492    0.520    0.487      0.492    0.484      -0.028   0.467     0.505     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 42 26 |  a = LOW\n 40 22 |  b = HIGH\n\n"}, {"i": 156, "mesure": 0.489, "algo_params": " -U -M 51 -Q 46 -doNotMakeSplitPointActualValue", "bagging_params": " -P 33 -num-slots 18 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                         -0.0127\nMean absolute error                      0.4994\nRoot mean squared error                  0.5003\nRelative absolute error                100.0426 %\nRoot relative squared error            100.1143 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.794    0.806    0.519      0.794    0.628      -0.015   0.489     0.520     LOW\n                 0.194    0.206    0.462      0.194    0.273      -0.015   0.489     0.469     HIGH\nWeighted Avg.    0.508    0.520    0.492      0.508    0.459      -0.015   0.489     0.496     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 54 14 |  a = LOW\n 50 12 |  b = HIGH\n\n"}, {"i": 157, "mesure": 0.476, "algo_params": " -C 0.47389514771697383 -Q 14 -J", "bagging_params": " -P 25 -O -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          62               47.6923 %\nIncorrectly Classified Instances        68               52.3077 %\nKappa statistic                         -0.0529\nMean absolute error                      0.5076\nRoot mean squared error                  0.5334\nRelative absolute error                101.6844 %\nRoot relative squared error            106.7399 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.544    0.597    0.500      0.544    0.521      -0.053   0.476     0.525     LOW\n                 0.403    0.456    0.446      0.403    0.424      -0.053   0.476     0.485     HIGH\nWeighted Avg.    0.477    0.530    0.474      0.477    0.475      -0.053   0.476     0.506     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 37 31 |  a = LOW\n 37 25 |  b = HIGH\n\n"}, {"i": 158, "mesure": 0.579, "algo_params": " -U -Q 114 -B -doNotMakeSplitPointActualValue", "bagging_params": " -P 59 -O -num-slots 22 -I 6 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          73               56.1538 %\nIncorrectly Classified Instances        57               43.8462 %\nKappa statistic                          0.1143\nMean absolute error                      0.4701\nRoot mean squared error                  0.5209\nRelative absolute error                 94.1853 %\nRoot relative squared error            104.2548 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.662    0.548    0.570      0.662    0.612      0.116    0.579     0.572     LOW\n                 0.452    0.338    0.549      0.452    0.496      0.116    0.579     0.580     HIGH\nWeighted Avg.    0.562    0.448    0.560      0.562    0.557      0.116    0.579     0.576     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 45 23 |  a = LOW\n 34 28 |  b = HIGH\n\n"}, {"i": 159, "mesure": 0.523, "algo_params": " -C 0.5078222444254237 -O -B -A -doNotMakeSplitPointActualValue", "bagging_params": " -O -num-slots 9 -I 2 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                         -0.0159\nMean absolute error                      0.4846\nRoot mean squared error                  0.5767\nRelative absolute error                 97.0915 %\nRoot relative squared error            115.4178 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.662    0.677    0.517      0.662    0.581      -0.017   0.523     0.565     LOW\n                 0.323    0.338    0.465      0.323    0.381      -0.017   0.523     0.521     HIGH\nWeighted Avg.    0.500    0.516    0.492      0.500    0.485      -0.017   0.523     0.544     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 45 23 |  a = LOW\n 42 20 |  b = HIGH\n\n"}, {"i": 160, "mesure": 0, "algo_params": " -U -O -B -C 0.6970925408701975 -M 125 -Q 122 -B", "bagging_params": " -P 95 -num-slots 5 -I 22 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\n\nWeka exception: Doesn't make sense to change confidence for unpruned tree!\n\nGeneral options:\n\n-h or -help\n\tOutput help information.\n-synopsis or -info\n\tOutput synopsis for classifier (use in conjunction  with -h)\n-t <name of training file>\n\tSets training file.\n-T <name of test file>\n\tSets test file. If missing, a cross-validation will be performed\n\ton the training data.\n-c <class index>\n\tSets index of class attribute (default: last).\n-x <number of folds>\n\tSets number of folds for cross-validation (default: 10).\n-no-cv\n\tDo not perform any cross validation.\n-force-batch-training\n\tAlways train classifier in batch mode, never incrementally.\n-split-percentage <percentage>\n\tSets the percentage for the train/test set split, e.g., 66.\n-preserve-order\n\tPreserves the order in the percentage split.\n-s <random number seed>\n\tSets random number seed for cross-validation or percentage split\n\t(default: 1).\n-m <name of file with cost matrix>\n\tSets file with cost matrix.\n-toggle <comma-separated list of evaluation metric names>\n\tComma separated list of metric names to toggle in the output.\n\tAll metrics are output by default with the exception of 'Coverage' and 'Region size'.\n\tAvailable metrics:\n\tCorrect,Incorrect,Kappa,Total cost,Average cost,KB relative,KB information,\n\tCorrelation,Complexity 0,Complexity scheme,Complexity improvement,\n\tMAE,RMSE,RAE,RRSE,Coverage,Region size,TP rate,FP rate,Precision,Recall,\n\tF-measure,MCC,ROC area,PRC area\n-l <name of input file>\n\tSets model input file. In case the filename ends with '.xml',\n\ta PMML file is loaded or, if that fails, options are loaded\n\tfrom the XML file.\n-d <name of output file>\n\tSets model output file. In case the filename ends with '.xml',\n\tonly the options are saved to the XML file, not the model.\n-v\n\tOutputs no statistics for training data.\n-o\n\tOutputs statistics only, not the classifier.\n-output-models-for-training-splits\n\tOutput models for training splits if cross-validation or percentage-split evaluation is used.\n-do-not-output-per-class-statistics\n\tDo not output statistics for each class.\n-k\n\tOutputs information-theoretic statistics.\n-classifications \"weka.classifiers.evaluation.output.prediction.AbstractOutput + options\"\n\tUses the specified class for generating the classification output.\n\tE.g.: weka.classifiers.evaluation.output.prediction.PlainText\n-p range\n\tOutputs predictions for test instances (or the train instances if\n\tno test instances provided and -no-cv is used), along with the \n\tattributes in the specified range (and nothing else). \n\tUse '-p 0' if no attributes are desired.\n\tDeprecated: use \"-classifications ...\" instead.\n-distribution\n\tOutputs the distribution instead of only the prediction\n\tin conjunction with the '-p' option (only nominal classes).\n\tDeprecated: use \"-classifications ...\" instead.\n-r\n\tOnly outputs cumulative margin distribution.\n-xml filename | xml-string\n\tRetrieves the options from the XML-data instead of the command line.\n-threshold-file <file>\n\tThe file to save the threshold data to.\n\tThe format is determined by the extensions, e.g., '.arff' for ARFF \n\tformat or '.csv' for CSV.\n-threshold-label <label>\n\tThe class label to determine the threshold data for\n\t(default is the first label)\n-no-predictions\n\tTurns off the collection of predictions in order to conserve memory.\n\nOptions specific to weka.classifiers.meta.Bagging:\n\n-P\n\tSize of each bag, as a percentage of the\n\ttraining set size. (default 100)\n-O\n\tCalculate the out of bag error.\n-store-out-of-bag-predictions\n\tWhether to store out of bag predictions in internal evaluation object.\n-output-out-of-bag-complexity-statistics\n\tWhether to output complexity-based statistics when out-of-bag evaluation is performed.\n-represent-copies-using-weights\n\tRepresent copies of instances using weights rather than explicitly.\n-print\n\tPrint the individual classifiers in the output\n-S <num>\n\tRandom number seed.\n\t(default 1)\n-num-slots <num>\n\tNumber of execution slots.\n\t(default 1 - i.e. no parallelism)\n\t(use 0 to auto-detect number of cores)\n-I <num>\n\tNumber of iterations.\n\t(current value 22)\n-W <classifier name>\n\tFull name of base classifier.\n\t(default: weka.classifiers.trees.REPTree)\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\nOptions specific to classifier weka.classifiers.trees.J48:\n\n-U\n\tUse unpruned tree.\n-O\n\tDo not collapse tree.\n-C <pruning confidence>\n\tSet confidence threshold for pruning.\n\t(default 0.25)\n-M <minimum number of instances>\n\tSet minimum number of instances per leaf.\n\t(default 2)\n-R\n\tUse reduced error pruning.\n-N <number of folds>\n\tSet number of folds for reduced error\n\tpruning. One fold is used as pruning set.\n\t(default 3)\n-B\n\tUse binary splits only.\n-S\n\tDo not perform subtree raising.\n-L\n\tDo not clean up after the tree has been built.\n-A\n\tLaplace smoothing for predicted probabilities.\n-J\n\tDo not use MDL correction for info gain on numeric attributes.\n-Q <seed>\n\tSeed for random data shuffling (default 1).\n-doNotMakeSplitPointActualValue\n\tDo not make split point actual value.\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\n"}, {"i": 161, "mesure": 0.499, "algo_params": " -C 0.6368111900189792 -M 105 -O -S -L -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 20 -S 126 -num-slots 17 -I 20 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                          0     \nMean absolute error                      0.4994\nRoot mean squared error                  0.5011\nRelative absolute error                100.041  %\nRoot relative squared error            100.2773 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.500    0.500    0.523      0.500    0.511      0.000    0.500     0.522     LOW\n                 0.500    0.500    0.477      0.500    0.488      0.000    0.497     0.474     HIGH\nWeighted Avg.    0.500    0.500    0.501      0.500    0.500      0.000    0.499     0.499     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 34 34 |  a = LOW\n 31 31 |  b = HIGH\n\n"}, {"i": 162, "mesure": 0.494, "algo_params": " -U -M 110 -doNotMakeSplitPointActualValue", "bagging_params": " -O -S 71 -num-slots 18 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4994\nRoot mean squared error                  0.4999\nRelative absolute error                100.0472 %\nRoot relative squared error            100.045  %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.494     0.514     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.494     0.474     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.494     0.495     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 163, "mesure": 0.478, "algo_params": " -U -M 84 -Q 53 -B -doNotMakeSplitPointActualValue", "bagging_params": " -O -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4993\nRoot mean squared error                  0.5   \nRelative absolute error                100.0353 %\nRoot relative squared error            100.0534 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.478     0.506     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.478     0.465     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.478     0.486     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 164, "mesure": 0.508, "algo_params": " -C 0.3297947828901302 -B -doNotMakeSplitPointActualValue", "bagging_params": " -P 2 -O -num-slots 8 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                          0     \nMean absolute error                      0.5   \nRoot mean squared error                  0.5771\nRelative absolute error                100.1684 %\nRoot relative squared error            115.4849 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.500    0.500    0.523      0.500    0.511      0.000    0.508     0.530     LOW\n                 0.500    0.500    0.477      0.500    0.488      0.000    0.508     0.480     HIGH\nWeighted Avg.    0.500    0.500    0.501      0.500    0.500      0.000    0.508     0.506     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 34 34 |  a = LOW\n 31 31 |  b = HIGH\n\n"}, {"i": 165, "mesure": 0.506, "algo_params": " -C 0.3097137875635937 -Q 34 -O -S -doNotMakeSplitPointActualValue", "bagging_params": " -P 78 -num-slots 3 -I 30 -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                          0.0091\nMean absolute error                      0.4928\nRoot mean squared error                  0.5214\nRelative absolute error                 98.7289 %\nRoot relative squared error            104.3489 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.574    0.565    0.527      0.574    0.549      0.009    0.506     0.531     LOW\n                 0.435    0.426    0.482      0.435    0.458      0.009    0.506     0.537     HIGH\nWeighted Avg.    0.508    0.499    0.506      0.508    0.506      0.009    0.506     0.534     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 39 29 |  a = LOW\n 35 27 |  b = HIGH\n\n"}, {"i": 166, "mesure": 0.478, "algo_params": " -C 0.9551954614871511 -M 99 -Q 83 -B -A", "bagging_params": " -O -S 89 -num-slots 28 -I 30 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4994\nRoot mean squared error                  0.5001\nRelative absolute error                100.0389 %\nRoot relative squared error            100.0821 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.478     0.506     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.478     0.465     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.478     0.486     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 167, "mesure": 0.488, "algo_params": " -C 0.9853363329788343 -M 63 -Q 21 -O -B -doNotMakeSplitPointActualValue", "bagging_params": " -P 16 -O -S 22 -I 7 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          64               49.2308 %\nIncorrectly Classified Instances        66               50.7692 %\nKappa statistic                         -0.0248\nMean absolute error                      0.4998\nRoot mean squared error                  0.5025\nRelative absolute error                100.1194 %\nRoot relative squared error            100.5624 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.588    0.613    0.513      0.588    0.548      -0.025   0.488     0.520     LOW\n                 0.387    0.412    0.462      0.387    0.421      -0.025   0.488     0.468     HIGH\nWeighted Avg.    0.492    0.517    0.488      0.492    0.487      -0.025   0.488     0.495     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 40 28 |  a = LOW\n 38 24 |  b = HIGH\n\n"}, {"i": 168, "mesure": 0.494, "algo_params": " -N 115 -R -M 60 -O -S", "bagging_params": " -S 112 -num-slots 20 -I 13 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4987\nRoot mean squared error                  0.4998\nRelative absolute error                 99.917  %\nRoot relative squared error            100.0171 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.494     0.524     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.494     0.470     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.494     0.498     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 169, "mesure": 0.569, "algo_params": " -C 0.46839324247003855 -Q 77 -A -doNotMakeSplitPointActualValue", "bagging_params": " -P 63 -num-slots 28 -I 20 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          73               56.1538 %\nIncorrectly Classified Instances        57               43.8462 %\nKappa statistic                          0.1181\nMean absolute error                      0.4786\nRoot mean squared error                  0.5013\nRelative absolute error                 95.8839 %\nRoot relative squared error            100.3133 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.618    0.500    0.575      0.618    0.596      0.118    0.569     0.580     LOW\n                 0.500    0.382    0.544      0.500    0.521      0.118    0.569     0.598     HIGH\nWeighted Avg.    0.562    0.444    0.560      0.562    0.560      0.118    0.569     0.589     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 42 26 |  a = LOW\n 31 31 |  b = HIGH\n\n"}, {"i": 170, "mesure": 0, "algo_params": " -N 105 -R -O -B -L -doNotMakeSplitPointActualValue", "bagging_params": " -P 86 -S 17 -num-slots 24 -I 9 -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.NullPointerException\n\tweka.classifiers.trees.j48.ClassifierTree.getProbs(ClassifierTree.java:684)\n\tweka.classifiers.trees.j48.ClassifierTree.distributionForInstance(ClassifierTree.java:284)\n\tweka.classifiers.trees.J48.distributionForInstance(J48.java:327)\n\tweka.classifiers.meta.Bagging.distributionForInstance(Bagging.java:804)\n\tweka.classifiers.evaluation.Evaluation.evaluationForSingleInstance(Evaluation.java:2192)\n\tweka.classifiers.evaluation.Evaluation.evaluateModelOnceAndRecordPrediction(Evaluation.java:2230)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1907)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.classifiers.trees.j48.ClassifierTree.getProbs(ClassifierTree.java:684)\n\tat weka.classifiers.trees.j48.ClassifierTree.distributionForInstance(ClassifierTree.java:284)\n\tat weka.classifiers.trees.J48.distributionForInstance(J48.java:327)\n\tat weka.classifiers.meta.Bagging.distributionForInstance(Bagging.java:804)\n\tat weka.classifiers.evaluation.Evaluation.evaluationForSingleInstance(Evaluation.java:2192)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModelOnceAndRecordPrediction(Evaluation.java:2230)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1907)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 171, "mesure": 0.541, "algo_params": " -C 0.4098493138917946 -O -L -doNotMakeSplitPointActualValue", "bagging_params": " -O -num-slots 9 -I 19 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          70               53.8462 %\nIncorrectly Classified Instances        60               46.1538 %\nKappa statistic                          0.071 \nMean absolute error                      0.4836\nRoot mean squared error                  0.5201\nRelative absolute error                 96.8774 %\nRoot relative squared error            104.0867 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.603    0.532    0.554      0.603    0.577      0.071    0.541     0.578     LOW\n                 0.468    0.397    0.518      0.468    0.492      0.071    0.541     0.546     HIGH\nWeighted Avg.    0.538    0.468    0.537      0.538    0.536      0.071    0.541     0.563     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 41 27 |  a = LOW\n 33 29 |  b = HIGH\n\n"}, {"i": 172, "mesure": 0.547, "algo_params": " -N 44 -R -O -S -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 89 -S 4 -num-slots 10 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          71               54.6154 %\nIncorrectly Classified Instances        59               45.3846 %\nKappa statistic                          0.0806\nMean absolute error                      0.4928\nRoot mean squared error                  0.498 \nRelative absolute error                 98.7324 %\nRoot relative squared error             99.6653 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.676    0.597    0.554      0.676    0.609      0.083    0.547     0.568     LOW\n                 0.403    0.324    0.532      0.403    0.459      0.083    0.547     0.528     HIGH\nWeighted Avg.    0.546    0.466    0.544      0.546    0.537      0.083    0.547     0.549     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 46 22 |  a = LOW\n 37 25 |  b = HIGH\n\n"}, {"i": 173, "mesure": 0.569, "algo_params": " -C 0.9768786086957213 -Q 55 -B -L -A", "bagging_params": " -P 53 -O -num-slots 17 -I 6 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          74               56.9231 %\nIncorrectly Classified Instances        56               43.0769 %\nKappa statistic                          0.1292\nMean absolute error                      0.4768\nRoot mean squared error                  0.5132\nRelative absolute error                 95.5262 %\nRoot relative squared error            102.7025 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.676    0.548    0.575      0.676    0.622      0.131    0.569     0.615     LOW\n                 0.452    0.324    0.560      0.452    0.500      0.131    0.569     0.532     HIGH\nWeighted Avg.    0.569    0.441    0.568      0.569    0.564      0.131    0.569     0.575     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 46 22 |  a = LOW\n 34 28 |  b = HIGH\n\n"}, {"i": 174, "mesure": 0, "algo_params": " -U -U -M 84 -O -B -doNotMakeSplitPointActualValue", "bagging_params": " -P 24 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\n\nWeka exception: Illegal options: -U \n\nGeneral options:\n\n-h or -help\n\tOutput help information.\n-synopsis or -info\n\tOutput synopsis for classifier (use in conjunction  with -h)\n-t <name of training file>\n\tSets training file.\n-T <name of test file>\n\tSets test file. If missing, a cross-validation will be performed\n\ton the training data.\n-c <class index>\n\tSets index of class attribute (default: last).\n-x <number of folds>\n\tSets number of folds for cross-validation (default: 10).\n-no-cv\n\tDo not perform any cross validation.\n-force-batch-training\n\tAlways train classifier in batch mode, never incrementally.\n-split-percentage <percentage>\n\tSets the percentage for the train/test set split, e.g., 66.\n-preserve-order\n\tPreserves the order in the percentage split.\n-s <random number seed>\n\tSets random number seed for cross-validation or percentage split\n\t(default: 1).\n-m <name of file with cost matrix>\n\tSets file with cost matrix.\n-toggle <comma-separated list of evaluation metric names>\n\tComma separated list of metric names to toggle in the output.\n\tAll metrics are output by default with the exception of 'Coverage' and 'Region size'.\n\tAvailable metrics:\n\tCorrect,Incorrect,Kappa,Total cost,Average cost,KB relative,KB information,\n\tCorrelation,Complexity 0,Complexity scheme,Complexity improvement,\n\tMAE,RMSE,RAE,RRSE,Coverage,Region size,TP rate,FP rate,Precision,Recall,\n\tF-measure,MCC,ROC area,PRC area\n-l <name of input file>\n\tSets model input file. In case the filename ends with '.xml',\n\ta PMML file is loaded or, if that fails, options are loaded\n\tfrom the XML file.\n-d <name of output file>\n\tSets model output file. In case the filename ends with '.xml',\n\tonly the options are saved to the XML file, not the model.\n-v\n\tOutputs no statistics for training data.\n-o\n\tOutputs statistics only, not the classifier.\n-output-models-for-training-splits\n\tOutput models for training splits if cross-validation or percentage-split evaluation is used.\n-do-not-output-per-class-statistics\n\tDo not output statistics for each class.\n-k\n\tOutputs information-theoretic statistics.\n-classifications \"weka.classifiers.evaluation.output.prediction.AbstractOutput + options\"\n\tUses the specified class for generating the classification output.\n\tE.g.: weka.classifiers.evaluation.output.prediction.PlainText\n-p range\n\tOutputs predictions for test instances (or the train instances if\n\tno test instances provided and -no-cv is used), along with the \n\tattributes in the specified range (and nothing else). \n\tUse '-p 0' if no attributes are desired.\n\tDeprecated: use \"-classifications ...\" instead.\n-distribution\n\tOutputs the distribution instead of only the prediction\n\tin conjunction with the '-p' option (only nominal classes).\n\tDeprecated: use \"-classifications ...\" instead.\n-r\n\tOnly outputs cumulative margin distribution.\n-xml filename | xml-string\n\tRetrieves the options from the XML-data instead of the command line.\n-threshold-file <file>\n\tThe file to save the threshold data to.\n\tThe format is determined by the extensions, e.g., '.arff' for ARFF \n\tformat or '.csv' for CSV.\n-threshold-label <label>\n\tThe class label to determine the threshold data for\n\t(default is the first label)\n-no-predictions\n\tTurns off the collection of predictions in order to conserve memory.\n\nOptions specific to weka.classifiers.meta.Bagging:\n\n-P\n\tSize of each bag, as a percentage of the\n\ttraining set size. (default 100)\n-O\n\tCalculate the out of bag error.\n-store-out-of-bag-predictions\n\tWhether to store out of bag predictions in internal evaluation object.\n-output-out-of-bag-complexity-statistics\n\tWhether to output complexity-based statistics when out-of-bag evaluation is performed.\n-represent-copies-using-weights\n\tRepresent copies of instances using weights rather than explicitly.\n-print\n\tPrint the individual classifiers in the output\n-S <num>\n\tRandom number seed.\n\t(default 1)\n-num-slots <num>\n\tNumber of execution slots.\n\t(default 1 - i.e. no parallelism)\n\t(use 0 to auto-detect number of cores)\n-I <num>\n\tNumber of iterations.\n\t(current value 10)\n-W <classifier name>\n\tFull name of base classifier.\n\t(default: weka.classifiers.trees.REPTree)\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\nOptions specific to classifier weka.classifiers.trees.J48:\n\n-U\n\tUse unpruned tree.\n-O\n\tDo not collapse tree.\n-C <pruning confidence>\n\tSet confidence threshold for pruning.\n\t(default 0.25)\n-M <minimum number of instances>\n\tSet minimum number of instances per leaf.\n\t(default 2)\n-R\n\tUse reduced error pruning.\n-N <number of folds>\n\tSet number of folds for reduced error\n\tpruning. One fold is used as pruning set.\n\t(default 3)\n-B\n\tUse binary splits only.\n-S\n\tDo not perform subtree raising.\n-L\n\tDo not clean up after the tree has been built.\n-A\n\tLaplace smoothing for predicted probabilities.\n-J\n\tDo not use MDL correction for info gain on numeric attributes.\n-Q <seed>\n\tSeed for random data shuffling (default 1).\n-doNotMakeSplitPointActualValue\n\tDo not make split point actual value.\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\n"}, {"i": 175, "mesure": 0.481, "algo_params": " -C 0.31066118877522153 -M 45 -O -B", "bagging_params": " -P 61 -S 15 -I 25 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          67               51.5385 %\nIncorrectly Classified Instances        63               48.4615 %\nKappa statistic                         -0.0064\nMean absolute error                      0.4994\nRoot mean squared error                  0.5003\nRelative absolute error                100.0537 %\nRoot relative squared error            100.1147 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.897    0.903    0.521      0.897    0.659      -0.010   0.481     0.508     LOW\n                 0.097    0.103    0.462      0.097    0.160      -0.010   0.481     0.466     HIGH\nWeighted Avg.    0.515    0.522    0.493      0.515    0.421      -0.010   0.481     0.488     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 61  7 |  a = LOW\n 56  6 |  b = HIGH\n\n"}, {"i": 176, "mesure": 0.532, "algo_params": " -C 0.529332511123746 -B -L", "bagging_params": " -P 92 -O -num-slots 27 -I 29 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          75               57.6923 %\nIncorrectly Classified Instances        55               42.3077 %\nKappa statistic                          0.1466\nMean absolute error                      0.4853\nRoot mean squared error                  0.515 \nRelative absolute error                 97.2209 %\nRoot relative squared error            103.0741 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.662    0.516    0.584      0.662    0.621      0.148    0.532     0.546     LOW\n                 0.484    0.338    0.566      0.484    0.522      0.148    0.532     0.560     HIGH\nWeighted Avg.    0.577    0.431    0.576      0.577    0.573      0.148    0.532     0.553     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 45 23 |  a = LOW\n 32 30 |  b = HIGH\n\n"}, {"i": 177, "mesure": 0.475, "algo_params": " -C 0.5440679460695031 -M 53 -O -L -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 35 -O -S 71 -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          64               49.2308 %\nIncorrectly Classified Instances        66               50.7692 %\nKappa statistic                         -0.0248\nMean absolute error                      0.501 \nRoot mean squared error                  0.5026\nRelative absolute error                100.3687 %\nRoot relative squared error            100.5826 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.588    0.613    0.513      0.588    0.548      -0.025   0.475     0.502     LOW\n                 0.387    0.412    0.462      0.387    0.421      -0.025   0.475     0.464     HIGH\nWeighted Avg.    0.492    0.517    0.488      0.492    0.487      -0.025   0.475     0.484     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 40 28 |  a = LOW\n 38 24 |  b = HIGH\n\n"}, {"i": 178, "mesure": 0.451, "algo_params": " -U -M 30", "bagging_params": " -num-slots 29 -I 4 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          64               49.2308 %\nIncorrectly Classified Instances        66               50.7692 %\nKappa statistic                         -0.0293\nMean absolute error                      0.5083\nRoot mean squared error                  0.5206\nRelative absolute error                101.8219 %\nRoot relative squared error            104.1758 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.632    0.661    0.512      0.632    0.566      -0.030   0.451     0.485     LOW\n                 0.339    0.368    0.457      0.339    0.389      -0.030   0.451     0.459     HIGH\nWeighted Avg.    0.492    0.521    0.485      0.492    0.481      -0.030   0.451     0.473     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 43 25 |  a = LOW\n 41 21 |  b = HIGH\n\n"}, {"i": 179, "mesure": 0.478, "algo_params": " -N 10 -R -M 124 -O -B -L -J", "bagging_params": " -num-slots 28 -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4993\nRoot mean squared error                  0.5   \nRelative absolute error                100.0375 %\nRoot relative squared error            100.053  %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.478     0.506     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.478     0.465     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.478     0.487     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 180, "mesure": 0.518, "algo_params": " -C 0.5617569039899554 -Q 114 -O -B -S -doNotMakeSplitPointActualValue", "bagging_params": " -P 10 -I 1 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          69               53.0769 %\nIncorrectly Classified Instances        61               46.9231 %\nKappa statistic                          0.0535\nMean absolute error                      0.4749\nRoot mean squared error                  0.6656\nRelative absolute error                 95.1489 %\nRoot relative squared error            133.2127 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.618    0.565    0.545      0.618    0.579      0.054    0.518     0.535     LOW\n                 0.435    0.382    0.509      0.435    0.470      0.054    0.518     0.485     HIGH\nWeighted Avg.    0.531    0.478    0.528      0.531    0.527      0.054    0.518     0.511     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 42 26 |  a = LOW\n 35 27 |  b = HIGH\n\n"}, {"i": 181, "mesure": 0.473, "algo_params": " -C 0.36265055621677245 -O -B -S -A -doNotMakeSplitPointActualValue", "bagging_params": " -P 42 -O -num-slots 23 -I 13 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          64               49.2308 %\nIncorrectly Classified Instances        66               50.7692 %\nKappa statistic                         -0.0263\nMean absolute error                      0.5034\nRoot mean squared error                  0.5241\nRelative absolute error                100.8401 %\nRoot relative squared error            104.8925 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.603    0.629    0.513      0.603    0.554      -0.027   0.473     0.498     LOW\n                 0.371    0.397    0.460      0.371    0.411      -0.027   0.473     0.504     HIGH\nWeighted Avg.    0.492    0.518    0.487      0.492    0.486      -0.027   0.473     0.501     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 41 27 |  a = LOW\n 39 23 |  b = HIGH\n\n"}, {"i": 182, "mesure": 0, "algo_params": " -N 120 -R -M 57 -B -S -L -A", "bagging_params": " -P 70 -O -S 27 -I 15 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tweka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tat weka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 183, "mesure": 0.394, "algo_params": " -C 0.46456129737181473 -M 36 -Q 124 -S -J", "bagging_params": " -O -num-slots 11 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          57               43.8462 %\nIncorrectly Classified Instances        73               56.1538 %\nKappa statistic                         -0.1311\nMean absolute error                      0.5165\nRoot mean squared error                  0.5267\nRelative absolute error                103.4681 %\nRoot relative squared error            105.399  %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.515    0.645    0.467      0.515    0.490      -0.132   0.394     0.457     LOW\n                 0.355    0.485    0.400      0.355    0.376      -0.132   0.394     0.431     HIGH\nWeighted Avg.    0.438    0.569    0.435      0.438    0.435      -0.132   0.394     0.445     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 35 33 |  a = LOW\n 40 22 |  b = HIGH\n\n"}, {"i": 184, "mesure": 0.491, "algo_params": " -U -M 102 -Q 111 -B", "bagging_params": " -P 48 -S 35 -num-slots 28 -I 16 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          67               51.5385 %\nIncorrectly Classified Instances        63               48.4615 %\nKappa statistic                         -0.0064\nMean absolute error                      0.4991\nRoot mean squared error                  0.4998\nRelative absolute error                 99.9964 %\nRoot relative squared error            100.0258 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.897    0.903    0.521      0.897    0.659      -0.010   0.491     0.521     LOW\n                 0.097    0.103    0.462      0.097    0.160      -0.010   0.491     0.469     HIGH\nWeighted Avg.    0.515    0.522    0.493      0.515    0.421      -0.010   0.491     0.497     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 61  7 |  a = LOW\n 56  6 |  b = HIGH\n\n"}, {"i": 185, "mesure": 0.506, "algo_params": " -C 0.43616065853789443 -M 98 -Q 81 -O -B -L -A", "bagging_params": " -P 27 -num-slots 22 -I 20 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                         -0.0127\nMean absolute error                      0.4991\nRoot mean squared error                  0.5   \nRelative absolute error                 99.9956 %\nRoot relative squared error            100.0607 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.794    0.806    0.519      0.794    0.628      -0.015   0.506     0.530     LOW\n                 0.194    0.206    0.462      0.194    0.273      -0.015   0.506     0.477     HIGH\nWeighted Avg.    0.508    0.520    0.492      0.508    0.459      -0.015   0.506     0.505     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 54 14 |  a = LOW\n 50 12 |  b = HIGH\n\n"}, {"i": 186, "mesure": 0.525, "algo_params": " -C 0.5513962614547637 -B -L", "bagging_params": " -O -S 29 -num-slots 13 -I 26 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                         -0.0072\nMean absolute error                      0.4892\nRoot mean squared error                  0.5267\nRelative absolute error                 98.0116 %\nRoot relative squared error            105.415  %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.574    0.581    0.520      0.574    0.545      -0.007   0.525     0.539     LOW\n                 0.419    0.426    0.473      0.419    0.444      -0.007   0.525     0.552     HIGH\nWeighted Avg.    0.500    0.507    0.497      0.500    0.497      -0.007   0.525     0.545     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 39 29 |  a = LOW\n 36 26 |  b = HIGH\n\n"}, {"i": 187, "mesure": 0.504, "algo_params": " -C 0.1177431847159589 -Q 110 -B -S -L -doNotMakeSplitPointActualValue", "bagging_params": " -P 49 -num-slots 13 -I 29 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          71               54.6154 %\nIncorrectly Classified Instances        59               45.3846 %\nKappa statistic                          0.0858\nMean absolute error                      0.4938\nRoot mean squared error                  0.5138\nRelative absolute error                 98.9314 %\nRoot relative squared error            102.8309 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.618    0.532    0.560      0.618    0.587      0.086    0.504     0.521     LOW\n                 0.468    0.382    0.527      0.468    0.496      0.086    0.504     0.548     HIGH\nWeighted Avg.    0.546    0.461    0.544      0.546    0.544      0.086    0.504     0.534     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 42 26 |  a = LOW\n 33 29 |  b = HIGH\n\n"}, {"i": 188, "mesure": 0.448, "algo_params": " -C 0.19994723033213668 -Q 57 -S -J -doNotMakeSplitPointActualValue", "bagging_params": " -O -S 1 -num-slots 7 -I 7", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          57               43.8462 %\nIncorrectly Classified Instances        73               56.1538 %\nKappa statistic                         -0.1295\nMean absolute error                      0.5179\nRoot mean squared error                  0.5707\nRelative absolute error                103.7506 %\nRoot relative squared error            114.2043 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.500    0.629    0.466      0.500    0.482      -0.130   0.448     0.478     LOW\n                 0.371    0.500    0.404      0.371    0.387      -0.130   0.448     0.501     HIGH\nWeighted Avg.    0.438    0.567    0.436      0.438    0.437      -0.130   0.448     0.489     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 34 34 |  a = LOW\n 39 23 |  b = HIGH\n\n"}, {"i": 189, "mesure": 0.478, "algo_params": " -C 0.9252299863367865 -M 91 -O -B -L -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 17 -O -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                         -0.0127\nMean absolute error                      0.5001\nRoot mean squared error                  0.501 \nRelative absolute error                100.1846 %\nRoot relative squared error            100.2674 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.794    0.806    0.519      0.794    0.628      -0.015   0.478     0.506     LOW\n                 0.194    0.206    0.462      0.194    0.273      -0.015   0.478     0.465     HIGH\nWeighted Avg.    0.508    0.520    0.492      0.508    0.459      -0.015   0.478     0.487     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 54 14 |  a = LOW\n 50 12 |  b = HIGH\n\n"}, {"i": 190, "mesure": 0.507, "algo_params": " -N 42 -R -M 15 -Q 119 -B -S -L -A -J", "bagging_params": " -O -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0.0289\nMean absolute error                      0.498 \nRoot mean squared error                  0.5011\nRelative absolute error                 99.7643 %\nRoot relative squared error            100.2834 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.706    0.677    0.533      0.706    0.608      0.031    0.507     0.524     LOW\n                 0.323    0.294    0.500      0.323    0.392      0.031    0.507     0.504     HIGH\nWeighted Avg.    0.523    0.495    0.517      0.523    0.505      0.031    0.507     0.514     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 48 20 |  a = LOW\n 42 20 |  b = HIGH\n\n"}, {"i": 191, "mesure": 0.536, "algo_params": " -C 0.04049997851131604 -M 5 -S -L -A -doNotMakeSplitPointActualValue", "bagging_params": " -O -I 19 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          67               51.5385 %\nIncorrectly Classified Instances        63               48.4615 %\nKappa statistic                          0.0182\nMean absolute error                      0.4867\nRoot mean squared error                  0.5144\nRelative absolute error                 97.5109 %\nRoot relative squared error            102.9494 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.647    0.629    0.530      0.647    0.583      0.019    0.536     0.553     LOW\n                 0.371    0.353    0.489      0.371    0.422      0.019    0.536     0.556     HIGH\nWeighted Avg.    0.515    0.497    0.511      0.515    0.506      0.019    0.536     0.554     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 44 24 |  a = LOW\n 39 23 |  b = HIGH\n\n"}, {"i": 192, "mesure": 0.485, "algo_params": " -C 0.4787156981308911 -M 122 -Q 118 -B -A", "bagging_params": " -P 99 -O -S 23 -num-slots 3", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                         -0.0127\nMean absolute error                      0.4996\nRoot mean squared error                  0.5001\nRelative absolute error                100.0854 %\nRoot relative squared error            100.0904 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.794    0.806    0.519      0.794    0.628      -0.015   0.485     0.510     LOW\n                 0.194    0.206    0.462      0.194    0.273      -0.015   0.485     0.468     HIGH\nWeighted Avg.    0.508    0.520    0.492      0.508    0.459      -0.015   0.485     0.490     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 54 14 |  a = LOW\n 50 12 |  b = HIGH\n\n"}, {"i": 193, "mesure": 0.525, "algo_params": " -N 52 -R -Q 47 -O -B -S -A -J -doNotMakeSplitPointActualValue", "bagging_params": " -O -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          64               49.2308 %\nIncorrectly Classified Instances        66               50.7692 %\nKappa statistic                         -0.0293\nMean absolute error                      0.4917\nRoot mean squared error                  0.4997\nRelative absolute error                 98.5082 %\nRoot relative squared error            100.0049 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.632    0.661    0.512      0.632    0.566      -0.030   0.525     0.559     LOW\n                 0.339    0.368    0.457      0.339    0.389      -0.030   0.525     0.543     HIGH\nWeighted Avg.    0.492    0.521    0.485      0.492    0.481      -0.030   0.525     0.551     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 43 25 |  a = LOW\n 41 21 |  b = HIGH\n\n"}, {"i": 194, "mesure": 0.488, "algo_params": " -U -M 75", "bagging_params": " -P 92 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4992\nRoot mean squared error                  0.4997\nRelative absolute error                 99.9998 %\nRoot relative squared error            100.0125 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.488     0.518     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.488     0.468     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.488     0.494     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 195, "mesure": 0.414, "algo_params": " -U -M 39 -Q 12", "bagging_params": " -P 76", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          61               46.9231 %\nIncorrectly Classified Instances        69               53.0769 %\nKappa statistic                         -0.0768\nMean absolute error                      0.5132\nRoot mean squared error                  0.5215\nRelative absolute error                102.8092 %\nRoot relative squared error            104.3648 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.618    0.694    0.494      0.618    0.549      -0.080   0.414     0.471     LOW\n                 0.306    0.382    0.422      0.306    0.355      -0.080   0.414     0.426     HIGH\nWeighted Avg.    0.469    0.545    0.460      0.469    0.457      -0.080   0.414     0.449     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 42 26 |  a = LOW\n 43 19 |  b = HIGH\n\n"}, {"i": 196, "mesure": 0, "algo_params": " -N 115 -R -Q 122 -O -S -L -J -doNotMakeSplitPointActualValue", "bagging_params": " -S 11 -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tweka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tat weka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 197, "mesure": 0.488, "algo_params": " -C 0.6042949383360374 -M 107 -O -doNotMakeSplitPointActualValue", "bagging_params": " -P 58 -O -num-slots 4 -I 8", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                         -0.0127\nMean absolute error                      0.4997\nRoot mean squared error                  0.5002\nRelative absolute error                100.0993 %\nRoot relative squared error            100.0999 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.794    0.806    0.519      0.794    0.628      -0.015   0.488     0.512     LOW\n                 0.194    0.206    0.462      0.194    0.273      -0.015   0.488     0.469     HIGH\nWeighted Avg.    0.508    0.520    0.492      0.508    0.459      -0.015   0.488     0.491     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 54 14 |  a = LOW\n 50 12 |  b = HIGH\n\n"}, {"i": 198, "mesure": 0.5, "algo_params": " -C 0.32330428542412115 -O -B -L -A", "bagging_params": " -P 96 -O -I 18", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                         -0.0129\nMean absolute error                      0.4975\nRoot mean squared error                  0.5257\nRelative absolute error                 99.6709 %\nRoot relative squared error            105.2133 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.632    0.645    0.518      0.632    0.570      -0.013   0.500     0.515     LOW\n                 0.355    0.368    0.468      0.355    0.404      -0.013   0.500     0.529     HIGH\nWeighted Avg.    0.500    0.513    0.494      0.500    0.490      -0.013   0.500     0.522     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 43 25 |  a = LOW\n 40 22 |  b = HIGH\n\n"}, {"i": 199, "mesure": 0.438, "algo_params": " -C 0.8211965068876022 -M 58 -Q 1 -O -B -S", "bagging_params": " -S 108 -num-slots 11 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          64               49.2308 %\nIncorrectly Classified Instances        66               50.7692 %\nKappa statistic                         -0.0337\nMean absolute error                      0.5068\nRoot mean squared error                  0.5133\nRelative absolute error                101.5242 %\nRoot relative squared error            102.715  %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.676    0.710    0.511      0.676    0.582      -0.036   0.438     0.476     LOW\n                 0.290    0.324    0.450      0.290    0.353      -0.036   0.438     0.457     HIGH\nWeighted Avg.    0.492    0.526    0.482      0.492    0.473      -0.036   0.438     0.467     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 46 22 |  a = LOW\n 44 18 |  b = HIGH\n\n"}, {"i": 200, "mesure": 0, "algo_params": " -U -doNotMakeSplitPointActualValue -U -M 92 -O -doNotMakeSplitPointActualValue", "bagging_params": " -I 18 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\n\nWeka exception: Illegal options: -U -doNotMakeSplitPointActualValue \n\nGeneral options:\n\n-h or -help\n\tOutput help information.\n-synopsis or -info\n\tOutput synopsis for classifier (use in conjunction  with -h)\n-t <name of training file>\n\tSets training file.\n-T <name of test file>\n\tSets test file. If missing, a cross-validation will be performed\n\ton the training data.\n-c <class index>\n\tSets index of class attribute (default: last).\n-x <number of folds>\n\tSets number of folds for cross-validation (default: 10).\n-no-cv\n\tDo not perform any cross validation.\n-force-batch-training\n\tAlways train classifier in batch mode, never incrementally.\n-split-percentage <percentage>\n\tSets the percentage for the train/test set split, e.g., 66.\n-preserve-order\n\tPreserves the order in the percentage split.\n-s <random number seed>\n\tSets random number seed for cross-validation or percentage split\n\t(default: 1).\n-m <name of file with cost matrix>\n\tSets file with cost matrix.\n-toggle <comma-separated list of evaluation metric names>\n\tComma separated list of metric names to toggle in the output.\n\tAll metrics are output by default with the exception of 'Coverage' and 'Region size'.\n\tAvailable metrics:\n\tCorrect,Incorrect,Kappa,Total cost,Average cost,KB relative,KB information,\n\tCorrelation,Complexity 0,Complexity scheme,Complexity improvement,\n\tMAE,RMSE,RAE,RRSE,Coverage,Region size,TP rate,FP rate,Precision,Recall,\n\tF-measure,MCC,ROC area,PRC area\n-l <name of input file>\n\tSets model input file. In case the filename ends with '.xml',\n\ta PMML file is loaded or, if that fails, options are loaded\n\tfrom the XML file.\n-d <name of output file>\n\tSets model output file. In case the filename ends with '.xml',\n\tonly the options are saved to the XML file, not the model.\n-v\n\tOutputs no statistics for training data.\n-o\n\tOutputs statistics only, not the classifier.\n-output-models-for-training-splits\n\tOutput models for training splits if cross-validation or percentage-split evaluation is used.\n-do-not-output-per-class-statistics\n\tDo not output statistics for each class.\n-k\n\tOutputs information-theoretic statistics.\n-classifications \"weka.classifiers.evaluation.output.prediction.AbstractOutput + options\"\n\tUses the specified class for generating the classification output.\n\tE.g.: weka.classifiers.evaluation.output.prediction.PlainText\n-p range\n\tOutputs predictions for test instances (or the train instances if\n\tno test instances provided and -no-cv is used), along with the \n\tattributes in the specified range (and nothing else). \n\tUse '-p 0' if no attributes are desired.\n\tDeprecated: use \"-classifications ...\" instead.\n-distribution\n\tOutputs the distribution instead of only the prediction\n\tin conjunction with the '-p' option (only nominal classes).\n\tDeprecated: use \"-classifications ...\" instead.\n-r\n\tOnly outputs cumulative margin distribution.\n-xml filename | xml-string\n\tRetrieves the options from the XML-data instead of the command line.\n-threshold-file <file>\n\tThe file to save the threshold data to.\n\tThe format is determined by the extensions, e.g., '.arff' for ARFF \n\tformat or '.csv' for CSV.\n-threshold-label <label>\n\tThe class label to determine the threshold data for\n\t(default is the first label)\n-no-predictions\n\tTurns off the collection of predictions in order to conserve memory.\n\nOptions specific to weka.classifiers.meta.Bagging:\n\n-P\n\tSize of each bag, as a percentage of the\n\ttraining set size. (default 100)\n-O\n\tCalculate the out of bag error.\n-store-out-of-bag-predictions\n\tWhether to store out of bag predictions in internal evaluation object.\n-output-out-of-bag-complexity-statistics\n\tWhether to output complexity-based statistics when out-of-bag evaluation is performed.\n-represent-copies-using-weights\n\tRepresent copies of instances using weights rather than explicitly.\n-print\n\tPrint the individual classifiers in the output\n-S <num>\n\tRandom number seed.\n\t(default 1)\n-num-slots <num>\n\tNumber of execution slots.\n\t(default 1 - i.e. no parallelism)\n\t(use 0 to auto-detect number of cores)\n-I <num>\n\tNumber of iterations.\n\t(current value 18)\n-W <classifier name>\n\tFull name of base classifier.\n\t(default: weka.classifiers.trees.REPTree)\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\nOptions specific to classifier weka.classifiers.trees.J48:\n\n-U\n\tUse unpruned tree.\n-O\n\tDo not collapse tree.\n-C <pruning confidence>\n\tSet confidence threshold for pruning.\n\t(default 0.25)\n-M <minimum number of instances>\n\tSet minimum number of instances per leaf.\n\t(default 2)\n-R\n\tUse reduced error pruning.\n-N <number of folds>\n\tSet number of folds for reduced error\n\tpruning. One fold is used as pruning set.\n\t(default 3)\n-B\n\tUse binary splits only.\n-S\n\tDo not perform subtree raising.\n-L\n\tDo not clean up after the tree has been built.\n-A\n\tLaplace smoothing for predicted probabilities.\n-J\n\tDo not use MDL correction for info gain on numeric attributes.\n-Q <seed>\n\tSeed for random data shuffling (default 1).\n-doNotMakeSplitPointActualValue\n\tDo not make split point actual value.\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\n"}, {"i": 201, "mesure": 0.444, "algo_params": " -C 0.7035393587485892 -M 40 -Q 97 -O -B -S -L -A", "bagging_params": " -I 7 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          64               49.2308 %\nIncorrectly Classified Instances        66               50.7692 %\nKappa statistic                         -0.0293\nMean absolute error                      0.5014\nRoot mean squared error                  0.5028\nRelative absolute error                100.4535 %\nRoot relative squared error            100.6207 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.632    0.661    0.512      0.632    0.566      -0.030   0.444     0.479     LOW\n                 0.339    0.368    0.457      0.339    0.389      -0.030   0.444     0.440     HIGH\nWeighted Avg.    0.492    0.521    0.485      0.492    0.481      -0.030   0.444     0.460     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 43 25 |  a = LOW\n 41 21 |  b = HIGH\n\n"}, {"i": 202, "mesure": 0.513, "algo_params": " -N 101 -R -O -doNotMakeSplitPointActualValue", "bagging_params": " -O -I 12 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0.0247\nMean absolute error                      0.4943\nRoot mean squared error                  0.4999\nRelative absolute error                 99.027  %\nRoot relative squared error            100.0375 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.750    0.726    0.531      0.750    0.622      0.027    0.513     0.536     LOW\n                 0.274    0.250    0.500      0.274    0.354      0.027    0.513     0.533     HIGH\nWeighted Avg.    0.523    0.499    0.516      0.523    0.494      0.027    0.513     0.535     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 51 17 |  a = LOW\n 45 17 |  b = HIGH\n\n"}, {"i": 203, "mesure": 0.392, "algo_params": " -N 96 -R -M 35 -Q 96 -S -J", "bagging_params": " -O -num-slots 27", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          57               43.8462 %\nIncorrectly Classified Instances        73               56.1538 %\nKappa statistic                         -0.1459\nMean absolute error                      0.5054\nRoot mean squared error                  0.5083\nRelative absolute error                101.2433 %\nRoot relative squared error            101.7243 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.647    0.790    0.473      0.647    0.547      -0.159   0.392     0.479     LOW\n                 0.210    0.353    0.351      0.210    0.263      -0.159   0.392     0.415     HIGH\nWeighted Avg.    0.438    0.582    0.415      0.438    0.411      -0.159   0.392     0.448     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 44 24 |  a = LOW\n 49 13 |  b = HIGH\n\n"}, {"i": 204, "mesure": 0, "algo_params": " -N 113 -R -M 51 -Q 60 -O -B -S -A", "bagging_params": " -P 26 -S 57 -I 19 -output-out-of-bag-complexity-statistics", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tweka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tat weka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 205, "mesure": 0.466, "algo_params": " -U -M 21 -Q 27 -B -doNotMakeSplitPointActualValue", "bagging_params": " -I 16", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                         -0.0072\nMean absolute error                      0.5044\nRoot mean squared error                  0.52  \nRelative absolute error                101.0438 %\nRoot relative squared error            104.0567 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.574    0.581    0.520      0.574    0.545      -0.007   0.466     0.495     LOW\n                 0.419    0.426    0.473      0.419    0.444      -0.007   0.466     0.517     HIGH\nWeighted Avg.    0.500    0.507    0.497      0.500    0.497      -0.007   0.466     0.505     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 39 29 |  a = LOW\n 36 26 |  b = HIGH\n\n"}, {"i": 206, "mesure": 0, "algo_params": " -N 60 -R -M 125 -Q 27 -O -B -L -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 3 -O -store-out-of-bag-predictions", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tweka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tat weka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 207, "mesure": 0.528, "algo_params": " -C 0.5263605121458713 -O -S -A", "bagging_params": " -S 51 -I 22 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0.0331\nMean absolute error                      0.4825\nRoot mean squared error                  0.5132\nRelative absolute error                 96.6577 %\nRoot relative squared error            102.6957 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.662    0.629    0.536      0.662    0.592      0.034    0.528     0.527     LOW\n                 0.371    0.338    0.500      0.371    0.426      0.034    0.528     0.570     HIGH\nWeighted Avg.    0.523    0.490    0.519      0.523    0.513      0.034    0.528     0.548     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 45 23 |  a = LOW\n 39 23 |  b = HIGH\n\n"}, {"i": 208, "mesure": 0, "algo_params": " -N 110 -R -Q 57 -O -S -J", "bagging_params": " -P 0 -O -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tweka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tat weka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 209, "mesure": 0.491, "algo_params": " -C 0.4255221758981437 -M 90 -O -L -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 35 -O -S 108 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                         -0.0188\nMean absolute error                      0.4996\nRoot mean squared error                  0.5005\nRelative absolute error                100.0836 %\nRoot relative squared error            100.1556 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.691    0.710    0.516      0.691    0.591      -0.020   0.491     0.520     LOW\n                 0.290    0.309    0.462      0.290    0.356      -0.020   0.491     0.470     HIGH\nWeighted Avg.    0.500    0.519    0.490      0.500    0.479      -0.020   0.491     0.496     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 47 21 |  a = LOW\n 44 18 |  b = HIGH\n\n"}, {"i": 210, "mesure": 0.522, "algo_params": " -N 25 -R -O -B -S -J", "bagging_params": " -O -S 55 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          62               47.6923 %\nIncorrectly Classified Instances        68               52.3077 %\nKappa statistic                         -0.0499\nMean absolute error                      0.4962\nRoot mean squared error                  0.5037\nRelative absolute error                 99.4168 %\nRoot relative squared error            100.7947 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.515    0.565    0.500      0.515    0.507      -0.050   0.522     0.559     LOW\n                 0.435    0.485    0.450      0.435    0.443      -0.050   0.522     0.499     HIGH\nWeighted Avg.    0.477    0.527    0.476      0.477    0.476      -0.050   0.522     0.530     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 35 33 |  a = LOW\n 35 27 |  b = HIGH\n\n"}, {"i": 211, "mesure": 0.482, "algo_params": " -C 0.38437142010222525 -B -S -L -doNotMakeSplitPointActualValue", "bagging_params": " -O -num-slots 21 -I 12", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          62               47.6923 %\nIncorrectly Classified Instances        68               52.3077 %\nKappa statistic                         -0.0544\nMean absolute error                      0.503 \nRoot mean squared error                  0.5466\nRelative absolute error                100.7733 %\nRoot relative squared error            109.3808 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.559    0.613    0.500      0.559    0.528      -0.055   0.482     0.519     LOW\n                 0.387    0.441    0.444      0.387    0.414      -0.055   0.482     0.503     HIGH\nWeighted Avg.    0.477    0.531    0.474      0.477    0.473      -0.055   0.482     0.511     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 38 30 |  a = LOW\n 38 24 |  b = HIGH\n\n"}, {"i": 212, "mesure": 0.508, "algo_params": " -C 0.07122521697451079 -Q 130 -A -doNotMakeSplitPointActualValue", "bagging_params": " -I 14", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0.0373\nMean absolute error                      0.4936\nRoot mean squared error                  0.5274\nRelative absolute error                 98.8939 %\nRoot relative squared error            105.5414 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.618    0.581    0.538      0.618    0.575      0.038    0.508     0.538     LOW\n                 0.419    0.382    0.500      0.419    0.456      0.038    0.508     0.516     HIGH\nWeighted Avg.    0.523    0.486    0.520      0.523    0.518      0.038    0.508     0.527     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 42 26 |  a = LOW\n 36 26 |  b = HIGH\n\n"}, {"i": 213, "mesure": 0.486, "algo_params": " -C 0.8518192853693193 -S -A", "bagging_params": " -P 43 -S 82 -num-slots 10", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          67               51.5385 %\nIncorrectly Classified Instances        63               48.4615 %\nKappa statistic                          0.0125\nMean absolute error                      0.5019\nRoot mean squared error                  0.5277\nRelative absolute error                100.5466 %\nRoot relative squared error            105.6121 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.706    0.694    0.527      0.706    0.604      0.013    0.486     0.505     LOW\n                 0.306    0.294    0.487      0.306    0.376      0.013    0.486     0.485     HIGH\nWeighted Avg.    0.515    0.503    0.508      0.515    0.495      0.013    0.486     0.495     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 48 20 |  a = LOW\n 43 19 |  b = HIGH\n\n"}, {"i": 214, "mesure": 0, "algo_params": " -U -O -B -doNotMakeSplitPointActualValue -C 0.8903116086262451 -M 77 -O -doNotMakeSplitPointActualValue", "bagging_params": " -P 99 -S 101 -num-slots 16 -I 2 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\n\nWeka exception: Doesn't make sense to change confidence for unpruned tree!\n\nGeneral options:\n\n-h or -help\n\tOutput help information.\n-synopsis or -info\n\tOutput synopsis for classifier (use in conjunction  with -h)\n-t <name of training file>\n\tSets training file.\n-T <name of test file>\n\tSets test file. If missing, a cross-validation will be performed\n\ton the training data.\n-c <class index>\n\tSets index of class attribute (default: last).\n-x <number of folds>\n\tSets number of folds for cross-validation (default: 10).\n-no-cv\n\tDo not perform any cross validation.\n-force-batch-training\n\tAlways train classifier in batch mode, never incrementally.\n-split-percentage <percentage>\n\tSets the percentage for the train/test set split, e.g., 66.\n-preserve-order\n\tPreserves the order in the percentage split.\n-s <random number seed>\n\tSets random number seed for cross-validation or percentage split\n\t(default: 1).\n-m <name of file with cost matrix>\n\tSets file with cost matrix.\n-toggle <comma-separated list of evaluation metric names>\n\tComma separated list of metric names to toggle in the output.\n\tAll metrics are output by default with the exception of 'Coverage' and 'Region size'.\n\tAvailable metrics:\n\tCorrect,Incorrect,Kappa,Total cost,Average cost,KB relative,KB information,\n\tCorrelation,Complexity 0,Complexity scheme,Complexity improvement,\n\tMAE,RMSE,RAE,RRSE,Coverage,Region size,TP rate,FP rate,Precision,Recall,\n\tF-measure,MCC,ROC area,PRC area\n-l <name of input file>\n\tSets model input file. In case the filename ends with '.xml',\n\ta PMML file is loaded or, if that fails, options are loaded\n\tfrom the XML file.\n-d <name of output file>\n\tSets model output file. In case the filename ends with '.xml',\n\tonly the options are saved to the XML file, not the model.\n-v\n\tOutputs no statistics for training data.\n-o\n\tOutputs statistics only, not the classifier.\n-output-models-for-training-splits\n\tOutput models for training splits if cross-validation or percentage-split evaluation is used.\n-do-not-output-per-class-statistics\n\tDo not output statistics for each class.\n-k\n\tOutputs information-theoretic statistics.\n-classifications \"weka.classifiers.evaluation.output.prediction.AbstractOutput + options\"\n\tUses the specified class for generating the classification output.\n\tE.g.: weka.classifiers.evaluation.output.prediction.PlainText\n-p range\n\tOutputs predictions for test instances (or the train instances if\n\tno test instances provided and -no-cv is used), along with the \n\tattributes in the specified range (and nothing else). \n\tUse '-p 0' if no attributes are desired.\n\tDeprecated: use \"-classifications ...\" instead.\n-distribution\n\tOutputs the distribution instead of only the prediction\n\tin conjunction with the '-p' option (only nominal classes).\n\tDeprecated: use \"-classifications ...\" instead.\n-r\n\tOnly outputs cumulative margin distribution.\n-xml filename | xml-string\n\tRetrieves the options from the XML-data instead of the command line.\n-threshold-file <file>\n\tThe file to save the threshold data to.\n\tThe format is determined by the extensions, e.g., '.arff' for ARFF \n\tformat or '.csv' for CSV.\n-threshold-label <label>\n\tThe class label to determine the threshold data for\n\t(default is the first label)\n-no-predictions\n\tTurns off the collection of predictions in order to conserve memory.\n\nOptions specific to weka.classifiers.meta.Bagging:\n\n-P\n\tSize of each bag, as a percentage of the\n\ttraining set size. (default 100)\n-O\n\tCalculate the out of bag error.\n-store-out-of-bag-predictions\n\tWhether to store out of bag predictions in internal evaluation object.\n-output-out-of-bag-complexity-statistics\n\tWhether to output complexity-based statistics when out-of-bag evaluation is performed.\n-represent-copies-using-weights\n\tRepresent copies of instances using weights rather than explicitly.\n-print\n\tPrint the individual classifiers in the output\n-S <num>\n\tRandom number seed.\n\t(default 1)\n-num-slots <num>\n\tNumber of execution slots.\n\t(default 1 - i.e. no parallelism)\n\t(use 0 to auto-detect number of cores)\n-I <num>\n\tNumber of iterations.\n\t(current value 2)\n-W <classifier name>\n\tFull name of base classifier.\n\t(default: weka.classifiers.trees.REPTree)\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\nOptions specific to classifier weka.classifiers.trees.J48:\n\n-U\n\tUse unpruned tree.\n-O\n\tDo not collapse tree.\n-C <pruning confidence>\n\tSet confidence threshold for pruning.\n\t(default 0.25)\n-M <minimum number of instances>\n\tSet minimum number of instances per leaf.\n\t(default 2)\n-R\n\tUse reduced error pruning.\n-N <number of folds>\n\tSet number of folds for reduced error\n\tpruning. One fold is used as pruning set.\n\t(default 3)\n-B\n\tUse binary splits only.\n-S\n\tDo not perform subtree raising.\n-L\n\tDo not clean up after the tree has been built.\n-A\n\tLaplace smoothing for predicted probabilities.\n-J\n\tDo not use MDL correction for info gain on numeric attributes.\n-Q <seed>\n\tSeed for random data shuffling (default 1).\n-doNotMakeSplitPointActualValue\n\tDo not make split point actual value.\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\n"}, {"i": 215, "mesure": 0.357, "algo_params": " -U -M 28 -O -B", "bagging_params": " -S 10 -num-slots 6 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          51               39.2308 %\nIncorrectly Classified Instances        79               60.7692 %\nKappa statistic                         -0.2223\nMean absolute error                      0.5248\nRoot mean squared error                  0.5356\nRelative absolute error                105.1343 %\nRoot relative squared error            107.1846 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.456    0.677    0.425      0.456    0.440      -0.223   0.357     0.442     LOW\n                 0.323    0.544    0.351      0.323    0.336      -0.223   0.357     0.399     HIGH\nWeighted Avg.    0.392    0.614    0.389      0.392    0.390      -0.223   0.357     0.422     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 31 37 |  a = LOW\n 42 20 |  b = HIGH\n\n"}, {"i": 216, "mesure": 0.496, "algo_params": " -C 0.36747005290431267 -O -B -L", "bagging_params": " -P 46 -S 47 -num-slots 10 -I 19 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          69               53.0769 %\nIncorrectly Classified Instances        61               46.9231 %\nKappa statistic                          0.0521\nMean absolute error                      0.4942\nRoot mean squared error                  0.5133\nRelative absolute error                 98.9974 %\nRoot relative squared error            102.7282 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.632    0.581    0.544      0.632    0.585      0.053    0.496     0.531     LOW\n                 0.419    0.368    0.510      0.419    0.460      0.053    0.496     0.515     HIGH\nWeighted Avg.    0.531    0.479    0.528      0.531    0.525      0.053    0.496     0.523     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 43 25 |  a = LOW\n 36 26 |  b = HIGH\n\n"}, {"i": 217, "mesure": 0.5, "algo_params": " -C 0.18263811077537118 -M 47 -Q 73 -O -B -L -A", "bagging_params": " -P 18 -O -S 53 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          64               49.2308 %\nIncorrectly Classified Instances        66               50.7692 %\nKappa statistic                         -0.0248\nMean absolute error                      0.4993\nRoot mean squared error                  0.5007\nRelative absolute error                100.0276 %\nRoot relative squared error            100.2033 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.588    0.613    0.513      0.588    0.548      -0.025   0.500     0.527     LOW\n                 0.387    0.412    0.462      0.387    0.421      -0.025   0.500     0.473     HIGH\nWeighted Avg.    0.492    0.517    0.488      0.492    0.487      -0.025   0.500     0.502     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 40 28 |  a = LOW\n 38 24 |  b = HIGH\n\n"}, {"i": 218, "mesure": 0.511, "algo_params": " -N 34 -R -O -B -S -L -A -J -doNotMakeSplitPointActualValue", "bagging_params": " -O -S 64 -num-slots 8 -I 12 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          69               53.0769 %\nIncorrectly Classified Instances        61               46.9231 %\nKappa statistic                          0.0453\nMean absolute error                      0.4932\nRoot mean squared error                  0.4981\nRelative absolute error                 98.799  %\nRoot relative squared error             99.6842 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.706    0.661    0.539      0.706    0.611      0.048    0.511     0.526     LOW\n                 0.339    0.294    0.512      0.339    0.408      0.048    0.511     0.574     HIGH\nWeighted Avg.    0.531    0.486    0.526      0.531    0.514      0.048    0.511     0.549     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 48 20 |  a = LOW\n 41 21 |  b = HIGH\n\n"}, {"i": 219, "mesure": 0.464, "algo_params": " -N 106 -R -O -L -A -J -doNotMakeSplitPointActualValue", "bagging_params": " -O -S 105 -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          58               44.6154 %\nIncorrectly Classified Instances        72               55.3846 %\nKappa statistic                         -0.1228\nMean absolute error                      0.5042\nRoot mean squared error                  0.5139\nRelative absolute error                101.0113 %\nRoot relative squared error            102.8442 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.588    0.710    0.476      0.588    0.526      -0.127   0.464     0.529     LOW\n                 0.290    0.412    0.391      0.290    0.333      -0.127   0.464     0.459     HIGH\nWeighted Avg.    0.446    0.568    0.436      0.446    0.434      -0.127   0.464     0.496     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 40 28 |  a = LOW\n 44 18 |  b = HIGH\n\n"}, {"i": 220, "mesure": 0.466, "algo_params": " -C 0.8246347690853878 -B -J -doNotMakeSplitPointActualValue", "bagging_params": " -O -num-slots 21 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          58               44.6154 %\nIncorrectly Classified Instances        72               55.3846 %\nKappa statistic                         -0.1164\nMean absolute error                      0.5105\nRoot mean squared error                  0.563 \nRelative absolute error                102.2648 %\nRoot relative squared error            112.6709 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.529    0.645    0.474      0.529    0.500      -0.117   0.466     0.495     LOW\n                 0.355    0.471    0.407      0.355    0.379      -0.117   0.466     0.494     HIGH\nWeighted Avg.    0.446    0.562    0.442      0.446    0.442      -0.117   0.466     0.494     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 36 32 |  a = LOW\n 40 22 |  b = HIGH\n\n"}, {"i": 221, "mesure": 0.483, "algo_params": " -C 0.06504605287823673 -M 81 -Q 62 -O -B -S -L -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 32 -S 82", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4982\nRoot mean squared error                  0.5019\nRelative absolute error                 99.8143 %\nRoot relative squared error            100.4454 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.483     0.514     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.483     0.467     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.483     0.492     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 222, "mesure": 0, "algo_params": " -N 79 -R -B -S -L -A", "bagging_params": " -P 90 -num-slots 14 -I 16 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.NullPointerException\n\tweka.classifiers.trees.j48.ClassifierTree.getProbsLaplace(ClassifierTree.java:646)\n\tweka.classifiers.trees.j48.ClassifierTree.distributionForInstance(ClassifierTree.java:286)\n\tweka.classifiers.trees.J48.distributionForInstance(J48.java:327)\n\tweka.classifiers.meta.Bagging.distributionForInstance(Bagging.java:804)\n\tweka.classifiers.evaluation.Evaluation.evaluationForSingleInstance(Evaluation.java:2192)\n\tweka.classifiers.evaluation.Evaluation.evaluateModelOnceAndRecordPrediction(Evaluation.java:2230)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1907)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.classifiers.trees.j48.ClassifierTree.getProbsLaplace(ClassifierTree.java:646)\n\tat weka.classifiers.trees.j48.ClassifierTree.distributionForInstance(ClassifierTree.java:286)\n\tat weka.classifiers.trees.J48.distributionForInstance(J48.java:327)\n\tat weka.classifiers.meta.Bagging.distributionForInstance(Bagging.java:804)\n\tat weka.classifiers.evaluation.Evaluation.evaluationForSingleInstance(Evaluation.java:2192)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModelOnceAndRecordPrediction(Evaluation.java:2230)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1907)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 223, "mesure": 0.491, "algo_params": " -U -M 130 -Q 13 -O", "bagging_params": " -P 48 -O -I 10 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                         -0.0127\nMean absolute error                      0.4994\nRoot mean squared error                  0.5001\nRelative absolute error                100.0418 %\nRoot relative squared error            100.0886 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.794    0.806    0.519      0.794    0.628      -0.015   0.491     0.513     LOW\n                 0.194    0.206    0.462      0.194    0.273      -0.015   0.491     0.471     HIGH\nWeighted Avg.    0.508    0.520    0.492      0.508    0.459      -0.015   0.491     0.493     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 54 14 |  a = LOW\n 50 12 |  b = HIGH\n\n"}, {"i": 224, "mesure": 0.493, "algo_params": " -C 0.06861378551193809 -O -S -A -doNotMakeSplitPointActualValue", "bagging_params": " -O -num-slots 18 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                         -0.0115\nMean absolute error                      0.4982\nRoot mean squared error                  0.5373\nRelative absolute error                 99.8074 %\nRoot relative squared error            107.5364 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.618    0.629    0.519      0.618    0.564      -0.012   0.493     0.519     LOW\n                 0.371    0.382    0.469      0.371    0.414      -0.012   0.493     0.515     HIGH\nWeighted Avg.    0.500    0.511    0.495      0.500    0.493      -0.012   0.493     0.517     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 42 26 |  a = LOW\n 39 23 |  b = HIGH\n\n"}, {"i": 225, "mesure": 0.493, "algo_params": " -C 0.3290690186709089 -M 38 -O -B -S -L", "bagging_params": " -P 46 -O -num-slots 30 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          67               51.5385 %\nIncorrectly Classified Instances        63               48.4615 %\nKappa statistic                         -0.0064\nMean absolute error                      0.4992\nRoot mean squared error                  0.5002\nRelative absolute error                100.0142 %\nRoot relative squared error            100.1017 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.897    0.903    0.521      0.897    0.659      -0.010   0.492     0.516     LOW\n                 0.097    0.103    0.462      0.097    0.160      -0.010   0.494     0.472     HIGH\nWeighted Avg.    0.515    0.522    0.493      0.515    0.421      -0.010   0.493     0.495     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 61  7 |  a = LOW\n 56  6 |  b = HIGH\n\n"}, {"i": 226, "mesure": 0.492, "algo_params": " -U -M 9 -Q 54 -O -doNotMakeSplitPointActualValue", "bagging_params": " -num-slots 6 -I 9", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          59               45.3846 %\nIncorrectly Classified Instances        71               54.6154 %\nKappa statistic                         -0.1001\nMean absolute error                      0.4963\nRoot mean squared error                  0.5327\nRelative absolute error                 99.4315 %\nRoot relative squared error            106.6064 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.529    0.629    0.480      0.529    0.503      -0.101   0.492     0.511     LOW\n                 0.371    0.471    0.418      0.371    0.393      -0.101   0.492     0.531     HIGH\nWeighted Avg.    0.454    0.553    0.451      0.454    0.451      -0.101   0.492     0.521     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 36 32 |  a = LOW\n 39 23 |  b = HIGH\n\n"}, {"i": 227, "mesure": 0, "algo_params": " -N 123 -R -M 27 -Q 100 -S -A -doNotMakeSplitPointActualValue", "bagging_params": " -I 14 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tweka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tat weka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 228, "mesure": 0.475, "algo_params": " -N 52 -R -O -B -A -doNotMakeSplitPointActualValue", "bagging_params": " -num-slots 9 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          67               51.5385 %\nIncorrectly Classified Instances        63               48.4615 %\nKappa statistic                          0.0125\nMean absolute error                      0.4951\nRoot mean squared error                  0.5087\nRelative absolute error                 99.1882 %\nRoot relative squared error            101.8011 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.706    0.694    0.527      0.706    0.604      0.013    0.475     0.489     LOW\n                 0.306    0.294    0.487      0.306    0.376      0.013    0.475     0.536     HIGH\nWeighted Avg.    0.515    0.503    0.508      0.515    0.495      0.013    0.475     0.512     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 48 20 |  a = LOW\n 43 19 |  b = HIGH\n\n"}, {"i": 229, "mesure": 0.598, "algo_params": " -C 0.10724333954127019 -Q 9 -O -S -L -A -J", "bagging_params": "-S 50", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          74               56.9231 %\nIncorrectly Classified Instances        56               43.0769 %\nKappa statistic                          0.1267\nMean absolute error                      0.4643\nRoot mean squared error                  0.5003\nRelative absolute error                 93.0213 %\nRoot relative squared error            100.1221 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.706    0.581    0.571      0.706    0.632      0.131    0.598     0.619     LOW\n                 0.419    0.294    0.565      0.419    0.481      0.131    0.598     0.587     HIGH\nWeighted Avg.    0.569    0.444    0.568      0.569    0.560      0.131    0.598     0.604     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 48 20 |  a = LOW\n 36 26 |  b = HIGH\n\n"}, {"i": 230, "mesure": 0.458, "algo_params": " -C 0.5766086015626593 -M 51 -B -S -L", "bagging_params": " -S 95 -I 8 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          63               48.4615 %\nIncorrectly Classified Instances        67               51.5385 %\nKappa statistic                         -0.0411\nMean absolute error                      0.5091\nRoot mean squared error                  0.5208\nRelative absolute error                101.996  %\nRoot relative squared error            104.2354 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.588    0.629    0.506      0.588    0.544      -0.042   0.458     0.485     LOW\n                 0.371    0.412    0.451      0.371    0.407      -0.042   0.458     0.444     HIGH\nWeighted Avg.    0.485    0.525    0.480      0.485    0.479      -0.042   0.458     0.465     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 40 28 |  a = LOW\n 39 23 |  b = HIGH\n\n"}, {"i": 231, "mesure": 0.539, "algo_params": " -U -Q 103", "bagging_params": " -P 33 -num-slots 23 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                          0     \nMean absolute error                      0.4891\nRoot mean squared error                  0.5172\nRelative absolute error                 97.9772 %\nRoot relative squared error            103.5139 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.500    0.500    0.523      0.500    0.511      0.000    0.539     0.548     LOW\n                 0.500    0.500    0.477      0.500    0.488      0.000    0.539     0.540     HIGH\nWeighted Avg.    0.500    0.500    0.501      0.500    0.500      0.000    0.539     0.544     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 34 34 |  a = LOW\n 31 31 |  b = HIGH\n\n"}, {"i": 232, "mesure": 0.478, "algo_params": " -N 32 -R -M 79 -Q 97 -O -doNotMakeSplitPointActualValue", "bagging_params": " -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4993\nRoot mean squared error                  0.4999\nRelative absolute error                100.0332 %\nRoot relative squared error            100.0477 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.478     0.506     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.478     0.465     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.478     0.486     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 233, "mesure": 0.518, "algo_params": " -U -Q 57 -B -doNotMakeSplitPointActualValue", "bagging_params": " -O -num-slots 6 -I 17 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                          0.0062\nMean absolute error                      0.489 \nRoot mean squared error                  0.526 \nRelative absolute error                 97.962  %\nRoot relative squared error            105.2563 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.603    0.597    0.526      0.603    0.562      0.006    0.518     0.556     LOW\n                 0.403    0.397    0.481      0.403    0.439      0.006    0.518     0.532     HIGH\nWeighted Avg.    0.508    0.502    0.504      0.508    0.503      0.006    0.518     0.545     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 41 27 |  a = LOW\n 37 25 |  b = HIGH\n\n"}, {"i": 234, "mesure": 0, "algo_params": " -U -O -B -C 0.22105699061531658 -M 16 -Q 74 -doNotMakeSplitPointActualValue", "bagging_params": " -P 41 -O -S 14 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\n\nWeka exception: Doesn't make sense to change confidence for unpruned tree!\n\nGeneral options:\n\n-h or -help\n\tOutput help information.\n-synopsis or -info\n\tOutput synopsis for classifier (use in conjunction  with -h)\n-t <name of training file>\n\tSets training file.\n-T <name of test file>\n\tSets test file. If missing, a cross-validation will be performed\n\ton the training data.\n-c <class index>\n\tSets index of class attribute (default: last).\n-x <number of folds>\n\tSets number of folds for cross-validation (default: 10).\n-no-cv\n\tDo not perform any cross validation.\n-force-batch-training\n\tAlways train classifier in batch mode, never incrementally.\n-split-percentage <percentage>\n\tSets the percentage for the train/test set split, e.g., 66.\n-preserve-order\n\tPreserves the order in the percentage split.\n-s <random number seed>\n\tSets random number seed for cross-validation or percentage split\n\t(default: 1).\n-m <name of file with cost matrix>\n\tSets file with cost matrix.\n-toggle <comma-separated list of evaluation metric names>\n\tComma separated list of metric names to toggle in the output.\n\tAll metrics are output by default with the exception of 'Coverage' and 'Region size'.\n\tAvailable metrics:\n\tCorrect,Incorrect,Kappa,Total cost,Average cost,KB relative,KB information,\n\tCorrelation,Complexity 0,Complexity scheme,Complexity improvement,\n\tMAE,RMSE,RAE,RRSE,Coverage,Region size,TP rate,FP rate,Precision,Recall,\n\tF-measure,MCC,ROC area,PRC area\n-l <name of input file>\n\tSets model input file. In case the filename ends with '.xml',\n\ta PMML file is loaded or, if that fails, options are loaded\n\tfrom the XML file.\n-d <name of output file>\n\tSets model output file. In case the filename ends with '.xml',\n\tonly the options are saved to the XML file, not the model.\n-v\n\tOutputs no statistics for training data.\n-o\n\tOutputs statistics only, not the classifier.\n-output-models-for-training-splits\n\tOutput models for training splits if cross-validation or percentage-split evaluation is used.\n-do-not-output-per-class-statistics\n\tDo not output statistics for each class.\n-k\n\tOutputs information-theoretic statistics.\n-classifications \"weka.classifiers.evaluation.output.prediction.AbstractOutput + options\"\n\tUses the specified class for generating the classification output.\n\tE.g.: weka.classifiers.evaluation.output.prediction.PlainText\n-p range\n\tOutputs predictions for test instances (or the train instances if\n\tno test instances provided and -no-cv is used), along with the \n\tattributes in the specified range (and nothing else). \n\tUse '-p 0' if no attributes are desired.\n\tDeprecated: use \"-classifications ...\" instead.\n-distribution\n\tOutputs the distribution instead of only the prediction\n\tin conjunction with the '-p' option (only nominal classes).\n\tDeprecated: use \"-classifications ...\" instead.\n-r\n\tOnly outputs cumulative margin distribution.\n-xml filename | xml-string\n\tRetrieves the options from the XML-data instead of the command line.\n-threshold-file <file>\n\tThe file to save the threshold data to.\n\tThe format is determined by the extensions, e.g., '.arff' for ARFF \n\tformat or '.csv' for CSV.\n-threshold-label <label>\n\tThe class label to determine the threshold data for\n\t(default is the first label)\n-no-predictions\n\tTurns off the collection of predictions in order to conserve memory.\n\nOptions specific to weka.classifiers.meta.Bagging:\n\n-P\n\tSize of each bag, as a percentage of the\n\ttraining set size. (default 100)\n-O\n\tCalculate the out of bag error.\n-store-out-of-bag-predictions\n\tWhether to store out of bag predictions in internal evaluation object.\n-output-out-of-bag-complexity-statistics\n\tWhether to output complexity-based statistics when out-of-bag evaluation is performed.\n-represent-copies-using-weights\n\tRepresent copies of instances using weights rather than explicitly.\n-print\n\tPrint the individual classifiers in the output\n-S <num>\n\tRandom number seed.\n\t(default 1)\n-num-slots <num>\n\tNumber of execution slots.\n\t(default 1 - i.e. no parallelism)\n\t(use 0 to auto-detect number of cores)\n-I <num>\n\tNumber of iterations.\n\t(current value 10)\n-W <classifier name>\n\tFull name of base classifier.\n\t(default: weka.classifiers.trees.REPTree)\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\nOptions specific to classifier weka.classifiers.trees.J48:\n\n-U\n\tUse unpruned tree.\n-O\n\tDo not collapse tree.\n-C <pruning confidence>\n\tSet confidence threshold for pruning.\n\t(default 0.25)\n-M <minimum number of instances>\n\tSet minimum number of instances per leaf.\n\t(default 2)\n-R\n\tUse reduced error pruning.\n-N <number of folds>\n\tSet number of folds for reduced error\n\tpruning. One fold is used as pruning set.\n\t(default 3)\n-B\n\tUse binary splits only.\n-S\n\tDo not perform subtree raising.\n-L\n\tDo not clean up after the tree has been built.\n-A\n\tLaplace smoothing for predicted probabilities.\n-J\n\tDo not use MDL correction for info gain on numeric attributes.\n-Q <seed>\n\tSeed for random data shuffling (default 1).\n-doNotMakeSplitPointActualValue\n\tDo not make split point actual value.\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\n"}, {"i": 235, "mesure": 0, "algo_params": " -N 44 -R -M 23 -B -A", "bagging_params": " -P 14 -O -S 58 -num-slots 8 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.NullPointerException\n\tweka.classifiers.trees.j48.ClassifierTree.getProbsLaplace(ClassifierTree.java:646)\n\tweka.classifiers.trees.j48.ClassifierTree.distributionForInstance(ClassifierTree.java:286)\n\tweka.classifiers.trees.J48.distributionForInstance(J48.java:327)\n\tweka.classifiers.meta.Bagging.buildClassifier(Bagging.java:751)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.classifiers.trees.j48.ClassifierTree.getProbsLaplace(ClassifierTree.java:646)\n\tat weka.classifiers.trees.j48.ClassifierTree.distributionForInstance(ClassifierTree.java:286)\n\tat weka.classifiers.trees.J48.distributionForInstance(J48.java:327)\n\tat weka.classifiers.meta.Bagging.buildClassifier(Bagging.java:751)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 236, "mesure": 0.496, "algo_params": " -U -M 43 -Q 20", "bagging_params": " -O -S 49 -num-slots 7 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4988\nRoot mean squared error                  0.4997\nRelative absolute error                 99.9326 %\nRoot relative squared error             99.9947 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.497     0.525     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.495     0.472     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.496     0.500     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 237, "mesure": 0, "algo_params": " -N 101 -R -S", "bagging_params": " -O -I 14 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tweka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tat weka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 238, "mesure": 0.488, "algo_params": " -C 0.35959208189264447 -M 83 -Q 103 -O -S -A -J", "bagging_params": " -P 58 -O -S 16 -num-slots 5 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                         -0.0127\nMean absolute error                      0.4993\nRoot mean squared error                  0.5005\nRelative absolute error                100.0209 %\nRoot relative squared error            100.1612 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.794    0.806    0.519      0.794    0.628      -0.015   0.488     0.518     LOW\n                 0.194    0.206    0.462      0.194    0.273      -0.015   0.488     0.468     HIGH\nWeighted Avg.    0.508    0.520    0.492      0.508    0.459      -0.015   0.488     0.494     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 54 14 |  a = LOW\n 50 12 |  b = HIGH\n\n"}, {"i": 239, "mesure": 0.478, "algo_params": " -U -M 93 -Q 21 -O -B -doNotMakeSplitPointActualValue", "bagging_params": " -O -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4993\nRoot mean squared error                  0.5   \nRelative absolute error                100.0353 %\nRoot relative squared error            100.0534 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.478     0.506     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.478     0.465     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.478     0.486     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 240, "mesure": 0.485, "algo_params": " -C 0.07198633135675547 -M 65 -B -S -doNotMakeSplitPointActualValue", "bagging_params": " -O -S 40 -I 28 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4992\nRoot mean squared error                  0.4997\nRelative absolute error                100.0155 %\nRoot relative squared error            100.0041 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.485     0.516     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.485     0.467     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.485     0.493     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 241, "mesure": 0.478, "algo_params": " -U -M 75 -Q 42 -O -B", "bagging_params": " -num-slots 12 -I 8 -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4996\nRoot mean squared error                  0.5   \nRelative absolute error                100.0827 %\nRoot relative squared error            100.065  %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.478     0.507     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.478     0.465     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.478     0.487     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 242, "mesure": 0.516, "algo_params": " -C 0.8474356824014507 -Q 37 -O -A -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 68 -O -S 33 -I 21", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          71               54.6154 %\nIncorrectly Classified Instances        59               45.3846 %\nKappa statistic                          0.0806\nMean absolute error                      0.4894\nRoot mean squared error                  0.5152\nRelative absolute error                 98.0392 %\nRoot relative squared error            103.0971 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.676    0.597    0.554      0.676    0.609      0.083    0.516     0.548     LOW\n                 0.403    0.324    0.532      0.403    0.459      0.083    0.516     0.547     HIGH\nWeighted Avg.    0.546    0.466    0.544      0.546    0.537      0.083    0.516     0.548     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 46 22 |  a = LOW\n 37 25 |  b = HIGH\n\n"}, {"i": 243, "mesure": 0, "algo_params": " -N 41 -R -Q 85 -L -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 23 -O -I 10", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tweka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tat weka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 244, "mesure": 0.478, "algo_params": " -C 0.57638151348583 -M 76 -Q 78 -O -B -S -L", "bagging_params": " -P 23 -num-slots 27 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                         -0.0127\nMean absolute error                      0.4996\nRoot mean squared error                  0.5008\nRelative absolute error                100.0913 %\nRoot relative squared error            100.217  %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.794    0.806    0.519      0.794    0.628      -0.015   0.478     0.506     LOW\n                 0.194    0.206    0.462      0.194    0.273      -0.015   0.478     0.465     HIGH\nWeighted Avg.    0.508    0.520    0.492      0.508    0.459      -0.015   0.478     0.486     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 54 14 |  a = LOW\n 50 12 |  b = HIGH\n\n"}, {"i": 245, "mesure": 0.483, "algo_params": " -C 0.7744869318181278 -M 26 -Q 18 -B -S -J", "bagging_params": " -P 31 -S 99 -I 9", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                         -0.0188\nMean absolute error                      0.5   \nRoot mean squared error                  0.5008\nRelative absolute error                100.1636 %\nRoot relative squared error            100.2184 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.691    0.710    0.516      0.691    0.591      -0.020   0.483     0.514     LOW\n                 0.290    0.309    0.462      0.290    0.356      -0.020   0.483     0.467     HIGH\nWeighted Avg.    0.500    0.519    0.490      0.500    0.479      -0.020   0.483     0.492     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 47 21 |  a = LOW\n 44 18 |  b = HIGH\n\n"}, {"i": 246, "mesure": 0.537, "algo_params": " -C 0.4085768277007249 -O -B -S -L -A -doNotMakeSplitPointActualValue", "bagging_params": " -O -I 21", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          70               53.8462 %\nIncorrectly Classified Instances        60               46.1538 %\nKappa statistic                          0.067 \nMean absolute error                      0.4835\nRoot mean squared error                  0.514 \nRelative absolute error                 96.8712 %\nRoot relative squared error            102.8607 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.647    0.581    0.550      0.647    0.595      0.068    0.537     0.566     LOW\n                 0.419    0.353    0.520      0.419    0.464      0.068    0.537     0.553     HIGH\nWeighted Avg.    0.538    0.472    0.536      0.538    0.532      0.068    0.537     0.560     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 44 24 |  a = LOW\n 36 26 |  b = HIGH\n\n"}, {"i": 247, "mesure": 0.478, "algo_params": " -C 0.46892290776209866 -M 33 -Q 26 -B -doNotMakeSplitPointActualValue", "bagging_params": " -P 37 -S 86 -num-slots 17 -I 11 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                         -0.0127\nMean absolute error                      0.4997\nRoot mean squared error                  0.5014\nRelative absolute error                100.1032 %\nRoot relative squared error            100.3422 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.794    0.806    0.519      0.794    0.628      -0.015   0.478     0.506     LOW\n                 0.194    0.206    0.462      0.194    0.273      -0.015   0.478     0.465     HIGH\nWeighted Avg.    0.508    0.520    0.492      0.508    0.459      -0.015   0.478     0.486     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 54 14 |  a = LOW\n 50 12 |  b = HIGH\n\n"}, {"i": 248, "mesure": 0.476, "algo_params": " -U -Q 23 -O -B", "bagging_params": " -P 81 -O -num-slots 24 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          63               48.4615 %\nIncorrectly Classified Instances        67               51.5385 %\nKappa statistic                         -0.0381\nMean absolute error                      0.5049\nRoot mean squared error                  0.5457\nRelative absolute error                101.1474 %\nRoot relative squared error            109.206  %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.559    0.597    0.507      0.559    0.531      -0.038   0.476     0.548     LOW\n                 0.403    0.441    0.455      0.403    0.427      -0.038   0.476     0.482     HIGH\nWeighted Avg.    0.485    0.523    0.482      0.485    0.482      -0.038   0.476     0.516     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 38 30 |  a = LOW\n 37 25 |  b = HIGH\n\n"}, {"i": 249, "mesure": 0.535, "algo_params": " -C 0.7215304262158203 -M 10 -Q 39 -O -J", "bagging_params": " -S 50 -num-slots 8 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          67               51.5385 %\nIncorrectly Classified Instances        63               48.4615 %\nKappa statistic                          0.021 \nMean absolute error                      0.4787\nRoot mean squared error                  0.5097\nRelative absolute error                 95.8933 %\nRoot relative squared error            101.997  %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.618    0.597    0.532      0.618    0.571      0.021    0.535     0.527     LOW\n                 0.403    0.382    0.490      0.403    0.442      0.021    0.535     0.586     HIGH\nWeighted Avg.    0.515    0.495    0.512      0.515    0.510      0.021    0.535     0.555     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 42 26 |  a = LOW\n 37 25 |  b = HIGH\n\n"}, {"i": 250, "mesure": 0.484, "algo_params": " -U -M 22 -O", "bagging_params": " -P 20 -O -S 119 -I 5 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          63               48.4615 %\nIncorrectly Classified Instances        67               51.5385 %\nKappa statistic                         -0.0308\nMean absolute error                      0.5003\nRoot mean squared error                  0.5035\nRelative absolute error                100.2354 %\nRoot relative squared error            100.7607 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.485    0.516    0.508      0.485    0.496      -0.031   0.483     0.512     LOW\n                 0.484    0.515    0.462      0.484    0.472      -0.031   0.485     0.467     HIGH\nWeighted Avg.    0.485    0.515    0.486      0.485    0.485      -0.031   0.484     0.490     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 33 35 |  a = LOW\n 32 30 |  b = HIGH\n\n"}, {"i": 251, "mesure": 0.504, "algo_params": " -C 0.1228503330210916 -Q 95 -O -B -S -L -J", "bagging_params": " -O -S 3 -num-slots 25 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                          0.0091\nMean absolute error                      0.5001\nRoot mean squared error                  0.5507\nRelative absolute error                100.1858 %\nRoot relative squared error            110.1994 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.574    0.565    0.527      0.574    0.549      0.009    0.504     0.517     LOW\n                 0.435    0.426    0.482      0.435    0.458      0.009    0.504     0.512     HIGH\nWeighted Avg.    0.508    0.499    0.506      0.508    0.506      0.009    0.504     0.515     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 39 29 |  a = LOW\n 35 27 |  b = HIGH\n\n"}, {"i": 252, "mesure": 0.434, "algo_params": " -U -B", "bagging_params": " -O -S 38 -num-slots 11 -I 3 -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          60               46.1538 %\nIncorrectly Classified Instances        70               53.8462 %\nKappa statistic                         -0.0762\nMean absolute error                      0.533 \nRoot mean squared error                  0.6156\nRelative absolute error                106.7891 %\nRoot relative squared error            123.1976 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.456    0.532    0.484      0.456    0.470      -0.076   0.434     0.466     LOW\n                 0.468    0.544    0.439      0.468    0.453      -0.076   0.434     0.474     HIGH\nWeighted Avg.    0.462    0.538    0.463      0.462    0.462      -0.076   0.434     0.470     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 31 37 |  a = LOW\n 33 29 |  b = HIGH\n\n"}, {"i": 253, "mesure": 0.473, "algo_params": " -N 36 -R -Q 112 -O -S -L -A -doNotMakeSplitPointActualValue", "bagging_params": " -P 36 -I 30 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          64               49.2308 %\nIncorrectly Classified Instances        66               50.7692 %\nKappa statistic                         -0.0337\nMean absolute error                      0.5008\nRoot mean squared error                  0.5045\nRelative absolute error                100.3343 %\nRoot relative squared error            100.9633 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.676    0.710    0.511      0.676    0.582      -0.036   0.473     0.505     LOW\n                 0.290    0.324    0.450      0.290    0.353      -0.036   0.473     0.484     HIGH\nWeighted Avg.    0.492    0.526    0.482      0.492    0.473      -0.036   0.473     0.495     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 46 22 |  a = LOW\n 44 18 |  b = HIGH\n\n"}, {"i": 254, "mesure": 0, "algo_params": " -N 128 -R -M 36 -Q 115 -L -J -doNotMakeSplitPointActualValue", "bagging_params": " -num-slots 29 -store-out-of-bag-predictions", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.NullPointerException\n\tweka.classifiers.trees.j48.ClassifierTree.getProbs(ClassifierTree.java:684)\n\tweka.classifiers.trees.j48.ClassifierTree.distributionForInstance(ClassifierTree.java:284)\n\tweka.classifiers.trees.J48.distributionForInstance(J48.java:327)\n\tweka.classifiers.meta.Bagging.distributionForInstance(Bagging.java:804)\n\tweka.classifiers.evaluation.Evaluation.evaluationForSingleInstance(Evaluation.java:2192)\n\tweka.classifiers.evaluation.Evaluation.evaluateModelOnceAndRecordPrediction(Evaluation.java:2230)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:2106)\n\tweka.classifiers.evaluation.Evaluation.crossValidateModel(Evaluation.java:867)\n\tweka.classifiers.evaluation.Evaluation.crossValidateModel(Evaluation.java:812)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1927)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.classifiers.trees.j48.ClassifierTree.getProbs(ClassifierTree.java:684)\n\tat weka.classifiers.trees.j48.ClassifierTree.distributionForInstance(ClassifierTree.java:284)\n\tat weka.classifiers.trees.J48.distributionForInstance(J48.java:327)\n\tat weka.classifiers.meta.Bagging.distributionForInstance(Bagging.java:804)\n\tat weka.classifiers.evaluation.Evaluation.evaluationForSingleInstance(Evaluation.java:2192)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModelOnceAndRecordPrediction(Evaluation.java:2230)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:2106)\n\tat weka.classifiers.evaluation.Evaluation.crossValidateModel(Evaluation.java:867)\n\tat weka.classifiers.evaluation.Evaluation.crossValidateModel(Evaluation.java:812)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1927)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 255, "mesure": 0, "algo_params": " -N 70 -R -M 120 -Q 39 -O -B -A -J", "bagging_params": " -P 15 -O -num-slots 24 -I 26 -output-out-of-bag-complexity-statistics", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.NullPointerException\n\tweka.classifiers.trees.j48.ClassifierTree.getProbsLaplace(ClassifierTree.java:646)\n\tweka.classifiers.trees.j48.ClassifierTree.distributionForInstance(ClassifierTree.java:286)\n\tweka.classifiers.trees.J48.distributionForInstance(J48.java:327)\n\tweka.classifiers.meta.Bagging.buildClassifier(Bagging.java:751)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.classifiers.trees.j48.ClassifierTree.getProbsLaplace(ClassifierTree.java:646)\n\tat weka.classifiers.trees.j48.ClassifierTree.distributionForInstance(ClassifierTree.java:286)\n\tat weka.classifiers.trees.J48.distributionForInstance(J48.java:327)\n\tat weka.classifiers.meta.Bagging.buildClassifier(Bagging.java:751)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 256, "mesure": 0.485, "algo_params": " -C 0.517970084737733 -O -B -S -L -doNotMakeSplitPointActualValue", "bagging_params": " -O -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                         -0.0086\nMean absolute error                      0.5028\nRoot mean squared error                  0.5502\nRelative absolute error                100.7198 %\nRoot relative squared error            110.1046 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.588    0.597    0.519      0.588    0.552      -0.009   0.485     0.513     LOW\n                 0.403    0.412    0.472      0.403    0.435      -0.009   0.485     0.505     HIGH\nWeighted Avg.    0.500    0.509    0.497      0.500    0.496      -0.009   0.485     0.510     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 40 28 |  a = LOW\n 37 25 |  b = HIGH\n\n"}, {"i": 257, "mesure": 0.492, "algo_params": " -U -Q 68 -doNotMakeSplitPointActualValue", "bagging_params": " -P 71 -O -num-slots 19", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                         -0.0072\nMean absolute error                      0.4976\nRoot mean squared error                  0.5335\nRelative absolute error                 99.6951 %\nRoot relative squared error            106.7612 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.574    0.581    0.520      0.574    0.545      -0.007   0.492     0.506     LOW\n                 0.419    0.426    0.473      0.419    0.444      -0.007   0.492     0.515     HIGH\nWeighted Avg.    0.500    0.507    0.497      0.500    0.497      -0.007   0.492     0.510     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 39 29 |  a = LOW\n 36 26 |  b = HIGH\n\n"}, {"i": 258, "mesure": 0.5, "algo_params": " -C 0.6184764938085036 -M 104 -Q 57 -L -J", "bagging_params": " -O -S 118 -num-slots 28 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4988\nRoot mean squared error                  0.4995\nRelative absolute error                 99.9286 %\nRoot relative squared error             99.9641 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.500     0.527     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.500     0.474     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.500     0.501     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 259, "mesure": 0.583, "algo_params": " -N 68 -R -B -S -A", "bagging_params": " -O -num-slots 23 -I 24", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          75               57.6923 %\nIncorrectly Classified Instances        55               42.3077 %\nKappa statistic                          0.1329\nMean absolute error                      0.4878\nRoot mean squared error                  0.4924\nRelative absolute error                 97.7287 %\nRoot relative squared error             98.5446 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.824    0.694    0.566      0.824    0.671      0.152    0.583     0.564     LOW\n                 0.306    0.176    0.613      0.306    0.409      0.152    0.583     0.603     HIGH\nWeighted Avg.    0.577    0.447    0.588      0.577    0.546      0.152    0.583     0.583     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 56 12 |  a = LOW\n 43 19 |  b = HIGH\n\n"}, {"i": 260, "mesure": 0, "algo_params": " -N 118 -R -L -A -J", "bagging_params": " -P 49 -O -num-slots 13", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.NullPointerException\n\tweka.classifiers.trees.j48.ClassifierTree.getProbsLaplace(ClassifierTree.java:646)\n\tweka.classifiers.trees.j48.ClassifierTree.distributionForInstance(ClassifierTree.java:286)\n\tweka.classifiers.trees.J48.distributionForInstance(J48.java:327)\n\tweka.classifiers.meta.Bagging.buildClassifier(Bagging.java:751)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.classifiers.trees.j48.ClassifierTree.getProbsLaplace(ClassifierTree.java:646)\n\tat weka.classifiers.trees.j48.ClassifierTree.distributionForInstance(ClassifierTree.java:286)\n\tat weka.classifiers.trees.J48.distributionForInstance(J48.java:327)\n\tat weka.classifiers.meta.Bagging.buildClassifier(Bagging.java:751)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 261, "mesure": 0.577, "algo_params": " -C 0.36362669866932495 -Q 103 -O -A -J", "bagging_params": " -P 40 -O -S 96 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          76               58.4615 %\nIncorrectly Classified Instances        54               41.5385 %\nKappa statistic                          0.1579\nMean absolute error                      0.4761\nRoot mean squared error                  0.5039\nRelative absolute error                 95.3736 %\nRoot relative squared error            100.8372 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.721    0.565    0.583      0.721    0.645      0.163    0.577     0.594     LOW\n                 0.435    0.279    0.587      0.435    0.500      0.163    0.577     0.554     HIGH\nWeighted Avg.    0.585    0.429    0.585      0.585    0.576      0.163    0.577     0.575     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 49 19 |  a = LOW\n 35 27 |  b = HIGH\n\n"}, {"i": 262, "mesure": 0.496, "algo_params": " -C 0.07368024048095734 -B -L -doNotMakeSplitPointActualValue", "bagging_params": " -O -num-slots 14 -I 13", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          64               49.2308 %\nIncorrectly Classified Instances        66               50.7692 %\nKappa statistic                         -0.0234\nMean absolute error                      0.4976\nRoot mean squared error                  0.5415\nRelative absolute error                 99.6792 %\nRoot relative squared error            108.3704 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.574    0.597    0.513      0.574    0.542      -0.024   0.496     0.525     LOW\n                 0.403    0.426    0.463      0.403    0.431      -0.024   0.496     0.506     HIGH\nWeighted Avg.    0.492    0.516    0.489      0.492    0.489      -0.024   0.496     0.516     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 39 29 |  a = LOW\n 37 25 |  b = HIGH\n\n"}, {"i": 263, "mesure": 0.488, "algo_params": " -U -M 50 -Q 106 -O -B -doNotMakeSplitPointActualValue", "bagging_params": " -P 24 -num-slots 20 -I 19 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                         -0.0188\nMean absolute error                      0.4994\nRoot mean squared error                  0.5002\nRelative absolute error                100.0438 %\nRoot relative squared error            100.1094 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.691    0.710    0.516      0.691    0.591      -0.020   0.488     0.519     LOW\n                 0.290    0.309    0.462      0.290    0.356      -0.020   0.489     0.469     HIGH\nWeighted Avg.    0.500    0.519    0.490      0.500    0.479      -0.020   0.488     0.495     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 47 21 |  a = LOW\n 44 18 |  b = HIGH\n\n"}, {"i": 264, "mesure": 0.467, "algo_params": " -C 0.6090900670056176 -Q 111 -B -S -A -J -doNotMakeSplitPointActualValue", "bagging_params": " -O -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          61               46.9231 %\nIncorrectly Classified Instances        69               53.0769 %\nKappa statistic                         -0.0737\nMean absolute error                      0.5066\nRoot mean squared error                  0.5493\nRelative absolute error                101.4982 %\nRoot relative squared error            109.9377 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.588    0.661    0.494      0.588    0.537      -0.075   0.467     0.492     LOW\n                 0.339    0.412    0.429      0.339    0.378      -0.075   0.467     0.496     HIGH\nWeighted Avg.    0.469    0.542    0.463      0.469    0.461      -0.075   0.467     0.494     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 40 28 |  a = LOW\n 41 21 |  b = HIGH\n\n"}, {"i": 265, "mesure": 0.494, "algo_params": " -C 0.16041152707833406 -M 63 -Q 84 -S -A -doNotMakeSplitPointActualValue", "bagging_params": " -P 75 -O -S 114 -I 28 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.499 \nRoot mean squared error                  0.4997\nRelative absolute error                 99.9773 %\nRoot relative squared error            100.0038 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.494     0.523     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.494     0.471     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.494     0.498     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 266, "mesure": 0.491, "algo_params": " -U -M 101 -Q 72 -O", "bagging_params": " -O -I 16", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4993\nRoot mean squared error                  0.4997\nRelative absolute error                100.0202 %\nRoot relative squared error            100.012  %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.491     0.513     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.491     0.471     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.491     0.493     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 267, "mesure": 0.587, "algo_params": " -C 0.2461738081464394 -A -J -doNotMakeSplitPointActualValue", "bagging_params": " -S 37 -num-slots 22 -I 22 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          70               53.8462 %\nIncorrectly Classified Instances        60               46.1538 %\nKappa statistic                          0.0643\nMean absolute error                      0.47  \nRoot mean squared error                  0.5011\nRelative absolute error                 94.1548 %\nRoot relative squared error            100.2738 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.676    0.613    0.548      0.676    0.605      0.066    0.587     0.622     LOW\n                 0.387    0.324    0.522      0.387    0.444      0.066    0.587     0.589     HIGH\nWeighted Avg.    0.538    0.475    0.535      0.538    0.529      0.066    0.587     0.606     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 46 22 |  a = LOW\n 38 24 |  b = HIGH\n\n"}, {"i": 268, "mesure": 0.502, "algo_params": " -C 0.8039260839970601 -M 41 -L -A -J -doNotMakeSplitPointActualValue", "bagging_params": " -O -S 118 -I 9 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4988\nRoot mean squared error                  0.4996\nRelative absolute error                 99.9209 %\nRoot relative squared error             99.9856 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.502     0.527     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.502     0.476     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.502     0.503     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 269, "mesure": 0.556, "algo_params": " -N 36 -R -B -L -A -doNotMakeSplitPointActualValue", "bagging_params": " -P 91 -S 74 -num-slots 17 -I 11 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          69               53.0769 %\nIncorrectly Classified Instances        61               46.9231 %\nKappa statistic                          0.0397\nMean absolute error                      0.4955\nRoot mean squared error                  0.4982\nRelative absolute error                 99.2659 %\nRoot relative squared error             99.7046 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.765    0.726    0.536      0.765    0.630      0.045    0.556     0.561     LOW\n                 0.274    0.235    0.515      0.274    0.358      0.045    0.556     0.536     HIGH\nWeighted Avg.    0.531    0.492    0.526      0.531    0.500      0.045    0.556     0.549     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 52 16 |  a = LOW\n 45 17 |  b = HIGH\n\n"}, {"i": 270, "mesure": 0.488, "algo_params": " -C 0.24221891916887905 -Q 32 -S -L -A -doNotMakeSplitPointActualValue", "bagging_params": " -O -S 99 -I 15 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          63               48.4615 %\nIncorrectly Classified Instances        67               51.5385 %\nKappa statistic                         -0.0426\nMean absolute error                      0.4976\nRoot mean squared error                  0.5292\nRelative absolute error                 99.6822 %\nRoot relative squared error            105.9156 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.603    0.645    0.506      0.603    0.550      -0.044   0.488     0.527     LOW\n                 0.355    0.397    0.449      0.355    0.396      -0.044   0.488     0.539     HIGH\nWeighted Avg.    0.485    0.527    0.479      0.485    0.477      -0.044   0.488     0.533     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 41 27 |  a = LOW\n 40 22 |  b = HIGH\n\n"}, {"i": 271, "mesure": 0.479, "algo_params": " -C 0.8533399852445631 -M 45 -Q 47 -O -S -L -doNotMakeSplitPointActualValue", "bagging_params": " -P 5 -S 91 -num-slots 16 -I 9", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          63               48.4615 %\nIncorrectly Classified Instances        67               51.5385 %\nKappa statistic                         -0.0308\nMean absolute error                      0.5022\nRoot mean squared error                  0.5118\nRelative absolute error                100.6135 %\nRoot relative squared error            102.4218 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.485    0.516    0.508      0.485    0.496      -0.031   0.480     0.507     LOW\n                 0.484    0.515    0.462      0.484    0.472      -0.031   0.478     0.465     HIGH\nWeighted Avg.    0.485    0.515    0.486      0.485    0.485      -0.031   0.479     0.487     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 33 35 |  a = LOW\n 32 30 |  b = HIGH\n\n"}, {"i": 272, "mesure": 0.478, "algo_params": " -C 0.45168083052171193 -M 115 -B -S -doNotMakeSplitPointActualValue", "bagging_params": " -O -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4993\nRoot mean squared error                  0.5   \nRelative absolute error                100.0353 %\nRoot relative squared error            100.0534 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.478     0.506     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.478     0.465     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.478     0.486     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 273, "mesure": 0.477, "algo_params": " -C 0.4781873689419808 -O -S", "bagging_params": " -P 21 -S 89 -num-slots 10 -I 19 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          61               46.9231 %\nIncorrectly Classified Instances        69               53.0769 %\nKappa statistic                         -0.0691\nMean absolute error                      0.5032\nRoot mean squared error                  0.5179\nRelative absolute error                100.7999 %\nRoot relative squared error            103.6411 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.544    0.613    0.493      0.544    0.517      -0.070   0.477     0.491     LOW\n                 0.387    0.456    0.436      0.387    0.410      -0.070   0.477     0.529     HIGH\nWeighted Avg.    0.469    0.538    0.466      0.469    0.466      -0.070   0.477     0.509     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 37 31 |  a = LOW\n 38 24 |  b = HIGH\n\n"}, {"i": 274, "mesure": 0.537, "algo_params": " -N 43 -R -Q 67 -O -S", "bagging_params": " -S 26 -I 8 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          71               54.6154 %\nIncorrectly Classified Instances        59               45.3846 %\nKappa statistic                          0.0779\nMean absolute error                      0.4926\nRoot mean squared error                  0.4971\nRelative absolute error                 98.6831 %\nRoot relative squared error             99.4896 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.706    0.629    0.552      0.706    0.619      0.082    0.537     0.548     LOW\n                 0.371    0.294    0.535      0.371    0.438      0.082    0.537     0.526     HIGH\nWeighted Avg.    0.546    0.469    0.544      0.546    0.533      0.082    0.537     0.537     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 48 20 |  a = LOW\n 39 23 |  b = HIGH\n\n"}, {"i": 275, "mesure": 0.503, "algo_params": " -C 0.05454256084968445 -M 86 -Q 69 -B -L -A -J", "bagging_params": " -P 23 -S 11", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                         -0.0127\nMean absolute error                      0.499 \nRoot mean squared error                  0.5   \nRelative absolute error                 99.9647 %\nRoot relative squared error            100.0639 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.794    0.806    0.519      0.794    0.628      -0.015   0.503     0.529     LOW\n                 0.194    0.206    0.462      0.194    0.273      -0.015   0.503     0.475     HIGH\nWeighted Avg.    0.508    0.520    0.492      0.508    0.459      -0.015   0.503     0.503     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 54 14 |  a = LOW\n 50 12 |  b = HIGH\n\n"}, {"i": 276, "mesure": 0.478, "algo_params": " -C 0.8003683281462705 -M 48 -Q 43 -L -doNotMakeSplitPointActualValue", "bagging_params": " -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4993\nRoot mean squared error                  0.5   \nRelative absolute error                100.0353 %\nRoot relative squared error            100.0534 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.478     0.506     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.478     0.465     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.478     0.486     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 277, "mesure": 0, "algo_params": " -U -B -C 0.7911609705670085 -B", "bagging_params": " -P 49 -S 73 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\n\nWeka exception: Doesn't make sense to change confidence for unpruned tree!\n\nGeneral options:\n\n-h or -help\n\tOutput help information.\n-synopsis or -info\n\tOutput synopsis for classifier (use in conjunction  with -h)\n-t <name of training file>\n\tSets training file.\n-T <name of test file>\n\tSets test file. If missing, a cross-validation will be performed\n\ton the training data.\n-c <class index>\n\tSets index of class attribute (default: last).\n-x <number of folds>\n\tSets number of folds for cross-validation (default: 10).\n-no-cv\n\tDo not perform any cross validation.\n-force-batch-training\n\tAlways train classifier in batch mode, never incrementally.\n-split-percentage <percentage>\n\tSets the percentage for the train/test set split, e.g., 66.\n-preserve-order\n\tPreserves the order in the percentage split.\n-s <random number seed>\n\tSets random number seed for cross-validation or percentage split\n\t(default: 1).\n-m <name of file with cost matrix>\n\tSets file with cost matrix.\n-toggle <comma-separated list of evaluation metric names>\n\tComma separated list of metric names to toggle in the output.\n\tAll metrics are output by default with the exception of 'Coverage' and 'Region size'.\n\tAvailable metrics:\n\tCorrect,Incorrect,Kappa,Total cost,Average cost,KB relative,KB information,\n\tCorrelation,Complexity 0,Complexity scheme,Complexity improvement,\n\tMAE,RMSE,RAE,RRSE,Coverage,Region size,TP rate,FP rate,Precision,Recall,\n\tF-measure,MCC,ROC area,PRC area\n-l <name of input file>\n\tSets model input file. In case the filename ends with '.xml',\n\ta PMML file is loaded or, if that fails, options are loaded\n\tfrom the XML file.\n-d <name of output file>\n\tSets model output file. In case the filename ends with '.xml',\n\tonly the options are saved to the XML file, not the model.\n-v\n\tOutputs no statistics for training data.\n-o\n\tOutputs statistics only, not the classifier.\n-output-models-for-training-splits\n\tOutput models for training splits if cross-validation or percentage-split evaluation is used.\n-do-not-output-per-class-statistics\n\tDo not output statistics for each class.\n-k\n\tOutputs information-theoretic statistics.\n-classifications \"weka.classifiers.evaluation.output.prediction.AbstractOutput + options\"\n\tUses the specified class for generating the classification output.\n\tE.g.: weka.classifiers.evaluation.output.prediction.PlainText\n-p range\n\tOutputs predictions for test instances (or the train instances if\n\tno test instances provided and -no-cv is used), along with the \n\tattributes in the specified range (and nothing else). \n\tUse '-p 0' if no attributes are desired.\n\tDeprecated: use \"-classifications ...\" instead.\n-distribution\n\tOutputs the distribution instead of only the prediction\n\tin conjunction with the '-p' option (only nominal classes).\n\tDeprecated: use \"-classifications ...\" instead.\n-r\n\tOnly outputs cumulative margin distribution.\n-xml filename | xml-string\n\tRetrieves the options from the XML-data instead of the command line.\n-threshold-file <file>\n\tThe file to save the threshold data to.\n\tThe format is determined by the extensions, e.g., '.arff' for ARFF \n\tformat or '.csv' for CSV.\n-threshold-label <label>\n\tThe class label to determine the threshold data for\n\t(default is the first label)\n-no-predictions\n\tTurns off the collection of predictions in order to conserve memory.\n\nOptions specific to weka.classifiers.meta.Bagging:\n\n-P\n\tSize of each bag, as a percentage of the\n\ttraining set size. (default 100)\n-O\n\tCalculate the out of bag error.\n-store-out-of-bag-predictions\n\tWhether to store out of bag predictions in internal evaluation object.\n-output-out-of-bag-complexity-statistics\n\tWhether to output complexity-based statistics when out-of-bag evaluation is performed.\n-represent-copies-using-weights\n\tRepresent copies of instances using weights rather than explicitly.\n-print\n\tPrint the individual classifiers in the output\n-S <num>\n\tRandom number seed.\n\t(default 1)\n-num-slots <num>\n\tNumber of execution slots.\n\t(default 1 - i.e. no parallelism)\n\t(use 0 to auto-detect number of cores)\n-I <num>\n\tNumber of iterations.\n\t(current value 10)\n-W <classifier name>\n\tFull name of base classifier.\n\t(default: weka.classifiers.trees.REPTree)\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\nOptions specific to classifier weka.classifiers.trees.J48:\n\n-U\n\tUse unpruned tree.\n-O\n\tDo not collapse tree.\n-C <pruning confidence>\n\tSet confidence threshold for pruning.\n\t(default 0.25)\n-M <minimum number of instances>\n\tSet minimum number of instances per leaf.\n\t(default 2)\n-R\n\tUse reduced error pruning.\n-N <number of folds>\n\tSet number of folds for reduced error\n\tpruning. One fold is used as pruning set.\n\t(default 3)\n-B\n\tUse binary splits only.\n-S\n\tDo not perform subtree raising.\n-L\n\tDo not clean up after the tree has been built.\n-A\n\tLaplace smoothing for predicted probabilities.\n-J\n\tDo not use MDL correction for info gain on numeric attributes.\n-Q <seed>\n\tSeed for random data shuffling (default 1).\n-doNotMakeSplitPointActualValue\n\tDo not make split point actual value.\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\n"}, {"i": 278, "mesure": 0.467, "algo_params": " -C 0.29065797249762204 -M 19 -O -A -J -doNotMakeSplitPointActualValue", "bagging_params": " -num-slots 17 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          60               46.1538 %\nIncorrectly Classified Instances        70               53.8462 %\nKappa statistic                         -0.0932\nMean absolute error                      0.501 \nRoot mean squared error                  0.5173\nRelative absolute error                100.3624 %\nRoot relative squared error            103.5166 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.618    0.710    0.488      0.618    0.545      -0.097   0.467     0.519     LOW\n                 0.290    0.382    0.409      0.290    0.340      -0.097   0.467     0.511     HIGH\nWeighted Avg.    0.462    0.554    0.451      0.462    0.447      -0.097   0.467     0.516     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 42 26 |  a = LOW\n 44 18 |  b = HIGH\n\n"}, {"i": 279, "mesure": 0.456, "algo_params": " -U -Q 64 -O", "bagging_params": " -P 88 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          67               51.5385 %\nIncorrectly Classified Instances        63               48.4615 %\nKappa statistic                          0.0252\nMean absolute error                      0.511 \nRoot mean squared error                  0.5571\nRelative absolute error                102.3797 %\nRoot relative squared error            111.4998 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.574    0.548    0.534      0.574    0.553      0.025    0.456     0.484     LOW\n                 0.452    0.426    0.491      0.452    0.471      0.025    0.456     0.491     HIGH\nWeighted Avg.    0.515    0.490    0.514      0.515    0.514      0.025    0.456     0.487     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 39 29 |  a = LOW\n 34 28 |  b = HIGH\n\n"}, {"i": 280, "mesure": 0, "algo_params": " -N 123 -R -Q 75 -O -B -S -J -doNotMakeSplitPointActualValue", "bagging_params": " -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tweka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tat weka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 281, "mesure": 0.402, "algo_params": " -C 0.4918764851862849 -M 39 -O -B -S -A", "bagging_params": " -O -S 128 -num-slots 27 -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          54               41.5385 %\nIncorrectly Classified Instances        76               58.4615 %\nKappa statistic                         -0.1869\nMean absolute error                      0.5094\nRoot mean squared error                  0.5168\nRelative absolute error                102.0417 %\nRoot relative squared error            103.4203 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.574    0.758    0.453      0.574    0.506      -0.195   0.402     0.464     LOW\n                 0.242    0.426    0.341      0.242    0.283      -0.195   0.402     0.457     HIGH\nWeighted Avg.    0.415    0.600    0.400      0.415    0.400      -0.195   0.402     0.461     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 39 29 |  a = LOW\n 47 15 |  b = HIGH\n\n"}, {"i": 282, "mesure": 0.497, "algo_params": " -C 0.8951906150540058 -M 103 -Q 29 -B -L -J", "bagging_params": " -P 14 -num-slots 20 -I 2 -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                          0     \nMean absolute error                      0.4995\nRoot mean squared error                  0.5071\nRelative absolute error                100.072  %\nRoot relative squared error            101.481  %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.500    0.500    0.523      0.500    0.511      0.000    0.497     0.524     LOW\n                 0.500    0.500    0.477      0.500    0.488      0.000    0.497     0.474     HIGH\nWeighted Avg.    0.500    0.500    0.501      0.500    0.500      0.000    0.497     0.500     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 34 34 |  a = LOW\n 31 31 |  b = HIGH\n\n"}, {"i": 283, "mesure": 0.47, "algo_params": " -C 0.5128204226121733 -Q 79 -A -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 57 -O -S 97 -num-slots 10 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          63               48.4615 %\nIncorrectly Classified Instances        67               51.5385 %\nKappa statistic                         -0.0396\nMean absolute error                      0.5066\nRoot mean squared error                  0.5308\nRelative absolute error                101.4858 %\nRoot relative squared error            106.2341 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.574    0.613    0.506      0.574    0.538      -0.040   0.470     0.502     LOW\n                 0.387    0.426    0.453      0.387    0.417      -0.040   0.470     0.480     HIGH\nWeighted Avg.    0.485    0.524    0.481      0.485    0.480      -0.040   0.470     0.492     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 39 29 |  a = LOW\n 38 24 |  b = HIGH\n\n"}, {"i": 284, "mesure": 0.566, "algo_params": " -C 0.9338087261553387 -Q 111 -A -J -doNotMakeSplitPointActualValue", "bagging_params": " -S 82 -num-slots 30 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          72               55.3846 %\nIncorrectly Classified Instances        58               44.6154 %\nKappa statistic                          0.0968\nMean absolute error                      0.4757\nRoot mean squared error                  0.5176\nRelative absolute error                 95.3075 %\nRoot relative squared error            103.5774 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.676    0.581    0.561      0.676    0.613      0.099    0.566     0.551     LOW\n                 0.419    0.324    0.542      0.419    0.473      0.099    0.566     0.584     HIGH\nWeighted Avg.    0.554    0.458    0.552      0.554    0.546      0.099    0.566     0.567     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 46 22 |  a = LOW\n 36 26 |  b = HIGH\n\n"}, {"i": 285, "mesure": 0.481, "algo_params": " -C 0.42908026702060276 -M 102 -Q 120 -O -S -A -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 76 -I 29 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          67               51.5385 %\nIncorrectly Classified Instances        63               48.4615 %\nKappa statistic                         -0.0064\nMean absolute error                      0.4994\nRoot mean squared error                  0.4999\nRelative absolute error                100.0438 %\nRoot relative squared error            100.0337 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.897    0.903    0.521      0.897    0.659      -0.010   0.481     0.508     LOW\n                 0.097    0.103    0.462      0.097    0.160      -0.010   0.481     0.466     HIGH\nWeighted Avg.    0.515    0.522    0.493      0.515    0.421      -0.010   0.481     0.488     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 61  7 |  a = LOW\n 56  6 |  b = HIGH\n\n"}, {"i": 286, "mesure": 0.488, "algo_params": " -N 47 -R -M 119 -O -B -S -A -doNotMakeSplitPointActualValue", "bagging_params": " -P 71 -S 54 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4991\nRoot mean squared error                  0.4999\nRelative absolute error                 99.9904 %\nRoot relative squared error            100.0528 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.488     0.518     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.488     0.468     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.488     0.494     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 287, "mesure": 0.542, "algo_params": " -C 0.4652754579961046 -B -S -L -doNotMakeSplitPointActualValue", "bagging_params": " -P 91 -O -S 76 -I 17 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                          0.0091\nMean absolute error                      0.4834\nRoot mean squared error                  0.521 \nRelative absolute error                 96.8475 %\nRoot relative squared error            104.2679 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.574    0.565    0.527      0.574    0.549      0.009    0.542     0.572     LOW\n                 0.435    0.426    0.482      0.435    0.458      0.009    0.542     0.548     HIGH\nWeighted Avg.    0.508    0.499    0.506      0.508    0.506      0.009    0.542     0.561     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 39 29 |  a = LOW\n 35 27 |  b = HIGH\n\n"}, {"i": 288, "mesure": 0.464, "algo_params": " -C 0.5256818783043911 -Q 11 -B -J -doNotMakeSplitPointActualValue", "bagging_params": " -num-slots 19", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          57               43.8462 %\nIncorrectly Classified Instances        73               56.1538 %\nKappa statistic                         -0.1311\nMean absolute error                      0.5123\nRoot mean squared error                  0.5651\nRelative absolute error                102.6317 %\nRoot relative squared error            113.0923 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.515    0.645    0.467      0.515    0.490      -0.132   0.464     0.499     LOW\n                 0.355    0.485    0.400      0.355    0.376      -0.132   0.464     0.490     HIGH\nWeighted Avg.    0.438    0.569    0.435      0.438    0.435      -0.132   0.464     0.494     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 35 33 |  a = LOW\n 40 22 |  b = HIGH\n\n"}, {"i": 289, "mesure": 0, "algo_params": " -U -O -C 0.16969663228861442 -M 43 -Q 10 -O", "bagging_params": " -P 13 -S 48 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\n\nWeka exception: Doesn't make sense to change confidence for unpruned tree!\n\nGeneral options:\n\n-h or -help\n\tOutput help information.\n-synopsis or -info\n\tOutput synopsis for classifier (use in conjunction  with -h)\n-t <name of training file>\n\tSets training file.\n-T <name of test file>\n\tSets test file. If missing, a cross-validation will be performed\n\ton the training data.\n-c <class index>\n\tSets index of class attribute (default: last).\n-x <number of folds>\n\tSets number of folds for cross-validation (default: 10).\n-no-cv\n\tDo not perform any cross validation.\n-force-batch-training\n\tAlways train classifier in batch mode, never incrementally.\n-split-percentage <percentage>\n\tSets the percentage for the train/test set split, e.g., 66.\n-preserve-order\n\tPreserves the order in the percentage split.\n-s <random number seed>\n\tSets random number seed for cross-validation or percentage split\n\t(default: 1).\n-m <name of file with cost matrix>\n\tSets file with cost matrix.\n-toggle <comma-separated list of evaluation metric names>\n\tComma separated list of metric names to toggle in the output.\n\tAll metrics are output by default with the exception of 'Coverage' and 'Region size'.\n\tAvailable metrics:\n\tCorrect,Incorrect,Kappa,Total cost,Average cost,KB relative,KB information,\n\tCorrelation,Complexity 0,Complexity scheme,Complexity improvement,\n\tMAE,RMSE,RAE,RRSE,Coverage,Region size,TP rate,FP rate,Precision,Recall,\n\tF-measure,MCC,ROC area,PRC area\n-l <name of input file>\n\tSets model input file. In case the filename ends with '.xml',\n\ta PMML file is loaded or, if that fails, options are loaded\n\tfrom the XML file.\n-d <name of output file>\n\tSets model output file. In case the filename ends with '.xml',\n\tonly the options are saved to the XML file, not the model.\n-v\n\tOutputs no statistics for training data.\n-o\n\tOutputs statistics only, not the classifier.\n-output-models-for-training-splits\n\tOutput models for training splits if cross-validation or percentage-split evaluation is used.\n-do-not-output-per-class-statistics\n\tDo not output statistics for each class.\n-k\n\tOutputs information-theoretic statistics.\n-classifications \"weka.classifiers.evaluation.output.prediction.AbstractOutput + options\"\n\tUses the specified class for generating the classification output.\n\tE.g.: weka.classifiers.evaluation.output.prediction.PlainText\n-p range\n\tOutputs predictions for test instances (or the train instances if\n\tno test instances provided and -no-cv is used), along with the \n\tattributes in the specified range (and nothing else). \n\tUse '-p 0' if no attributes are desired.\n\tDeprecated: use \"-classifications ...\" instead.\n-distribution\n\tOutputs the distribution instead of only the prediction\n\tin conjunction with the '-p' option (only nominal classes).\n\tDeprecated: use \"-classifications ...\" instead.\n-r\n\tOnly outputs cumulative margin distribution.\n-xml filename | xml-string\n\tRetrieves the options from the XML-data instead of the command line.\n-threshold-file <file>\n\tThe file to save the threshold data to.\n\tThe format is determined by the extensions, e.g., '.arff' for ARFF \n\tformat or '.csv' for CSV.\n-threshold-label <label>\n\tThe class label to determine the threshold data for\n\t(default is the first label)\n-no-predictions\n\tTurns off the collection of predictions in order to conserve memory.\n\nOptions specific to weka.classifiers.meta.Bagging:\n\n-P\n\tSize of each bag, as a percentage of the\n\ttraining set size. (default 100)\n-O\n\tCalculate the out of bag error.\n-store-out-of-bag-predictions\n\tWhether to store out of bag predictions in internal evaluation object.\n-output-out-of-bag-complexity-statistics\n\tWhether to output complexity-based statistics when out-of-bag evaluation is performed.\n-represent-copies-using-weights\n\tRepresent copies of instances using weights rather than explicitly.\n-print\n\tPrint the individual classifiers in the output\n-S <num>\n\tRandom number seed.\n\t(default 1)\n-num-slots <num>\n\tNumber of execution slots.\n\t(default 1 - i.e. no parallelism)\n\t(use 0 to auto-detect number of cores)\n-I <num>\n\tNumber of iterations.\n\t(current value 10)\n-W <classifier name>\n\tFull name of base classifier.\n\t(default: weka.classifiers.trees.REPTree)\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\nOptions specific to classifier weka.classifiers.trees.J48:\n\n-U\n\tUse unpruned tree.\n-O\n\tDo not collapse tree.\n-C <pruning confidence>\n\tSet confidence threshold for pruning.\n\t(default 0.25)\n-M <minimum number of instances>\n\tSet minimum number of instances per leaf.\n\t(default 2)\n-R\n\tUse reduced error pruning.\n-N <number of folds>\n\tSet number of folds for reduced error\n\tpruning. One fold is used as pruning set.\n\t(default 3)\n-B\n\tUse binary splits only.\n-S\n\tDo not perform subtree raising.\n-L\n\tDo not clean up after the tree has been built.\n-A\n\tLaplace smoothing for predicted probabilities.\n-J\n\tDo not use MDL correction for info gain on numeric attributes.\n-Q <seed>\n\tSeed for random data shuffling (default 1).\n-doNotMakeSplitPointActualValue\n\tDo not make split point actual value.\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\n"}, {"i": 290, "mesure": 0.462, "algo_params": " -C 0.8706871306844499 -Q 60 -O -doNotMakeSplitPointActualValue", "bagging_params": " -O -S 86 -num-slots 14 -I 18", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          54               41.5385 %\nIncorrectly Classified Instances        76               58.4615 %\nKappa statistic                         -0.1784\nMean absolute error                      0.5017\nRoot mean squared error                  0.5315\nRelative absolute error                100.5082 %\nRoot relative squared error            106.3656 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.500    0.677    0.447      0.500    0.472      -0.180   0.462     0.535     LOW\n                 0.323    0.500    0.370      0.323    0.345      -0.180   0.462     0.518     HIGH\nWeighted Avg.    0.415    0.593    0.411      0.415    0.411      -0.180   0.462     0.527     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 34 34 |  a = LOW\n 42 20 |  b = HIGH\n\n"}, {"i": 291, "mesure": 0, "algo_params": " -N 106 -R -B -S -A -J", "bagging_params": " -O -num-slots 16 -I 17 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.NullPointerException\n\tweka.classifiers.trees.j48.ClassifierTree.getProbsLaplace(ClassifierTree.java:646)\n\tweka.classifiers.trees.j48.ClassifierTree.distributionForInstance(ClassifierTree.java:286)\n\tweka.classifiers.trees.J48.distributionForInstance(J48.java:327)\n\tweka.classifiers.meta.Bagging.buildClassifier(Bagging.java:751)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.classifiers.trees.j48.ClassifierTree.getProbsLaplace(ClassifierTree.java:646)\n\tat weka.classifiers.trees.j48.ClassifierTree.distributionForInstance(ClassifierTree.java:286)\n\tat weka.classifiers.trees.J48.distributionForInstance(J48.java:327)\n\tat weka.classifiers.meta.Bagging.buildClassifier(Bagging.java:751)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 292, "mesure": 0.5, "algo_params": " -U -M 76 -O", "bagging_params": " -P 9 -O -num-slots 30 -I 9", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                          0.0062\nMean absolute error                      0.4996\nRoot mean squared error                  0.5025\nRelative absolute error                100.0827 %\nRoot relative squared error            100.5715 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.603    0.597    0.526      0.603    0.562      0.006    0.500     0.525     LOW\n                 0.403    0.397    0.481      0.403    0.439      0.006    0.500     0.475     HIGH\nWeighted Avg.    0.508    0.502    0.504      0.508    0.503      0.006    0.500     0.501     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 41 27 |  a = LOW\n 37 25 |  b = HIGH\n\n"}, {"i": 293, "mesure": 0.486, "algo_params": " -C 0.30840731386468323 -O -S -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 77 -num-slots 21 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          63               48.4615 %\nIncorrectly Classified Instances        67               51.5385 %\nKappa statistic                         -0.0411\nMean absolute error                      0.4992\nRoot mean squared error                  0.542 \nRelative absolute error                100.0016 %\nRoot relative squared error            108.4585 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.588    0.629    0.506      0.588    0.544      -0.042   0.486     0.519     LOW\n                 0.371    0.412    0.451      0.371    0.407      -0.042   0.486     0.489     HIGH\nWeighted Avg.    0.485    0.525    0.480      0.485    0.479      -0.042   0.486     0.505     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 40 28 |  a = LOW\n 39 23 |  b = HIGH\n\n"}, {"i": 294, "mesure": 0.534, "algo_params": " -N 45 -R -Q 31 -doNotMakeSplitPointActualValue", "bagging_params": " -O -I 27 -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          67               51.5385 %\nIncorrectly Classified Instances        63               48.4615 %\nKappa statistic                          0.014 \nMean absolute error                      0.4879\nRoot mean squared error                  0.4989\nRelative absolute error                 97.7422 %\nRoot relative squared error             99.837  %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.691    0.677    0.528      0.691    0.599      0.015    0.534     0.542     LOW\n                 0.323    0.309    0.488      0.323    0.388      0.015    0.534     0.574     HIGH\nWeighted Avg.    0.515    0.502    0.509      0.515    0.498      0.015    0.534     0.558     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 47 21 |  a = LOW\n 42 20 |  b = HIGH\n\n"}, {"i": 295, "mesure": 0, "algo_params": " -N 102 -R -M 94 -O -S -J", "bagging_params": " -P 67 -S 10 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tweka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tat weka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 296, "mesure": 0.529, "algo_params": " -N 10 -R -O -B -L -J", "bagging_params": " -O -num-slots 13 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          67               51.5385 %\nIncorrectly Classified Instances        63               48.4615 %\nKappa statistic                          0.0266\nMean absolute error                      0.4912\nRoot mean squared error                  0.5062\nRelative absolute error                 98.4052 %\nRoot relative squared error            101.3056 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.559    0.532    0.535      0.559    0.547      0.027    0.529     0.550     LOW\n                 0.468    0.441    0.492      0.468    0.479      0.027    0.529     0.532     HIGH\nWeighted Avg.    0.515    0.489    0.514      0.515    0.515      0.027    0.529     0.541     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 38 30 |  a = LOW\n 33 29 |  b = HIGH\n\n"}, {"i": 297, "mesure": 0.497, "algo_params": " -C 0.36710162989282313 -M 121 -Q 99 -O -L -J -doNotMakeSplitPointActualValue", "bagging_params": " -O -S 76 -I 6 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                         -0.0127\nMean absolute error                      0.4997\nRoot mean squared error                  0.5003\nRelative absolute error                100.1091 %\nRoot relative squared error            100.1247 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.794    0.806    0.519      0.794    0.628      -0.015   0.497     0.521     LOW\n                 0.194    0.206    0.462      0.194    0.273      -0.015   0.497     0.474     HIGH\nWeighted Avg.    0.508    0.520    0.492      0.508    0.459      -0.015   0.497     0.499     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 54 14 |  a = LOW\n 50 12 |  b = HIGH\n\n"}, {"i": 298, "mesure": 0.485, "algo_params": " -N 37 -R -M 93 -B -L -A -doNotMakeSplitPointActualValue", "bagging_params": " -P 95 -S 31 -I 3 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          64               49.2308 %\nIncorrectly Classified Instances        66               50.7692 %\nKappa statistic                         -0.0248\nMean absolute error                      0.5001\nRoot mean squared error                  0.5007\nRelative absolute error                100.1921 %\nRoot relative squared error            100.1945 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.588    0.613    0.513      0.588    0.548      -0.025   0.485     0.516     LOW\n                 0.387    0.412    0.462      0.387    0.421      -0.025   0.485     0.467     HIGH\nWeighted Avg.    0.492    0.517    0.488      0.492    0.487      -0.025   0.485     0.493     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 40 28 |  a = LOW\n 38 24 |  b = HIGH\n\n"}, {"i": 299, "mesure": 0, "algo_params": " -U -B -C 0.7783079004185084 -doNotMakeSplitPointActualValue", "bagging_params": " -O -S 54 -num-slots 20 -I 4 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\n\nWeka exception: Doesn't make sense to change confidence for unpruned tree!\n\nGeneral options:\n\n-h or -help\n\tOutput help information.\n-synopsis or -info\n\tOutput synopsis for classifier (use in conjunction  with -h)\n-t <name of training file>\n\tSets training file.\n-T <name of test file>\n\tSets test file. If missing, a cross-validation will be performed\n\ton the training data.\n-c <class index>\n\tSets index of class attribute (default: last).\n-x <number of folds>\n\tSets number of folds for cross-validation (default: 10).\n-no-cv\n\tDo not perform any cross validation.\n-force-batch-training\n\tAlways train classifier in batch mode, never incrementally.\n-split-percentage <percentage>\n\tSets the percentage for the train/test set split, e.g., 66.\n-preserve-order\n\tPreserves the order in the percentage split.\n-s <random number seed>\n\tSets random number seed for cross-validation or percentage split\n\t(default: 1).\n-m <name of file with cost matrix>\n\tSets file with cost matrix.\n-toggle <comma-separated list of evaluation metric names>\n\tComma separated list of metric names to toggle in the output.\n\tAll metrics are output by default with the exception of 'Coverage' and 'Region size'.\n\tAvailable metrics:\n\tCorrect,Incorrect,Kappa,Total cost,Average cost,KB relative,KB information,\n\tCorrelation,Complexity 0,Complexity scheme,Complexity improvement,\n\tMAE,RMSE,RAE,RRSE,Coverage,Region size,TP rate,FP rate,Precision,Recall,\n\tF-measure,MCC,ROC area,PRC area\n-l <name of input file>\n\tSets model input file. In case the filename ends with '.xml',\n\ta PMML file is loaded or, if that fails, options are loaded\n\tfrom the XML file.\n-d <name of output file>\n\tSets model output file. In case the filename ends with '.xml',\n\tonly the options are saved to the XML file, not the model.\n-v\n\tOutputs no statistics for training data.\n-o\n\tOutputs statistics only, not the classifier.\n-output-models-for-training-splits\n\tOutput models for training splits if cross-validation or percentage-split evaluation is used.\n-do-not-output-per-class-statistics\n\tDo not output statistics for each class.\n-k\n\tOutputs information-theoretic statistics.\n-classifications \"weka.classifiers.evaluation.output.prediction.AbstractOutput + options\"\n\tUses the specified class for generating the classification output.\n\tE.g.: weka.classifiers.evaluation.output.prediction.PlainText\n-p range\n\tOutputs predictions for test instances (or the train instances if\n\tno test instances provided and -no-cv is used), along with the \n\tattributes in the specified range (and nothing else). \n\tUse '-p 0' if no attributes are desired.\n\tDeprecated: use \"-classifications ...\" instead.\n-distribution\n\tOutputs the distribution instead of only the prediction\n\tin conjunction with the '-p' option (only nominal classes).\n\tDeprecated: use \"-classifications ...\" instead.\n-r\n\tOnly outputs cumulative margin distribution.\n-xml filename | xml-string\n\tRetrieves the options from the XML-data instead of the command line.\n-threshold-file <file>\n\tThe file to save the threshold data to.\n\tThe format is determined by the extensions, e.g., '.arff' for ARFF \n\tformat or '.csv' for CSV.\n-threshold-label <label>\n\tThe class label to determine the threshold data for\n\t(default is the first label)\n-no-predictions\n\tTurns off the collection of predictions in order to conserve memory.\n\nOptions specific to weka.classifiers.meta.Bagging:\n\n-P\n\tSize of each bag, as a percentage of the\n\ttraining set size. (default 100)\n-O\n\tCalculate the out of bag error.\n-store-out-of-bag-predictions\n\tWhether to store out of bag predictions in internal evaluation object.\n-output-out-of-bag-complexity-statistics\n\tWhether to output complexity-based statistics when out-of-bag evaluation is performed.\n-represent-copies-using-weights\n\tRepresent copies of instances using weights rather than explicitly.\n-print\n\tPrint the individual classifiers in the output\n-S <num>\n\tRandom number seed.\n\t(default 1)\n-num-slots <num>\n\tNumber of execution slots.\n\t(default 1 - i.e. no parallelism)\n\t(use 0 to auto-detect number of cores)\n-I <num>\n\tNumber of iterations.\n\t(current value 4)\n-W <classifier name>\n\tFull name of base classifier.\n\t(default: weka.classifiers.trees.REPTree)\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\nOptions specific to classifier weka.classifiers.trees.J48:\n\n-U\n\tUse unpruned tree.\n-O\n\tDo not collapse tree.\n-C <pruning confidence>\n\tSet confidence threshold for pruning.\n\t(default 0.25)\n-M <minimum number of instances>\n\tSet minimum number of instances per leaf.\n\t(default 2)\n-R\n\tUse reduced error pruning.\n-N <number of folds>\n\tSet number of folds for reduced error\n\tpruning. One fold is used as pruning set.\n\t(default 3)\n-B\n\tUse binary splits only.\n-S\n\tDo not perform subtree raising.\n-L\n\tDo not clean up after the tree has been built.\n-A\n\tLaplace smoothing for predicted probabilities.\n-J\n\tDo not use MDL correction for info gain on numeric attributes.\n-Q <seed>\n\tSeed for random data shuffling (default 1).\n-doNotMakeSplitPointActualValue\n\tDo not make split point actual value.\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\n"}, {"i": 300, "mesure": 0.497, "algo_params": " -N 65 -R -M 125 -B -S -A", "bagging_params": " -num-slots 15 -I 11", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4993\nRoot mean squared error                  0.4998\nRelative absolute error                100.0188 %\nRoot relative squared error            100.0142 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.497     0.521     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.497     0.474     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.497     0.499     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 301, "mesure": 0.546, "algo_params": " -C 0.26102518663252483 -Q 40 -O -A -J -doNotMakeSplitPointActualValue", "bagging_params": " -O -S 101 -num-slots 25 -I 17 -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0.0373\nMean absolute error                      0.4837\nRoot mean squared error                  0.5173\nRelative absolute error                 96.9036 %\nRoot relative squared error            103.5175 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.618    0.581    0.538      0.618    0.575      0.038    0.546     0.560     LOW\n                 0.419    0.382    0.500      0.419    0.456      0.038    0.546     0.556     HIGH\nWeighted Avg.    0.523    0.486    0.520      0.523    0.518      0.038    0.546     0.558     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 42 26 |  a = LOW\n 36 26 |  b = HIGH\n\n"}, {"i": 302, "mesure": 0, "algo_params": " -U -O -doNotMakeSplitPointActualValue -C 0.06884677611119694 -Q 9 -O -B -doNotMakeSplitPointActualValue", "bagging_params": " -P 65 -S 118 -I 17 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\n\nWeka exception: Doesn't make sense to change confidence for unpruned tree!\n\nGeneral options:\n\n-h or -help\n\tOutput help information.\n-synopsis or -info\n\tOutput synopsis for classifier (use in conjunction  with -h)\n-t <name of training file>\n\tSets training file.\n-T <name of test file>\n\tSets test file. If missing, a cross-validation will be performed\n\ton the training data.\n-c <class index>\n\tSets index of class attribute (default: last).\n-x <number of folds>\n\tSets number of folds for cross-validation (default: 10).\n-no-cv\n\tDo not perform any cross validation.\n-force-batch-training\n\tAlways train classifier in batch mode, never incrementally.\n-split-percentage <percentage>\n\tSets the percentage for the train/test set split, e.g., 66.\n-preserve-order\n\tPreserves the order in the percentage split.\n-s <random number seed>\n\tSets random number seed for cross-validation or percentage split\n\t(default: 1).\n-m <name of file with cost matrix>\n\tSets file with cost matrix.\n-toggle <comma-separated list of evaluation metric names>\n\tComma separated list of metric names to toggle in the output.\n\tAll metrics are output by default with the exception of 'Coverage' and 'Region size'.\n\tAvailable metrics:\n\tCorrect,Incorrect,Kappa,Total cost,Average cost,KB relative,KB information,\n\tCorrelation,Complexity 0,Complexity scheme,Complexity improvement,\n\tMAE,RMSE,RAE,RRSE,Coverage,Region size,TP rate,FP rate,Precision,Recall,\n\tF-measure,MCC,ROC area,PRC area\n-l <name of input file>\n\tSets model input file. In case the filename ends with '.xml',\n\ta PMML file is loaded or, if that fails, options are loaded\n\tfrom the XML file.\n-d <name of output file>\n\tSets model output file. In case the filename ends with '.xml',\n\tonly the options are saved to the XML file, not the model.\n-v\n\tOutputs no statistics for training data.\n-o\n\tOutputs statistics only, not the classifier.\n-output-models-for-training-splits\n\tOutput models for training splits if cross-validation or percentage-split evaluation is used.\n-do-not-output-per-class-statistics\n\tDo not output statistics for each class.\n-k\n\tOutputs information-theoretic statistics.\n-classifications \"weka.classifiers.evaluation.output.prediction.AbstractOutput + options\"\n\tUses the specified class for generating the classification output.\n\tE.g.: weka.classifiers.evaluation.output.prediction.PlainText\n-p range\n\tOutputs predictions for test instances (or the train instances if\n\tno test instances provided and -no-cv is used), along with the \n\tattributes in the specified range (and nothing else). \n\tUse '-p 0' if no attributes are desired.\n\tDeprecated: use \"-classifications ...\" instead.\n-distribution\n\tOutputs the distribution instead of only the prediction\n\tin conjunction with the '-p' option (only nominal classes).\n\tDeprecated: use \"-classifications ...\" instead.\n-r\n\tOnly outputs cumulative margin distribution.\n-xml filename | xml-string\n\tRetrieves the options from the XML-data instead of the command line.\n-threshold-file <file>\n\tThe file to save the threshold data to.\n\tThe format is determined by the extensions, e.g., '.arff' for ARFF \n\tformat or '.csv' for CSV.\n-threshold-label <label>\n\tThe class label to determine the threshold data for\n\t(default is the first label)\n-no-predictions\n\tTurns off the collection of predictions in order to conserve memory.\n\nOptions specific to weka.classifiers.meta.Bagging:\n\n-P\n\tSize of each bag, as a percentage of the\n\ttraining set size. (default 100)\n-O\n\tCalculate the out of bag error.\n-store-out-of-bag-predictions\n\tWhether to store out of bag predictions in internal evaluation object.\n-output-out-of-bag-complexity-statistics\n\tWhether to output complexity-based statistics when out-of-bag evaluation is performed.\n-represent-copies-using-weights\n\tRepresent copies of instances using weights rather than explicitly.\n-print\n\tPrint the individual classifiers in the output\n-S <num>\n\tRandom number seed.\n\t(default 1)\n-num-slots <num>\n\tNumber of execution slots.\n\t(default 1 - i.e. no parallelism)\n\t(use 0 to auto-detect number of cores)\n-I <num>\n\tNumber of iterations.\n\t(current value 17)\n-W <classifier name>\n\tFull name of base classifier.\n\t(default: weka.classifiers.trees.REPTree)\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\nOptions specific to classifier weka.classifiers.trees.J48:\n\n-U\n\tUse unpruned tree.\n-O\n\tDo not collapse tree.\n-C <pruning confidence>\n\tSet confidence threshold for pruning.\n\t(default 0.25)\n-M <minimum number of instances>\n\tSet minimum number of instances per leaf.\n\t(default 2)\n-R\n\tUse reduced error pruning.\n-N <number of folds>\n\tSet number of folds for reduced error\n\tpruning. One fold is used as pruning set.\n\t(default 3)\n-B\n\tUse binary splits only.\n-S\n\tDo not perform subtree raising.\n-L\n\tDo not clean up after the tree has been built.\n-A\n\tLaplace smoothing for predicted probabilities.\n-J\n\tDo not use MDL correction for info gain on numeric attributes.\n-Q <seed>\n\tSeed for random data shuffling (default 1).\n-doNotMakeSplitPointActualValue\n\tDo not make split point actual value.\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\n"}, {"i": 303, "mesure": 0.509, "algo_params": " -N 11 -R -M 10 -Q 26 -O -S -L -J -doNotMakeSplitPointActualValue", "bagging_params": " -S 87 -I 28 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0.0233\nMean absolute error                      0.4927\nRoot mean squared error                  0.4997\nRelative absolute error                 98.6999 %\nRoot relative squared error            100.0021 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.765    0.742    0.531      0.765    0.627      0.026    0.509     0.538     LOW\n                 0.258    0.235    0.500      0.258    0.340      0.026    0.509     0.548     HIGH\nWeighted Avg.    0.523    0.500    0.516      0.523    0.490      0.026    0.509     0.543     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 52 16 |  a = LOW\n 46 16 |  b = HIGH\n\n"}, {"i": 304, "mesure": 0.541, "algo_params": " -C 0.2555630558470777 -Q 80 -O -L -J", "bagging_params": " -O -S 33 -num-slots 1 -I 13", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          69               53.0769 %\nIncorrectly Classified Instances        61               46.9231 %\nKappa statistic                          0.0589\nMean absolute error                      0.4826\nRoot mean squared error                  0.5252\nRelative absolute error                 96.6907 %\nRoot relative squared error            105.1071 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.559    0.500    0.551      0.559    0.555      0.059    0.541     0.568     LOW\n                 0.500    0.441    0.508      0.500    0.504      0.059    0.541     0.538     HIGH\nWeighted Avg.    0.531    0.472    0.530      0.531    0.531      0.059    0.541     0.554     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 38 30 |  a = LOW\n 31 31 |  b = HIGH\n\n"}, {"i": 305, "mesure": 0, "algo_params": " -U -B -C 0.16001299040022376 -M 81 -O -doNotMakeSplitPointActualValue", "bagging_params": " -num-slots 14 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\n\nWeka exception: Doesn't make sense to change confidence for unpruned tree!\n\nGeneral options:\n\n-h or -help\n\tOutput help information.\n-synopsis or -info\n\tOutput synopsis for classifier (use in conjunction  with -h)\n-t <name of training file>\n\tSets training file.\n-T <name of test file>\n\tSets test file. If missing, a cross-validation will be performed\n\ton the training data.\n-c <class index>\n\tSets index of class attribute (default: last).\n-x <number of folds>\n\tSets number of folds for cross-validation (default: 10).\n-no-cv\n\tDo not perform any cross validation.\n-force-batch-training\n\tAlways train classifier in batch mode, never incrementally.\n-split-percentage <percentage>\n\tSets the percentage for the train/test set split, e.g., 66.\n-preserve-order\n\tPreserves the order in the percentage split.\n-s <random number seed>\n\tSets random number seed for cross-validation or percentage split\n\t(default: 1).\n-m <name of file with cost matrix>\n\tSets file with cost matrix.\n-toggle <comma-separated list of evaluation metric names>\n\tComma separated list of metric names to toggle in the output.\n\tAll metrics are output by default with the exception of 'Coverage' and 'Region size'.\n\tAvailable metrics:\n\tCorrect,Incorrect,Kappa,Total cost,Average cost,KB relative,KB information,\n\tCorrelation,Complexity 0,Complexity scheme,Complexity improvement,\n\tMAE,RMSE,RAE,RRSE,Coverage,Region size,TP rate,FP rate,Precision,Recall,\n\tF-measure,MCC,ROC area,PRC area\n-l <name of input file>\n\tSets model input file. In case the filename ends with '.xml',\n\ta PMML file is loaded or, if that fails, options are loaded\n\tfrom the XML file.\n-d <name of output file>\n\tSets model output file. In case the filename ends with '.xml',\n\tonly the options are saved to the XML file, not the model.\n-v\n\tOutputs no statistics for training data.\n-o\n\tOutputs statistics only, not the classifier.\n-output-models-for-training-splits\n\tOutput models for training splits if cross-validation or percentage-split evaluation is used.\n-do-not-output-per-class-statistics\n\tDo not output statistics for each class.\n-k\n\tOutputs information-theoretic statistics.\n-classifications \"weka.classifiers.evaluation.output.prediction.AbstractOutput + options\"\n\tUses the specified class for generating the classification output.\n\tE.g.: weka.classifiers.evaluation.output.prediction.PlainText\n-p range\n\tOutputs predictions for test instances (or the train instances if\n\tno test instances provided and -no-cv is used), along with the \n\tattributes in the specified range (and nothing else). \n\tUse '-p 0' if no attributes are desired.\n\tDeprecated: use \"-classifications ...\" instead.\n-distribution\n\tOutputs the distribution instead of only the prediction\n\tin conjunction with the '-p' option (only nominal classes).\n\tDeprecated: use \"-classifications ...\" instead.\n-r\n\tOnly outputs cumulative margin distribution.\n-xml filename | xml-string\n\tRetrieves the options from the XML-data instead of the command line.\n-threshold-file <file>\n\tThe file to save the threshold data to.\n\tThe format is determined by the extensions, e.g., '.arff' for ARFF \n\tformat or '.csv' for CSV.\n-threshold-label <label>\n\tThe class label to determine the threshold data for\n\t(default is the first label)\n-no-predictions\n\tTurns off the collection of predictions in order to conserve memory.\n\nOptions specific to weka.classifiers.meta.Bagging:\n\n-P\n\tSize of each bag, as a percentage of the\n\ttraining set size. (default 100)\n-O\n\tCalculate the out of bag error.\n-store-out-of-bag-predictions\n\tWhether to store out of bag predictions in internal evaluation object.\n-output-out-of-bag-complexity-statistics\n\tWhether to output complexity-based statistics when out-of-bag evaluation is performed.\n-represent-copies-using-weights\n\tRepresent copies of instances using weights rather than explicitly.\n-print\n\tPrint the individual classifiers in the output\n-S <num>\n\tRandom number seed.\n\t(default 1)\n-num-slots <num>\n\tNumber of execution slots.\n\t(default 1 - i.e. no parallelism)\n\t(use 0 to auto-detect number of cores)\n-I <num>\n\tNumber of iterations.\n\t(current value 10)\n-W <classifier name>\n\tFull name of base classifier.\n\t(default: weka.classifiers.trees.REPTree)\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\nOptions specific to classifier weka.classifiers.trees.J48:\n\n-U\n\tUse unpruned tree.\n-O\n\tDo not collapse tree.\n-C <pruning confidence>\n\tSet confidence threshold for pruning.\n\t(default 0.25)\n-M <minimum number of instances>\n\tSet minimum number of instances per leaf.\n\t(default 2)\n-R\n\tUse reduced error pruning.\n-N <number of folds>\n\tSet number of folds for reduced error\n\tpruning. One fold is used as pruning set.\n\t(default 3)\n-B\n\tUse binary splits only.\n-S\n\tDo not perform subtree raising.\n-L\n\tDo not clean up after the tree has been built.\n-A\n\tLaplace smoothing for predicted probabilities.\n-J\n\tDo not use MDL correction for info gain on numeric attributes.\n-Q <seed>\n\tSeed for random data shuffling (default 1).\n-doNotMakeSplitPointActualValue\n\tDo not make split point actual value.\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\n"}, {"i": 306, "mesure": 0.436, "algo_params": " -C 0.45962394803463047 -M 25 -Q 122 -L -A -J", "bagging_params": " -O -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          58               44.6154 %\nIncorrectly Classified Instances        72               55.3846 %\nKappa statistic                         -0.1196\nMean absolute error                      0.5092\nRoot mean squared error                  0.5229\nRelative absolute error                102.005  %\nRoot relative squared error            104.6492 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.559    0.677    0.475      0.559    0.514      -0.122   0.436     0.476     LOW\n                 0.323    0.441    0.400      0.323    0.357      -0.122   0.436     0.509     HIGH\nWeighted Avg.    0.446    0.565    0.439      0.446    0.439      -0.122   0.436     0.492     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 38 30 |  a = LOW\n 42 20 |  b = HIGH\n\n"}, {"i": 307, "mesure": 0.488, "algo_params": " -C 0.03377749223608617 -O -B -S -L -A -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 95 -num-slots 7 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                         -0.0086\nMean absolute error                      0.4998\nRoot mean squared error                  0.5417\nRelative absolute error                100.1352 %\nRoot relative squared error            108.4162 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.588    0.597    0.519      0.588    0.552      -0.009   0.488     0.504     LOW\n                 0.403    0.412    0.472      0.403    0.435      -0.009   0.488     0.513     HIGH\nWeighted Avg.    0.500    0.509    0.497      0.500    0.496      -0.009   0.488     0.508     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 40 28 |  a = LOW\n 37 25 |  b = HIGH\n\n"}, {"i": 308, "mesure": 0.451, "algo_params": " -U -M 3 -Q 49 -O -B", "bagging_params": " -O -S 95 -num-slots 27 -I 23 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          63               48.4615 %\nIncorrectly Classified Instances        67               51.5385 %\nKappa statistic                         -0.0471\nMean absolute error                      0.5086\nRoot mean squared error                  0.541 \nRelative absolute error                101.8822 %\nRoot relative squared error            108.2674 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.647    0.694    0.506      0.647    0.568      -0.049   0.451     0.500     LOW\n                 0.306    0.353    0.442      0.306    0.362      -0.049   0.451     0.509     HIGH\nWeighted Avg.    0.485    0.531    0.475      0.485    0.470      -0.049   0.451     0.504     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 44 24 |  a = LOW\n 43 19 |  b = HIGH\n\n"}, {"i": 309, "mesure": 0.468, "algo_params": " -C 0.6543427583391545 -M 11 -Q 47 -O -S -A -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 89 -S 95 -num-slots 20 -I 24 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          64               49.2308 %\nIncorrectly Classified Instances        66               50.7692 %\nKappa statistic                         -0.0308\nMean absolute error                      0.5   \nRoot mean squared error                  0.5221\nRelative absolute error                100.1715 %\nRoot relative squared error            104.4795 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.647    0.677    0.512      0.647    0.571      -0.032   0.468     0.486     LOW\n                 0.323    0.353    0.455      0.323    0.377      -0.032   0.468     0.524     HIGH\nWeighted Avg.    0.492    0.523    0.484      0.492    0.479      -0.032   0.468     0.504     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 44 24 |  a = LOW\n 42 20 |  b = HIGH\n\n"}, {"i": 310, "mesure": 0.469, "algo_params": " -C 0.848406985208927 -M 37 -O -B -L -J", "bagging_params": " -O -S 78 -I 16 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          64               49.2308 %\nIncorrectly Classified Instances        66               50.7692 %\nKappa statistic                         -0.0413\nMean absolute error                      0.5004\nRoot mean squared error                  0.5029\nRelative absolute error                100.2527 %\nRoot relative squared error            100.6406 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.750    0.790    0.510      0.750    0.607      -0.048   0.469     0.534     LOW\n                 0.210    0.250    0.433      0.210    0.283      -0.048   0.469     0.458     HIGH\nWeighted Avg.    0.492    0.533    0.473      0.492    0.452      -0.048   0.469     0.498     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 51 17 |  a = LOW\n 49 13 |  b = HIGH\n\n"}, {"i": 311, "mesure": 0, "algo_params": " -N 99 -R -M 122 -Q 7 -O -S -doNotMakeSplitPointActualValue", "bagging_params": " -P 11 -S 33", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tweka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tat weka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 312, "mesure": 0, "algo_params": " -N 73 -R -O -B -L -A -doNotMakeSplitPointActualValue", "bagging_params": " -P 85 -O -S 100 -num-slots 14 -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.NullPointerException\n\tweka.classifiers.trees.j48.ClassifierTree.getProbsLaplace(ClassifierTree.java:646)\n\tweka.classifiers.trees.j48.ClassifierTree.distributionForInstance(ClassifierTree.java:286)\n\tweka.classifiers.trees.J48.distributionForInstance(J48.java:327)\n\tweka.classifiers.meta.Bagging.buildClassifier(Bagging.java:751)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.classifiers.trees.j48.ClassifierTree.getProbsLaplace(ClassifierTree.java:646)\n\tat weka.classifiers.trees.j48.ClassifierTree.distributionForInstance(ClassifierTree.java:286)\n\tat weka.classifiers.trees.J48.distributionForInstance(J48.java:327)\n\tat weka.classifiers.meta.Bagging.buildClassifier(Bagging.java:751)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 313, "mesure": 0, "algo_params": " -N 83 -R -J", "bagging_params": " -S 64 -num-slots 19 -I 2 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.NullPointerException\n\tweka.classifiers.trees.j48.ClassifierTree.getProbs(ClassifierTree.java:684)\n\tweka.classifiers.trees.j48.ClassifierTree.distributionForInstance(ClassifierTree.java:284)\n\tweka.classifiers.trees.J48.distributionForInstance(J48.java:327)\n\tweka.classifiers.meta.Bagging.distributionForInstance(Bagging.java:804)\n\tweka.classifiers.evaluation.Evaluation.evaluationForSingleInstance(Evaluation.java:2192)\n\tweka.classifiers.evaluation.Evaluation.evaluateModelOnceAndRecordPrediction(Evaluation.java:2230)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1907)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.classifiers.trees.j48.ClassifierTree.getProbs(ClassifierTree.java:684)\n\tat weka.classifiers.trees.j48.ClassifierTree.distributionForInstance(ClassifierTree.java:284)\n\tat weka.classifiers.trees.J48.distributionForInstance(J48.java:327)\n\tat weka.classifiers.meta.Bagging.distributionForInstance(Bagging.java:804)\n\tat weka.classifiers.evaluation.Evaluation.evaluationForSingleInstance(Evaluation.java:2192)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModelOnceAndRecordPrediction(Evaluation.java:2230)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1907)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 314, "mesure": 0.458, "algo_params": " -C 0.736969823396783 -Q 54 -O -B -doNotMakeSplitPointActualValue", "bagging_params": " -P 26 -num-slots 29 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          62               47.6923 %\nIncorrectly Classified Instances        68               52.3077 %\nKappa statistic                         -0.0559\nMean absolute error                      0.5117\nRoot mean squared error                  0.5376\nRelative absolute error                102.5118 %\nRoot relative squared error            107.5956 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.574    0.629    0.500      0.574    0.534      -0.057   0.458     0.511     LOW\n                 0.371    0.426    0.442      0.371    0.404      -0.057   0.458     0.471     HIGH\nWeighted Avg.    0.477    0.532    0.472      0.477    0.472      -0.057   0.458     0.492     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 39 29 |  a = LOW\n 39 23 |  b = HIGH\n\n"}, {"i": 315, "mesure": 0.478, "algo_params": " -C 0.6998119962975203 -M 128 -Q 105 -O -B -L -A -J", "bagging_params": " -O -num-slots 20 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4993\nRoot mean squared error                  0.4999\nRelative absolute error                100.0376 %\nRoot relative squared error            100.0516 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.478     0.506     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.478     0.465     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.478     0.486     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 316, "mesure": 0.475, "algo_params": " -C 0.587991338799764 -M 34 -S -L -A -J", "bagging_params": " -P 32 -S 69 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                         -0.0188\nMean absolute error                      0.5007\nRoot mean squared error                  0.5017\nRelative absolute error                100.3185 %\nRoot relative squared error            100.4084 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.691    0.710    0.516      0.691    0.591      -0.020   0.475     0.502     LOW\n                 0.290    0.309    0.462      0.290    0.356      -0.020   0.475     0.464     HIGH\nWeighted Avg.    0.500    0.519    0.490      0.500    0.479      -0.020   0.475     0.484     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 47 21 |  a = LOW\n 44 18 |  b = HIGH\n\n"}, {"i": 317, "mesure": 0.491, "algo_params": " -C 0.7421646246257468 -M 91 -O -S -L -A", "bagging_params": " -P 99 -S 43 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          67               51.5385 %\nIncorrectly Classified Instances        63               48.4615 %\nKappa statistic                         -0.0064\nMean absolute error                      0.4993\nRoot mean squared error                  0.4999\nRelative absolute error                100.0208 %\nRoot relative squared error            100.0367 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.897    0.903    0.521      0.897    0.659      -0.010   0.491     0.519     LOW\n                 0.097    0.103    0.462      0.097    0.160      -0.010   0.491     0.470     HIGH\nWeighted Avg.    0.515    0.522    0.493      0.515    0.421      -0.010   0.491     0.496     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 61  7 |  a = LOW\n 56  6 |  b = HIGH\n\n"}, {"i": 318, "mesure": 0.511, "algo_params": " -C 0.6293591117185856 -O -S -doNotMakeSplitPointActualValue", "bagging_params": " -P 86 -I 26 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          61               46.9231 %\nIncorrectly Classified Instances        69               53.0769 %\nKappa statistic                         -0.0737\nMean absolute error                      0.493 \nRoot mean squared error                  0.5249\nRelative absolute error                 98.7691 %\nRoot relative squared error            105.0389 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.588    0.661    0.494      0.588    0.537      -0.075   0.511     0.552     LOW\n                 0.339    0.412    0.429      0.339    0.378      -0.075   0.511     0.546     HIGH\nWeighted Avg.    0.469    0.542    0.463      0.469    0.461      -0.075   0.511     0.549     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 40 28 |  a = LOW\n 41 21 |  b = HIGH\n\n"}, {"i": 319, "mesure": 0.467, "algo_params": " -C 0.8373460282153039 -Q 95 -B -S -A -J -doNotMakeSplitPointActualValue", "bagging_params": " -O -num-slots 25 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          61               46.9231 %\nIncorrectly Classified Instances        69               53.0769 %\nKappa statistic                         -0.0737\nMean absolute error                      0.5066\nRoot mean squared error                  0.5493\nRelative absolute error                101.4982 %\nRoot relative squared error            109.9377 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.588    0.661    0.494      0.588    0.537      -0.075   0.467     0.492     LOW\n                 0.339    0.412    0.429      0.339    0.378      -0.075   0.467     0.496     HIGH\nWeighted Avg.    0.469    0.542    0.463      0.469    0.461      -0.075   0.467     0.494     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 40 28 |  a = LOW\n 41 21 |  b = HIGH\n\n"}, {"i": 320, "mesure": 0, "algo_params": " -N 102 -R -M 58 -Q 68 -O -B -L -doNotMakeSplitPointActualValue", "bagging_params": " -P 10 -S 130 -I 23 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tweka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers(ParallelIteratedSingleClassifierEnhancer.java:229)\n\tat weka.classifiers.meta.Bagging.buildClassifier(Bagging.java:724)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1623)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 321, "mesure": 0.516, "algo_params": " -U -Q 74 -O -doNotMakeSplitPointActualValue", "bagging_params": " -O -S 59 -I 24 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                          0.0048\nMean absolute error                      0.4875\nRoot mean squared error                  0.5245\nRelative absolute error                 97.6674 %\nRoot relative squared error            104.9679 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.618    0.613    0.525      0.618    0.568      0.005    0.516     0.571     LOW\n                 0.387    0.382    0.480      0.387    0.429      0.005    0.516     0.555     HIGH\nWeighted Avg.    0.508    0.503    0.504      0.508    0.501      0.005    0.516     0.563     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 42 26 |  a = LOW\n 38 24 |  b = HIGH\n\n"}, {"i": 322, "mesure": 0.494, "algo_params": " -C 0.540495713772017 -Q 60 -O -S -L -A -J", "bagging_params": " -P 5 -O -S 120 -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          61               46.9231 %\nIncorrectly Classified Instances        69               53.0769 %\nKappa statistic                         -0.0707\nMean absolute error                      0.5001\nRoot mean squared error                  0.5133\nRelative absolute error                100.1904 %\nRoot relative squared error            102.7178 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.559    0.629    0.494      0.559    0.524      -0.071   0.494     0.530     LOW\n                 0.371    0.441    0.434      0.371    0.400      -0.071   0.494     0.492     HIGH\nWeighted Avg.    0.469    0.539    0.465      0.469    0.465      -0.071   0.494     0.512     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 38 30 |  a = LOW\n 39 23 |  b = HIGH\n\n"}, {"i": 323, "mesure": 0, "algo_params": " -U -O -doNotMakeSplitPointActualValue -U -M 82 -Q 6", "bagging_params": " -num-slots 12 -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\n\nWeka exception: Illegal options: -U \n\nGeneral options:\n\n-h or -help\n\tOutput help information.\n-synopsis or -info\n\tOutput synopsis for classifier (use in conjunction  with -h)\n-t <name of training file>\n\tSets training file.\n-T <name of test file>\n\tSets test file. If missing, a cross-validation will be performed\n\ton the training data.\n-c <class index>\n\tSets index of class attribute (default: last).\n-x <number of folds>\n\tSets number of folds for cross-validation (default: 10).\n-no-cv\n\tDo not perform any cross validation.\n-force-batch-training\n\tAlways train classifier in batch mode, never incrementally.\n-split-percentage <percentage>\n\tSets the percentage for the train/test set split, e.g., 66.\n-preserve-order\n\tPreserves the order in the percentage split.\n-s <random number seed>\n\tSets random number seed for cross-validation or percentage split\n\t(default: 1).\n-m <name of file with cost matrix>\n\tSets file with cost matrix.\n-toggle <comma-separated list of evaluation metric names>\n\tComma separated list of metric names to toggle in the output.\n\tAll metrics are output by default with the exception of 'Coverage' and 'Region size'.\n\tAvailable metrics:\n\tCorrect,Incorrect,Kappa,Total cost,Average cost,KB relative,KB information,\n\tCorrelation,Complexity 0,Complexity scheme,Complexity improvement,\n\tMAE,RMSE,RAE,RRSE,Coverage,Region size,TP rate,FP rate,Precision,Recall,\n\tF-measure,MCC,ROC area,PRC area\n-l <name of input file>\n\tSets model input file. In case the filename ends with '.xml',\n\ta PMML file is loaded or, if that fails, options are loaded\n\tfrom the XML file.\n-d <name of output file>\n\tSets model output file. In case the filename ends with '.xml',\n\tonly the options are saved to the XML file, not the model.\n-v\n\tOutputs no statistics for training data.\n-o\n\tOutputs statistics only, not the classifier.\n-output-models-for-training-splits\n\tOutput models for training splits if cross-validation or percentage-split evaluation is used.\n-do-not-output-per-class-statistics\n\tDo not output statistics for each class.\n-k\n\tOutputs information-theoretic statistics.\n-classifications \"weka.classifiers.evaluation.output.prediction.AbstractOutput + options\"\n\tUses the specified class for generating the classification output.\n\tE.g.: weka.classifiers.evaluation.output.prediction.PlainText\n-p range\n\tOutputs predictions for test instances (or the train instances if\n\tno test instances provided and -no-cv is used), along with the \n\tattributes in the specified range (and nothing else). \n\tUse '-p 0' if no attributes are desired.\n\tDeprecated: use \"-classifications ...\" instead.\n-distribution\n\tOutputs the distribution instead of only the prediction\n\tin conjunction with the '-p' option (only nominal classes).\n\tDeprecated: use \"-classifications ...\" instead.\n-r\n\tOnly outputs cumulative margin distribution.\n-xml filename | xml-string\n\tRetrieves the options from the XML-data instead of the command line.\n-threshold-file <file>\n\tThe file to save the threshold data to.\n\tThe format is determined by the extensions, e.g., '.arff' for ARFF \n\tformat or '.csv' for CSV.\n-threshold-label <label>\n\tThe class label to determine the threshold data for\n\t(default is the first label)\n-no-predictions\n\tTurns off the collection of predictions in order to conserve memory.\n\nOptions specific to weka.classifiers.meta.Bagging:\n\n-P\n\tSize of each bag, as a percentage of the\n\ttraining set size. (default 100)\n-O\n\tCalculate the out of bag error.\n-store-out-of-bag-predictions\n\tWhether to store out of bag predictions in internal evaluation object.\n-output-out-of-bag-complexity-statistics\n\tWhether to output complexity-based statistics when out-of-bag evaluation is performed.\n-represent-copies-using-weights\n\tRepresent copies of instances using weights rather than explicitly.\n-print\n\tPrint the individual classifiers in the output\n-S <num>\n\tRandom number seed.\n\t(default 1)\n-num-slots <num>\n\tNumber of execution slots.\n\t(default 1 - i.e. no parallelism)\n\t(use 0 to auto-detect number of cores)\n-I <num>\n\tNumber of iterations.\n\t(current value 10)\n-W <classifier name>\n\tFull name of base classifier.\n\t(default: weka.classifiers.trees.REPTree)\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\nOptions specific to classifier weka.classifiers.trees.J48:\n\n-U\n\tUse unpruned tree.\n-O\n\tDo not collapse tree.\n-C <pruning confidence>\n\tSet confidence threshold for pruning.\n\t(default 0.25)\n-M <minimum number of instances>\n\tSet minimum number of instances per leaf.\n\t(default 2)\n-R\n\tUse reduced error pruning.\n-N <number of folds>\n\tSet number of folds for reduced error\n\tpruning. One fold is used as pruning set.\n\t(default 3)\n-B\n\tUse binary splits only.\n-S\n\tDo not perform subtree raising.\n-L\n\tDo not clean up after the tree has been built.\n-A\n\tLaplace smoothing for predicted probabilities.\n-J\n\tDo not use MDL correction for info gain on numeric attributes.\n-Q <seed>\n\tSeed for random data shuffling (default 1).\n-doNotMakeSplitPointActualValue\n\tDo not make split point actual value.\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\n"}, {"i": 324, "mesure": 0.5, "algo_params": " -U -M 67 -O", "bagging_params": " -P 87 -S 122 -I 30 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4989\nRoot mean squared error                  0.4997\nRelative absolute error                 99.9578 %\nRoot relative squared error             99.9955 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.500     0.522     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.500     0.478     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.500     0.501     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 325, "mesure": 0.471, "algo_params": " -N 30 -R -O -B -S", "bagging_params": " -P 68 -O -I 10 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          64               49.2308 %\nIncorrectly Classified Instances        66               50.7692 %\nKappa statistic                         -0.0352\nMean absolute error                      0.4999\nRoot mean squared error                  0.5026\nRelative absolute error                100.1524 %\nRoot relative squared error            100.5814 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.691    0.726    0.511      0.691    0.588      -0.038   0.471     0.531     LOW\n                 0.274    0.309    0.447      0.274    0.340      -0.038   0.471     0.466     HIGH\nWeighted Avg.    0.492    0.527    0.481      0.492    0.469      -0.038   0.471     0.500     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 47 21 |  a = LOW\n 45 17 |  b = HIGH\n\n"}, {"i": 326, "mesure": 0.535, "algo_params": " -U -M 7 -Q 44 -B -doNotMakeSplitPointActualValue", "bagging_params": " -num-slots 28 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                          0.0076\nMean absolute error                      0.4845\nRoot mean squared error                  0.5221\nRelative absolute error                 97.0683 %\nRoot relative squared error            104.4864 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.588    0.581    0.526      0.588    0.556      0.008    0.535     0.577     LOW\n                 0.419    0.412    0.481      0.419    0.448      0.008    0.535     0.536     HIGH\nWeighted Avg.    0.508    0.500    0.505      0.508    0.504      0.008    0.535     0.558     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 40 28 |  a = LOW\n 36 26 |  b = HIGH\n\n"}, {"i": 327, "mesure": 0, "algo_params": " -U -O -doNotMakeSplitPointActualValue -C 0.9087137630663158 -M 40 -O -doNotMakeSplitPointActualValue", "bagging_params": " -O -S 104 -num-slots 15 -I 3 -represent-copies-using-weights", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\n\nWeka exception: Doesn't make sense to change confidence for unpruned tree!\n\nGeneral options:\n\n-h or -help\n\tOutput help information.\n-synopsis or -info\n\tOutput synopsis for classifier (use in conjunction  with -h)\n-t <name of training file>\n\tSets training file.\n-T <name of test file>\n\tSets test file. If missing, a cross-validation will be performed\n\ton the training data.\n-c <class index>\n\tSets index of class attribute (default: last).\n-x <number of folds>\n\tSets number of folds for cross-validation (default: 10).\n-no-cv\n\tDo not perform any cross validation.\n-force-batch-training\n\tAlways train classifier in batch mode, never incrementally.\n-split-percentage <percentage>\n\tSets the percentage for the train/test set split, e.g., 66.\n-preserve-order\n\tPreserves the order in the percentage split.\n-s <random number seed>\n\tSets random number seed for cross-validation or percentage split\n\t(default: 1).\n-m <name of file with cost matrix>\n\tSets file with cost matrix.\n-toggle <comma-separated list of evaluation metric names>\n\tComma separated list of metric names to toggle in the output.\n\tAll metrics are output by default with the exception of 'Coverage' and 'Region size'.\n\tAvailable metrics:\n\tCorrect,Incorrect,Kappa,Total cost,Average cost,KB relative,KB information,\n\tCorrelation,Complexity 0,Complexity scheme,Complexity improvement,\n\tMAE,RMSE,RAE,RRSE,Coverage,Region size,TP rate,FP rate,Precision,Recall,\n\tF-measure,MCC,ROC area,PRC area\n-l <name of input file>\n\tSets model input file. In case the filename ends with '.xml',\n\ta PMML file is loaded or, if that fails, options are loaded\n\tfrom the XML file.\n-d <name of output file>\n\tSets model output file. In case the filename ends with '.xml',\n\tonly the options are saved to the XML file, not the model.\n-v\n\tOutputs no statistics for training data.\n-o\n\tOutputs statistics only, not the classifier.\n-output-models-for-training-splits\n\tOutput models for training splits if cross-validation or percentage-split evaluation is used.\n-do-not-output-per-class-statistics\n\tDo not output statistics for each class.\n-k\n\tOutputs information-theoretic statistics.\n-classifications \"weka.classifiers.evaluation.output.prediction.AbstractOutput + options\"\n\tUses the specified class for generating the classification output.\n\tE.g.: weka.classifiers.evaluation.output.prediction.PlainText\n-p range\n\tOutputs predictions for test instances (or the train instances if\n\tno test instances provided and -no-cv is used), along with the \n\tattributes in the specified range (and nothing else). \n\tUse '-p 0' if no attributes are desired.\n\tDeprecated: use \"-classifications ...\" instead.\n-distribution\n\tOutputs the distribution instead of only the prediction\n\tin conjunction with the '-p' option (only nominal classes).\n\tDeprecated: use \"-classifications ...\" instead.\n-r\n\tOnly outputs cumulative margin distribution.\n-xml filename | xml-string\n\tRetrieves the options from the XML-data instead of the command line.\n-threshold-file <file>\n\tThe file to save the threshold data to.\n\tThe format is determined by the extensions, e.g., '.arff' for ARFF \n\tformat or '.csv' for CSV.\n-threshold-label <label>\n\tThe class label to determine the threshold data for\n\t(default is the first label)\n-no-predictions\n\tTurns off the collection of predictions in order to conserve memory.\n\nOptions specific to weka.classifiers.meta.Bagging:\n\n-P\n\tSize of each bag, as a percentage of the\n\ttraining set size. (default 100)\n-O\n\tCalculate the out of bag error.\n-store-out-of-bag-predictions\n\tWhether to store out of bag predictions in internal evaluation object.\n-output-out-of-bag-complexity-statistics\n\tWhether to output complexity-based statistics when out-of-bag evaluation is performed.\n-represent-copies-using-weights\n\tRepresent copies of instances using weights rather than explicitly.\n-print\n\tPrint the individual classifiers in the output\n-S <num>\n\tRandom number seed.\n\t(default 1)\n-num-slots <num>\n\tNumber of execution slots.\n\t(default 1 - i.e. no parallelism)\n\t(use 0 to auto-detect number of cores)\n-I <num>\n\tNumber of iterations.\n\t(current value 3)\n-W <classifier name>\n\tFull name of base classifier.\n\t(default: weka.classifiers.trees.REPTree)\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\nOptions specific to classifier weka.classifiers.trees.J48:\n\n-U\n\tUse unpruned tree.\n-O\n\tDo not collapse tree.\n-C <pruning confidence>\n\tSet confidence threshold for pruning.\n\t(default 0.25)\n-M <minimum number of instances>\n\tSet minimum number of instances per leaf.\n\t(default 2)\n-R\n\tUse reduced error pruning.\n-N <number of folds>\n\tSet number of folds for reduced error\n\tpruning. One fold is used as pruning set.\n\t(default 3)\n-B\n\tUse binary splits only.\n-S\n\tDo not perform subtree raising.\n-L\n\tDo not clean up after the tree has been built.\n-A\n\tLaplace smoothing for predicted probabilities.\n-J\n\tDo not use MDL correction for info gain on numeric attributes.\n-Q <seed>\n\tSeed for random data shuffling (default 1).\n-doNotMakeSplitPointActualValue\n\tDo not make split point actual value.\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\n"}, {"i": 328, "mesure": 0.482, "algo_params": " -C 0.5636392627294602 -M 23 -O -A -J", "bagging_params": " -P 83 -S 59 -I 26", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0.0289\nMean absolute error                      0.501 \nRoot mean squared error                  0.5117\nRelative absolute error                100.3767 %\nRoot relative squared error            102.4106 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.706    0.677    0.533      0.706    0.608      0.031    0.482     0.524     LOW\n                 0.323    0.294    0.500      0.323    0.392      0.031    0.482     0.461     HIGH\nWeighted Avg.    0.523    0.495    0.517      0.523    0.505      0.031    0.482     0.494     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 48 20 |  a = LOW\n 42 20 |  b = HIGH\n\n"}, {"i": 329, "mesure": 0.481, "algo_params": " -C 0.9693750101661328 -M 80 -L -A -J", "bagging_params": " -O -I 19 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4994\nRoot mean squared error                  0.4998\nRelative absolute error                100.0573 %\nRoot relative squared error            100.0317 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.481     0.508     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.481     0.466     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.481     0.488     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 330, "mesure": 0, "algo_params": " -N 125 -R -Q 48 -O -S -L", "bagging_params": " -P 47 -num-slots 13 -store-out-of-bag-predictions", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.IllegalArgumentException: Can't have more folds than instances!\n\tweka.core.Instances.trainCV(Instances.java:1896)\n\tweka.core.Instances.trainCV(Instances.java:1932)\n\tweka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tweka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tweka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tjava.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tjava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tjava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tjava.base/java.lang.Thread.run(Thread.java:844)\n\n\tat weka.core.Instances.trainCV(Instances.java:1896)\n\tat weka.core.Instances.trainCV(Instances.java:1932)\n\tat weka.classifiers.trees.j48.PruneableClassifierTree.buildClassifier(PruneableClassifierTree.java:96)\n\tat weka.classifiers.trees.J48.buildClassifier(J48.java:295)\n\tat weka.classifiers.ParallelIteratedSingleClassifierEnhancer$1.run(ParallelIteratedSingleClassifierEnhancer.java:203)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\njava.lang.NullPointerException\n\tweka.classifiers.trees.j48.ClassifierTree.getProbs(ClassifierTree.java:684)\n\tweka.classifiers.trees.j48.ClassifierTree.distributionForInstance(ClassifierTree.java:284)\n\tweka.classifiers.trees.J48.distributionForInstance(J48.java:327)\n\tweka.classifiers.meta.Bagging.distributionForInstance(Bagging.java:804)\n\tweka.classifiers.evaluation.Evaluation.evaluationForSingleInstance(Evaluation.java:2192)\n\tweka.classifiers.evaluation.Evaluation.evaluateModelOnceAndRecordPrediction(Evaluation.java:2230)\n\tweka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1907)\n\tweka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tweka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tweka.classifiers.meta.Bagging.main(Bagging.java:919)\n\n\tat weka.classifiers.trees.j48.ClassifierTree.getProbs(ClassifierTree.java:684)\n\tat weka.classifiers.trees.j48.ClassifierTree.distributionForInstance(ClassifierTree.java:284)\n\tat weka.classifiers.trees.J48.distributionForInstance(J48.java:327)\n\tat weka.classifiers.meta.Bagging.distributionForInstance(Bagging.java:804)\n\tat weka.classifiers.evaluation.Evaluation.evaluationForSingleInstance(Evaluation.java:2192)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModelOnceAndRecordPrediction(Evaluation.java:2230)\n\tat weka.classifiers.evaluation.Evaluation.evaluateModel(Evaluation.java:1907)\n\tat weka.classifiers.Evaluation.evaluateModel(Evaluation.java:668)\n\tat weka.classifiers.AbstractClassifier.runClassifier(AbstractClassifier.java:141)\n\tat weka.classifiers.meta.Bagging.main(Bagging.java:919)\n"}, {"i": 331, "mesure": 0.485, "algo_params": " -U -M 88 -Q 92 -doNotMakeSplitPointActualValue", "bagging_params": " -O -S 70 -num-slots 27 -I 15 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4993\nRoot mean squared error                  0.4998\nRelative absolute error                100.0305 %\nRoot relative squared error            100.0276 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.485     0.510     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.485     0.468     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.485     0.490     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 332, "mesure": 0.5, "algo_params": " -N 3 -R -M 94 -Q 110 -O -L -doNotMakeSplitPointActualValue", "bagging_params": " -P 93 -num-slots 9 -I 5 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4988\nRoot mean squared error                  0.4999\nRelative absolute error                 99.9316 %\nRoot relative squared error            100.0473 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.500     0.522     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.500     0.478     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.500     0.501     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 333, "mesure": 0.494, "algo_params": " -C 0.3036306024979559 -M 129 -B -A -J", "bagging_params": " -O -S 50 -num-slots 22 -I 22 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.499 \nRoot mean squared error                  0.4995\nRelative absolute error                 99.9664 %\nRoot relative squared error             99.9646 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.494     0.524     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.494     0.470     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.494     0.498     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 334, "mesure": 0.478, "algo_params": " -U -M 67 -O -doNotMakeSplitPointActualValue", "bagging_params": " -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4993\nRoot mean squared error                  0.5   \nRelative absolute error                100.0353 %\nRoot relative squared error            100.0534 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.478     0.506     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.478     0.465     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.478     0.486     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 335, "mesure": 0.488, "algo_params": " -U -M 36 -O -B -doNotMakeSplitPointActualValue", "bagging_params": " -P 34 -num-slots 27 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                         -0.0127\nMean absolute error                      0.4994\nRoot mean squared error                  0.5003\nRelative absolute error                100.0459 %\nRoot relative squared error            100.1162 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.794    0.806    0.519      0.794    0.628      -0.015   0.488     0.520     LOW\n                 0.194    0.206    0.462      0.194    0.273      -0.015   0.488     0.468     HIGH\nWeighted Avg.    0.508    0.520    0.492      0.508    0.459      -0.015   0.488     0.495     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 54 14 |  a = LOW\n 50 12 |  b = HIGH\n\n"}, {"i": 336, "mesure": 0.486, "algo_params": " -C 0.6462804202310842 -M 106 -B -A -J", "bagging_params": " -O -num-slots 3 -I 5 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4992\nRoot mean squared error                  0.5001\nRelative absolute error                100.013  %\nRoot relative squared error            100.0894 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.486     0.514     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.486     0.468     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.486     0.492     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 337, "mesure": 0.481, "algo_params": " -C 0.9031484813728665 -M 50 -Q 128 -O -S -L -A", "bagging_params": " -P 16 -O -S 106 -num-slots 30 -I 20 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          66               50.7692 %\nIncorrectly Classified Instances        64               49.2308 %\nKappa statistic                         -0.0127\nMean absolute error                      0.4994\nRoot mean squared error                  0.501 \nRelative absolute error                100.0566 %\nRoot relative squared error            100.2687 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.794    0.806    0.519      0.794    0.628      -0.015   0.481     0.508     LOW\n                 0.194    0.206    0.462      0.194    0.273      -0.015   0.481     0.466     HIGH\nWeighted Avg.    0.508    0.520    0.492      0.508    0.459      -0.015   0.481     0.488     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 54 14 |  a = LOW\n 50 12 |  b = HIGH\n\n"}, {"i": 338, "mesure": 0.502, "algo_params": " -C 0.3115284289395521 -M 99 -B -J -doNotMakeSplitPointActualValue", "bagging_params": " -P 67 -num-slots 11 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4992\nRoot mean squared error                  0.4996\nRelative absolute error                100.0044 %\nRoot relative squared error             99.9875 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.502     0.522     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.502     0.482     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.502     0.503     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 339, "mesure": 0.488, "algo_params": " -C 0.8352464699259506 -M 73 -A -J", "bagging_params": " -O -num-slots 25 -I 11 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4992\nRoot mean squared error                  0.4997\nRelative absolute error                100.0153 %\nRoot relative squared error            100.0123 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.488     0.512     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.488     0.469     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.488     0.491     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 340, "mesure": 0.399, "algo_params": " -U -M 53 -O", "bagging_params": " -S 60 -num-slots 19 -I 30 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          60               46.1538 %\nIncorrectly Classified Instances        70               53.8462 %\nKappa statistic                         -0.0932\nMean absolute error                      0.5091\nRoot mean squared error                  0.5133\nRelative absolute error                101.9834 %\nRoot relative squared error            102.7204 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.618    0.710    0.488      0.618    0.545      -0.097   0.399     0.461     LOW\n                 0.290    0.382    0.409      0.290    0.340      -0.097   0.399     0.440     HIGH\nWeighted Avg.    0.462    0.554    0.451      0.462    0.447      -0.097   0.399     0.451     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 42 26 |  a = LOW\n 44 18 |  b = HIGH\n\n"}, {"i": 341, "mesure": 0.377, "algo_params": " -C 0.7734441341598773 -M 38 -Q 41 -O -L", "bagging_params": " -S 129 -num-slots 22 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          51               39.2308 %\nIncorrectly Classified Instances        79               60.7692 %\nKappa statistic                         -0.2311\nMean absolute error                      0.5147\nRoot mean squared error                  0.5231\nRelative absolute error                103.113  %\nRoot relative squared error            104.6822 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.529    0.758    0.434      0.529    0.477      -0.238   0.377     0.437     LOW\n                 0.242    0.471    0.319      0.242    0.275      -0.238   0.377     0.454     HIGH\nWeighted Avg.    0.392    0.621    0.379      0.392    0.381      -0.238   0.377     0.445     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 36 32 |  a = LOW\n 47 15 |  b = HIGH\n\n"}, {"i": 342, "mesure": 0.484, "algo_params": " -C 0.3560654133375144 -Q 43 -S", "bagging_params": " -P 75 -O -num-slots 15 -I 24 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          62               47.6923 %\nIncorrectly Classified Instances        68               52.3077 %\nKappa statistic                         -0.0544\nMean absolute error                      0.4985\nRoot mean squared error                  0.5261\nRelative absolute error                 99.8616 %\nRoot relative squared error            105.2871 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.559    0.613    0.500      0.559    0.528      -0.055   0.484     0.496     LOW\n                 0.387    0.441    0.444      0.387    0.414      -0.055   0.484     0.521     HIGH\nWeighted Avg.    0.477    0.531    0.474      0.477    0.473      -0.055   0.484     0.508     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 38 30 |  a = LOW\n 38 24 |  b = HIGH\n\n"}, {"i": 343, "mesure": 0.454, "algo_params": " -C 0.14211843839598404 -M 4 -O -L -A", "bagging_params": " -P 31 -I 21 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          58               44.6154 %\nIncorrectly Classified Instances        72               55.3846 %\nKappa statistic                         -0.1212\nMean absolute error                      0.5057\nRoot mean squared error                  0.5199\nRelative absolute error                101.3161 %\nRoot relative squared error            104.0503 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.574    0.694    0.476      0.574    0.520      -0.124   0.454     0.522     LOW\n                 0.306    0.426    0.396      0.306    0.345      -0.124   0.454     0.478     HIGH\nWeighted Avg.    0.446    0.566    0.438      0.446    0.437      -0.124   0.454     0.501     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 39 29 |  a = LOW\n 43 19 |  b = HIGH\n\n"}, {"i": 344, "mesure": 0.452, "algo_params": " -C 0.4257395715235477 -Q 20 -S -J", "bagging_params": " -I 6 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          57               43.8462 %\nIncorrectly Classified Instances        73               56.1538 %\nKappa statistic                         -0.1327\nMean absolute error                      0.5123\nRoot mean squared error                  0.5724\nRelative absolute error                102.6359 %\nRoot relative squared error            114.5476 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.529    0.661    0.468      0.529    0.497      -0.134   0.452     0.478     LOW\n                 0.339    0.471    0.396      0.339    0.365      -0.134   0.452     0.519     HIGH\nWeighted Avg.    0.438    0.570    0.434      0.438    0.434      -0.134   0.452     0.498     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 36 32 |  a = LOW\n 41 21 |  b = HIGH\n\n"}, {"i": 345, "mesure": 0.534, "algo_params": " -C 0.2564539174127567 -Q 54 -O -S -L -A -J", "bagging_params": " -S 58 -I 4 -store-out-of-bag-predictions", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                         -0.0129\nMean absolute error                      0.4821\nRoot mean squared error                  0.5402\nRelative absolute error                 96.5894 %\nRoot relative squared error            108.1115 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.632    0.645    0.518      0.632    0.570      -0.013   0.534     0.539     LOW\n                 0.355    0.368    0.468      0.355    0.404      -0.013   0.534     0.553     HIGH\nWeighted Avg.    0.500    0.513    0.494      0.500    0.490      -0.013   0.534     0.546     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 43 25 |  a = LOW\n 40 22 |  b = HIGH\n\n"}, {"i": 346, "mesure": 0.478, "algo_params": " -C 0.9700245555304193 -M 117 -O -A", "bagging_params": " -num-slots 8 -store-out-of-bag-predictions -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4993\nRoot mean squared error                  0.4999\nRelative absolute error                100.0376 %\nRoot relative squared error            100.0516 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.478     0.506     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.478     0.465     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.478     0.486     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 347, "mesure": 0.425, "algo_params": " -N 18 -R -M 30 -L -A -J", "bagging_params": " -O -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          63               48.4615 %\nIncorrectly Classified Instances        67               51.5385 %\nKappa statistic                         -0.0471\nMean absolute error                      0.5064\nRoot mean squared error                  0.5101\nRelative absolute error                101.4575 %\nRoot relative squared error            102.0845 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.647    0.694    0.506      0.647    0.568      -0.049   0.425     0.463     LOW\n                 0.306    0.353    0.442      0.306    0.362      -0.049   0.425     0.442     HIGH\nWeighted Avg.    0.485    0.531    0.475      0.485    0.470      -0.049   0.425     0.453     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 44 24 |  a = LOW\n 43 19 |  b = HIGH\n\n"}, {"i": 348, "mesure": 0.488, "algo_params": " -C 0.8809120987696255 -M 42 -Q 34 -B -S -doNotMakeSplitPointActualValue", "bagging_params": " -P 81 -num-slots 23 -I 7 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          68               52.3077 %\nIncorrectly Classified Instances        62               47.6923 %\nKappa statistic                          0     \nMean absolute error                      0.4993\nRoot mean squared error                  0.4998\nRelative absolute error                100.0302 %\nRoot relative squared error            100.014  %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 1.000    1.000    0.523      1.000    0.687      ?        0.488     0.518     LOW\n                 0.000    0.000    ?          0.000    ?          ?        0.488     0.468     HIGH\nWeighted Avg.    0.523    0.523    ?          0.523    ?          ?        0.488     0.494     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 68  0 |  a = LOW\n 62  0 |  b = HIGH\n\n"}, {"i": 349, "mesure": 0.485, "algo_params": " -U -Q 49 -O -doNotMakeSplitPointActualValue", "bagging_params": " -P 49 -O -S 84 -I 21 -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          65               50      %\nIncorrectly Classified Instances        65               50      %\nKappa statistic                         -0.0086\nMean absolute error                      0.5043\nRoot mean squared error                  0.5244\nRelative absolute error                101.0252 %\nRoot relative squared error            104.9455 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.588    0.597    0.519      0.588    0.552      -0.009   0.485     0.520     LOW\n                 0.403    0.412    0.472      0.403    0.435      -0.009   0.485     0.484     HIGH\nWeighted Avg.    0.500    0.509    0.497      0.500    0.496      -0.009   0.485     0.503     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 40 28 |  a = LOW\n 37 25 |  b = HIGH\n\n"}, {"i": 350, "mesure": 0.604, "algo_params": " -N 11 -R -O -B -A -doNotMakeSplitPointActualValue", "bagging_params": " -O -num-slots 5 -I 27 -store-out-of-bag-predictions -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          74               56.9231 %\nIncorrectly Classified Instances        56               43.0769 %\nKappa statistic                          0.1242\nMean absolute error                      0.4838\nRoot mean squared error                  0.4919\nRelative absolute error                 96.9315 %\nRoot relative squared error             98.4496 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.735    0.613    0.568      0.735    0.641      0.131    0.604     0.590     LOW\n                 0.387    0.265    0.571      0.387    0.462      0.131    0.604     0.599     HIGH\nWeighted Avg.    0.569    0.447    0.570      0.569    0.555      0.131    0.604     0.595     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 50 18 |  a = LOW\n 38 24 |  b = HIGH\n\n"}, {"i": 351, "mesure": 0.441, "algo_params": " -C 0.7358250068055687 -M 49 -B", "bagging_params": " -O -I 4 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          67               51.5385 %\nIncorrectly Classified Instances        63               48.4615 %\nKappa statistic                          0.014 \nMean absolute error                      0.5081\nRoot mean squared error                  0.5183\nRelative absolute error                101.786  %\nRoot relative squared error            103.725  %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.691    0.677    0.528      0.691    0.599      0.015    0.441     0.473     LOW\n                 0.323    0.309    0.488      0.323    0.388      0.015    0.441     0.458     HIGH\nWeighted Avg.    0.515    0.502    0.509      0.515    0.498      0.015    0.441     0.466     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 47 21 |  a = LOW\n 42 20 |  b = HIGH\n\n"}, {"i": 352, "mesure": 0.507, "algo_params": " -C 0.6256175586117785 -Q 91 -O -S -A", "bagging_params": " -P 85 -num-slots 29 -I 28 -output-out-of-bag-complexity-statistics -represent-copies-using-weights", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          63               48.4615 %\nIncorrectly Classified Instances        67               51.5385 %\nKappa statistic                         -0.0456\nMean absolute error                      0.494 \nRoot mean squared error                  0.5193\nRelative absolute error                 98.9689 %\nRoot relative squared error            103.932  %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.632    0.677    0.506      0.632    0.562      -0.047   0.507     0.537     LOW\n                 0.323    0.368    0.444      0.323    0.374      -0.047   0.507     0.548     HIGH\nWeighted Avg.    0.485    0.530    0.477      0.485    0.472      -0.047   0.507     0.542     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 43 25 |  a = LOW\n 42 20 |  b = HIGH\n\n"}, {"i": 353, "mesure": 0, "algo_params": " -U -O -doNotMakeSplitPointActualValue -C 0.961751542919624 -Q 110 -O -B", "bagging_params": " -P 65 -S 8 -num-slots 19 -store-out-of-bag-predictions", "content": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by weka.core.WekaPackageClassLoaderManager (file:/home/hammi/Projects/app_mach/weka/weka.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of weka.core.WekaPackageClassLoaderManager\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\n\nWeka exception: Doesn't make sense to change confidence for unpruned tree!\n\nGeneral options:\n\n-h or -help\n\tOutput help information.\n-synopsis or -info\n\tOutput synopsis for classifier (use in conjunction  with -h)\n-t <name of training file>\n\tSets training file.\n-T <name of test file>\n\tSets test file. If missing, a cross-validation will be performed\n\ton the training data.\n-c <class index>\n\tSets index of class attribute (default: last).\n-x <number of folds>\n\tSets number of folds for cross-validation (default: 10).\n-no-cv\n\tDo not perform any cross validation.\n-force-batch-training\n\tAlways train classifier in batch mode, never incrementally.\n-split-percentage <percentage>\n\tSets the percentage for the train/test set split, e.g., 66.\n-preserve-order\n\tPreserves the order in the percentage split.\n-s <random number seed>\n\tSets random number seed for cross-validation or percentage split\n\t(default: 1).\n-m <name of file with cost matrix>\n\tSets file with cost matrix.\n-toggle <comma-separated list of evaluation metric names>\n\tComma separated list of metric names to toggle in the output.\n\tAll metrics are output by default with the exception of 'Coverage' and 'Region size'.\n\tAvailable metrics:\n\tCorrect,Incorrect,Kappa,Total cost,Average cost,KB relative,KB information,\n\tCorrelation,Complexity 0,Complexity scheme,Complexity improvement,\n\tMAE,RMSE,RAE,RRSE,Coverage,Region size,TP rate,FP rate,Precision,Recall,\n\tF-measure,MCC,ROC area,PRC area\n-l <name of input file>\n\tSets model input file. In case the filename ends with '.xml',\n\ta PMML file is loaded or, if that fails, options are loaded\n\tfrom the XML file.\n-d <name of output file>\n\tSets model output file. In case the filename ends with '.xml',\n\tonly the options are saved to the XML file, not the model.\n-v\n\tOutputs no statistics for training data.\n-o\n\tOutputs statistics only, not the classifier.\n-output-models-for-training-splits\n\tOutput models for training splits if cross-validation or percentage-split evaluation is used.\n-do-not-output-per-class-statistics\n\tDo not output statistics for each class.\n-k\n\tOutputs information-theoretic statistics.\n-classifications \"weka.classifiers.evaluation.output.prediction.AbstractOutput + options\"\n\tUses the specified class for generating the classification output.\n\tE.g.: weka.classifiers.evaluation.output.prediction.PlainText\n-p range\n\tOutputs predictions for test instances (or the train instances if\n\tno test instances provided and -no-cv is used), along with the \n\tattributes in the specified range (and nothing else). \n\tUse '-p 0' if no attributes are desired.\n\tDeprecated: use \"-classifications ...\" instead.\n-distribution\n\tOutputs the distribution instead of only the prediction\n\tin conjunction with the '-p' option (only nominal classes).\n\tDeprecated: use \"-classifications ...\" instead.\n-r\n\tOnly outputs cumulative margin distribution.\n-xml filename | xml-string\n\tRetrieves the options from the XML-data instead of the command line.\n-threshold-file <file>\n\tThe file to save the threshold data to.\n\tThe format is determined by the extensions, e.g., '.arff' for ARFF \n\tformat or '.csv' for CSV.\n-threshold-label <label>\n\tThe class label to determine the threshold data for\n\t(default is the first label)\n-no-predictions\n\tTurns off the collection of predictions in order to conserve memory.\n\nOptions specific to weka.classifiers.meta.Bagging:\n\n-P\n\tSize of each bag, as a percentage of the\n\ttraining set size. (default 100)\n-O\n\tCalculate the out of bag error.\n-store-out-of-bag-predictions\n\tWhether to store out of bag predictions in internal evaluation object.\n-output-out-of-bag-complexity-statistics\n\tWhether to output complexity-based statistics when out-of-bag evaluation is performed.\n-represent-copies-using-weights\n\tRepresent copies of instances using weights rather than explicitly.\n-print\n\tPrint the individual classifiers in the output\n-S <num>\n\tRandom number seed.\n\t(default 1)\n-num-slots <num>\n\tNumber of execution slots.\n\t(default 1 - i.e. no parallelism)\n\t(use 0 to auto-detect number of cores)\n-I <num>\n\tNumber of iterations.\n\t(current value 10)\n-W <classifier name>\n\tFull name of base classifier.\n\t(default: weka.classifiers.trees.REPTree)\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\nOptions specific to classifier weka.classifiers.trees.J48:\n\n-U\n\tUse unpruned tree.\n-O\n\tDo not collapse tree.\n-C <pruning confidence>\n\tSet confidence threshold for pruning.\n\t(default 0.25)\n-M <minimum number of instances>\n\tSet minimum number of instances per leaf.\n\t(default 2)\n-R\n\tUse reduced error pruning.\n-N <number of folds>\n\tSet number of folds for reduced error\n\tpruning. One fold is used as pruning set.\n\t(default 3)\n-B\n\tUse binary splits only.\n-S\n\tDo not perform subtree raising.\n-L\n\tDo not clean up after the tree has been built.\n-A\n\tLaplace smoothing for predicted probabilities.\n-J\n\tDo not use MDL correction for info gain on numeric attributes.\n-Q <seed>\n\tSeed for random data shuffling (default 1).\n-doNotMakeSplitPointActualValue\n\tDo not make split point actual value.\n-output-debug-info\n\tIf set, classifier is run in debug mode and\n\tmay output additional info to the console\n-do-not-check-capabilities\n\tIf set, classifier capabilities are not checked before classifier is built\n\t(use with caution).\n-num-decimal-places\n\tThe number of decimal places for the output of numbers in the model (default 2).\n-batch-size\n\tThe desired batch size for batch prediction  (default 100).\n\n"}, {"i": 354, "mesure": 0.381, "algo_params": " -N 117 -R -M 31 -Q 86 -O -B -S -L", "bagging_params": " -O -num-slots 28 -I 21 -output-out-of-bag-complexity-statistics", "content": "Stratified cross-validation ===\n\nCorrectly Classified Instances          61               46.9231 %\nIncorrectly Classified Instances        69               53.0769 %\nKappa statistic                         -0.0831\nMean absolute error                      0.5086\nRoot mean squared error                  0.5113\nRelative absolute error                101.889  %\nRoot relative squared error            102.3187 %\nTotal Number of Instances              130     \n\n\n=== Detailed Accuracy By Class ===\n\n                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class\n                 0.676    0.758    0.495      0.676    0.571      -0.090   0.381     0.449     LOW\n                 0.242    0.324    0.405      0.242    0.303      -0.090   0.381     0.423     HIGH\nWeighted Avg.    0.469    0.551    0.452      0.469    0.443      -0.090   0.381     0.436     \n\n\n=== Confusion Matrix ===\n\n  a  b   <-- classified as\n 46 22 |  a = LOW\n 47 15 |  b = HIGH\n\n"}]}, "no-bagging": {"index": 0, "algo_done": [], "results": []}}